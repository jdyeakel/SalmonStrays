(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1594850,      31232]
NotebookOptionsPosition[   1590806,      31100]
NotebookOutlinePosition[   1591166,      31116]
CellTagsIndexPosition[   1591123,      31113]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.718713183872171*^9, 3.718713190833774*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Recruit", " ", "function", " ", "for", " ", "local", " ", "and", " ", 
   "remote", " ", "pops", " ", "in", " ", "the", " ", "local", " ", "habitat",
    " ", 
   RowBox[{"(", "1", ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.718712666288125*^9, 3.718712679183023*^9}, {
  3.718713516348102*^9, 3.71871352354418*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"recruit1", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"rmax", "*", "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"\[Sigma]", "^", "2"}], "+", 
       RowBox[{"\[Tau]", "^", "2"}]}]]], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "^", "2"}], 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sigma]", "^", "2"}], "+", 
          RowBox[{"\[Tau]", "^", "2"}]}], ")"}]}]]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recruit2", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"rmax", "*", "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"\[Sigma]", "^", "2"}], "+", 
       RowBox[{"\[Tau]", "^", "2"}]}]]], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "^", "2"}], 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sigma]", "^", "2"}], "+", 
          RowBox[{"\[Tau]", "^", "2"}]}], ")"}]}]]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.71871236931693*^9, 3.718712473223765*^9}, {
  3.7187126094556217`*^9, 3.718712626667164*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"The", " ", "number", " ", "of", " ", "recruits", " ", "is"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7187126565670033`*^9, 3.7187126617007837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NR", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", "recruit1"}], " ", "+",
      " ", 
     RowBox[{"m", "*", "N2", "*", "recruit2"}]}], ")"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
       RowBox[{"m", "*", "N2"}]}], ")"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.718712634406176*^9, 3.718712650191371*^9}, {
  3.718712691269631*^9, 3.718712695666016*^9}, {3.718713138037498*^9, 
  3.718713138391025*^9}, {3.718723607818759*^9, 3.7187236340222073`*^9}, {
  3.71872368711239*^9, 3.718723693322113*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], " ", "N1"}], "+", 
       RowBox[{"m", " ", "N2"}]}], ")"}]}], " ", "\[Beta]"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "2"], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", "N1", " ", "rmax", " ", 
      "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       SuperscriptBox["\[Tau]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "2"], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", "N2",
       " ", "rmax", " ", "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       SuperscriptBox["\[Tau]", "2"]}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.718712683179298*^9, 3.7187127000012903`*^9}, 
   3.718713141075509*^9, {3.7187236766992064`*^9, 3.7187236975217648`*^9}, 
   3.718730121401586*^9, 3.7187340781487293`*^9, 3.7188084956807404`*^9, 
   3.718828892130674*^9, 3.71907129343678*^9, 3.719095463391398*^9, 
   3.7191490965236397`*^9, 3.7191597675178747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "NR", "]"}]], "Input",
 CellChangeTimes->{{3.718712810872547*^9, 3.718712811107008*^9}, {
  3.7187236951684933`*^9, 3.718723695224091*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
       RowBox[{"m", " ", "N2"}]}], ")"}], " ", "\[Beta]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "2"], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", 
      "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]"}], 
  SqrtBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "+", 
    SuperscriptBox["\[Tau]", "2"]}]]]], "Output",
 CellChangeTimes->{
  3.718712811982387*^9, {3.718723682100279*^9, 3.718723700680352*^9}, 
   3.718730122426105*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   FractionBox[
    RowBox[{"m", "*", "N2", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   FractionBox["NR", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7187130962627974`*^9, 3.718713162786289*^9}, {
  3.718714938825202*^9, 3.718714947352488*^9}, {3.718723740993349*^9, 
  3.718723773325778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"p1", "+", "p2", "+", "p3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7188390242568407`*^9, 3.7188390336828403`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.7188390278159103`*^9, 3.7188390340921917`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecruitPDF", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
          RowBox[{"m", "*", "N2"}]}]], "*", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", "y"}], "]"}]}], 
       "+", 
       RowBox[{
        FractionBox[
         RowBox[{"m", "*", "N2"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
          RowBox[{"m", "*", "N2"}]}]], "*", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", "y"}], "]"}]}]}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
          RowBox[{"m", "*", "N2"}]}]], "*", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"2", "*", "z"}], "-", "y"}]}], "]"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"m", "*", "N2"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
          RowBox[{"m", "*", "N2"}]}]], "*", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"2", "*", "z"}], "-", "y"}]}], "]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.718724108623625*^9, 3.718724301862619*^9}, 
   3.718724524285388*^9, {3.718724664433341*^9, 3.7187247088730507`*^9}, {
   3.7187313958194103`*^9, 3.7187313964045553`*^9}, {3.718731973149*^9, 
   3.718731974084058*^9}, 3.71873216744866*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.718724244210696*^9, {3.71872427781441*^9, 3.718724294445285*^9}, 
   3.7187243751376867`*^9, 3.718724559722474*^9, 3.718724837822729*^9, 
   3.7187302329555063`*^9, 3.7187319582437897`*^9, 3.718732047240498*^9, 
   3.718732290068124*^9, 3.719149103866514*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RecruitPDFsimple", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
      SqrtBox["\[Pi]"]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Mu]1", "2"]}], "+", 
        RowBox[{"\[Mu]1", " ", "\[Mu]2"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Mu]2", "2"]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"4", " ", "z", " ", "\[Mu]1"}], "+", 
          RowBox[{"\[Mu]2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]1", "+", 
             RowBox[{"2", " ", "\[Mu]2"}]}], ")"}]}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
       SuperscriptBox["N1", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"4", " ", "z", " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], "+", 
             SuperscriptBox["\[Mu]2", "2"]}], ")"}]}]}], 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
       "N2"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]1", "2"]}], "+", 
          RowBox[{"4", " ", "z", " ", "\[Mu]2"}], "+", 
          RowBox[{"\[Mu]1", " ", "\[Mu]2"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["N2", "2"]}]}], ")"}], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7187343863892813`*^9, 3.718734399063073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"RecruitPDFsimple", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.718839054418744*^9, 3.7188390617611303`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"N1", "-", 
       RowBox[{"m", " ", "N1"}], "+", 
       RowBox[{"m", " ", "N2"}]}], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
       RowBox[{"m", " ", "N2"}]}], ")"}], "2"]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     SuperscriptBox["\[Sigma]", "2"], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.7188391421221113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"N1", "-", 
      RowBox[{"m", " ", "N1"}], "+", 
      RowBox[{"m", " ", "N2"}]}], ")"}], "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
      RowBox[{"m", " ", "N2"}]}], ")"}], "2"]], "]"}]], "Input",
 CellChangeTimes->{{3.7188469743064127`*^9, 3.71884697666166*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7188469772793617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recruitmean", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"z", "*", "RecruitPDF"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.718730609392104*^9, 3.718730670081637*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"N1", " ", "\[Mu]1"}], "-", 
     RowBox[{"m", " ", "N1", " ", "\[Mu]1"}], "+", 
     RowBox[{"m", " ", "N2", " ", "\[Mu]2"}]}], 
    RowBox[{"N1", "-", 
     RowBox[{"m", " ", "N1"}], "+", 
     RowBox[{"m", " ", "N2"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     SuperscriptBox["\[Sigma]", "2"], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.718730777772044*^9, 3.7187321230457087`*^9, 
  3.7187324424910097`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recruitvar", " ", "=", " ", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "^", "2"}], "*", "RecruitPDF"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "-", 
   "  ", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"z", "*", "RecruitPDF"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "^", 
    "2"}]}]}]], "Input",
 CellChangeTimes->{{3.71873278253551*^9, 3.718732830869711*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"N1", " ", "\[Mu]1"}], "-", 
         RowBox[{"m", " ", "N1", " ", "\[Mu]1"}], "+", 
         RowBox[{"m", " ", "N2", " ", "\[Mu]2"}]}], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"N1", "-", 
         RowBox[{"m", " ", "N1"}], "+", 
         RowBox[{"m", " ", "N2"}]}], ")"}], "2"]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
       SuperscriptBox["N1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["\[Mu]1", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["N2", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["\[Mu]2", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
       "N2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     SuperscriptBox["\[Sigma]", "2"], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.718732983158081*^9}]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"recruitmeansimple", " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"N1", " ", "\[Mu]1"}], "-", 
     RowBox[{"m", " ", "N1", " ", "\[Mu]1"}], "+", 
     RowBox[{"m", " ", "N2", " ", "\[Mu]2"}]}], 
    RowBox[{"N1", "-", 
     RowBox[{"m", " ", "N1"}], "+", 
     RowBox[{"m", " ", "N2"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recruitvarsimple", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"N1", " ", "\[Mu]1"}], "-", 
         RowBox[{"m", " ", "N1", " ", "\[Mu]1"}], "+", 
         RowBox[{"m", " ", "N2", " ", "\[Mu]2"}]}], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"N1", "-", 
         RowBox[{"m", " ", "N1"}], "+", 
         RowBox[{"m", " ", "N2"}]}], ")"}], "2"]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
       SuperscriptBox["N1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["\[Mu]1", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["N2", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["\[Mu]2", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
       "N2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], "2"]}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.71873299743679*^9, 3.718733022667556*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"N1", " ", "\[Mu]1"}], "-", 
       RowBox[{"m", " ", "N1", " ", "\[Mu]1"}], "+", 
       RowBox[{"m", " ", "N2", " ", "\[Mu]2"}]}], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"N1", "-", 
       RowBox[{"m", " ", "N1"}], "+", 
       RowBox[{"m", " ", "N2"}]}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
      SuperscriptBox["N1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\[Mu]1", "2"]}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["N2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\[Mu]2", "2"]}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", "N2",
       " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
        RowBox[{"m", " ", "N2"}]}], ")"}], "2"]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.7190675571335707`*^9, 3.719067561332168*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    SuperscriptBox["N1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["\[Mu]1", "2"]}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["m", "2"], " ", 
    SuperscriptBox["N2", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["\[Mu]2", "2"]}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", "N2", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Mu]1", "2"], "+", 
      RowBox[{"6", " ", "\[Mu]1", " ", "\[Mu]2"}], "+", 
      SuperscriptBox["\[Mu]2", "2"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"N1", "-", 
      RowBox[{"m", " ", "N1"}], "+", 
      RowBox[{"m", " ", "N2"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.719067562638894*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NextGenTraitPDF", " ", "=", " ", 
   RowBox[{
    RowBox[{"p1", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{"p2", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p1", "-", "p2"}], ")"}], "*", 
     "RecruitPDFsimple"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormApprox", "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}], ",", "\[Sigma]"}], 
      "]"}], ",", "z"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718733520809876*^9, 3.7187336358720427`*^9}, {
  3.71873465470905*^9, 3.7187346698058777`*^9}, {3.718735846320341*^9, 
  3.718735856994573*^9}, {3.718808828408813*^9, 3.718808830206218*^9}, {
  3.719071453355997*^9, 3.719071458447431*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "the", " ", "mean", " ", "and", " ", "variance", " ", 
   "of", " ", "the", " ", "NextGenTraitPDF"}], "*)"}]], "Input",
 CellChangeTimes->{{3.718830088427417*^9, 3.718830100801605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ngmean", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"z", "*", "NextGenTraitPDF"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ngvar", " ", "=", "  ", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "^", "2"}], "*", "NextGenTraitPDF"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "-", 
   "  ", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"z", "*", "NextGenTraitPDF"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "^", 
    "2"}]}]}]}], "Input",
 CellChangeTimes->{{3.71882919179699*^9, 3.718829311358527*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}], " ", 
         "\[Mu]1"}], "+", 
        RowBox[{"p1", " ", "\[Mu]1", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}], "+", 
        RowBox[{"p2", " ", "\[Mu]2", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", "N2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "p1"}], " ", "\[Mu]1", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}], "+", 
        RowBox[{"\[Mu]2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
           RowBox[{"p2", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
          ")"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
     RowBox[{"m", " ", "N2"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     SuperscriptBox["\[Sigma]", "2"], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.7188298906704597`*^9, 3.71907144836266*^9, 
  3.7190717159779882`*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}], " ", 
             "\[Mu]1"}], "+", 
            RowBox[{"p1", " ", "\[Mu]1", " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}], "+", 
            RowBox[{"p2", " ", "\[Mu]2", " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
           ")"}]}], "+", 
         RowBox[{"m", " ", "N2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "p1"}], " ", "\[Mu]1", " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}], "+", 
            RowBox[{"\[Mu]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
               RowBox[{"p2", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], "2"]]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
          RowBox[{"m", " ", "N2"}]}], ")"}], "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
        "N2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}], " ", "\[Mu]1",
            " ", "\[Mu]2"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"4", " ", "p1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"4", " ", "p2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
            ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p1", "-", "p2", "+", 
             RowBox[{"2", " ", "p1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}], "+", 
             RowBox[{"2", " ", "p2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["N2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"p2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
            ")"}]}], "+", 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", "p2"}], 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]]}], "-", "\[Sigma]", "+", 
             RowBox[{"p2", " ", "\[Sigma]"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["2", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Mu]1", "2"], " ", 
                 SqrtBox[
                  FractionBox["1", 
                   SuperscriptBox["\[Sigma]", "2"]]]}], "+", "\[Sigma]"}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
        SuperscriptBox["N1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"p1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]}], 
            ")"}]}], "+", 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Sigma]"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["2", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]]}], "+", "\[Sigma]"}], 
               ")"}]}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["2", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Mu]2", "2"], " ", 
                 SqrtBox[
                  FractionBox["1", 
                   SuperscriptBox["\[Sigma]", "2"]]]}], "+", "\[Sigma]"}], 
               ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     SuperscriptBox["\[Sigma]", "2"], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.7188298906704597`*^9, 3.71907144836266*^9, 
  3.719072093209094*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}], " ", 
             "\[Mu]1"}], "+", 
            RowBox[{"p1", " ", "\[Mu]1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"p2", " ", "\[Mu]2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "/", "\[Sigma]"}], ")"}], "\[Sigma]"}]}], ")"}]}], 
         "+", 
         RowBox[{"m", " ", "N2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "p1"}], " ", "\[Mu]1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"\[Mu]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
               RowBox[{"p2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], "2"]]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
          RowBox[{"m", " ", "N2"}]}], ")"}], "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
        "N2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}], " ", "\[Mu]1",
            " ", "\[Mu]2"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"4", " ", "p1", " ", 
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"4", " ", "p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}]}], 
            ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p1", "-", "p2", "+", 
             RowBox[{"2", " ", "p1", " ", 
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}], "+", 
             
             RowBox[{"2", " ", "p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["N2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}]}], 
            ")"}]}], "+", 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", "p2"}], 
               RowBox[{"(", 
                RowBox[{"1", "/", "\[Sigma]"}], ")"}]]}], "-", "\[Sigma]", 
             "+", 
             RowBox[{"p2", " ", "\[Sigma]"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["2", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "\[Sigma]"}], ")"}]]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Mu]1", "2"], 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "\[Sigma]"}], ")"}]}], "+", "\[Sigma]"}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
        SuperscriptBox["N1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p1", "+", "p2", "-", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Sigma]"}], ")"}], " ", "\[Sigma]"}]}], 
            ")"}]}], "+", 
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Sigma]"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["2", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "\[Sigma]"}], ")"}]]}], "+", 
                "\[Sigma]"}], ")"}]}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["2", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "\[Sigma]"}], ")"}]]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Mu]2", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "\[Sigma]"}], ")"}]}], "+", "\[Sigma]"}], 
               ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "/.", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p1", " ", "->", " ", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "Z"}], "]"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "Z"}], "]"}]}], "+", 
        RowBox[{"m", "*", "N2", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "->", " ", 
      FractionBox[
       RowBox[{"m", "*", "N2", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "Z"}], "]"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "Z"}], "]"}]}], "+", 
        RowBox[{"m", "*", "N2", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"p3", "->", 
      FractionBox["NR", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "Z"}], "]"}]}], "+", 
        RowBox[{"m", "*", "N2", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719072104674679*^9, 3.719072107256466*^9}, {
  3.7190724901951523`*^9, 3.7190725105062237`*^9}, {3.719072549739634*^9, 
  3.7190725954069443`*^9}, {3.719073613538165*^9, 3.7190736414661303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}]}], " ", "m", " ", "N1", " ", 
       "N2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Mu]1", "-", "\[Mu]2"}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"N1", "-", 
          RowBox[{"m", " ", "N1"}], "+", 
          RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"Z", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "rmax", " ", 
       "\[Tau]"}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"Z", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", 
       "N2", " ", "rmax", " ", "\[Tau]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"N1", "-", 
             RowBox[{"m", " ", "N1"}], "+", 
             RowBox[{"m", " ", "N2"}]}], ")"}], " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "2"], "+", 
         SuperscriptBox["\[Tau]", "2"]}]]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"N1", "-", 
       RowBox[{"m", " ", "N1"}], "+", 
       RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"Z", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "rmax", " ", 
       "\[Tau]"}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"Z", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", 
       "N2", " ", "rmax", " ", "\[Tau]"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"N1", "-", 
             RowBox[{"m", " ", "N1"}], "+", 
             RowBox[{"m", " ", "N2"}]}], ")"}], " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "2"], "+", 
         SuperscriptBox["\[Tau]", "2"]}]]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.719072294208192*^9, 3.719072547655867*^9, 
  3.719072598830652*^9, 3.719081520568535*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ngmeansimple", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
           RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
           RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], "-", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Theta]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
         "N2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{
                RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                SuperscriptBox["\[Mu]2", "2"]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Sigma]", "2"], "+", 
                  SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Mu]1", "2"], "+", 
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
            "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}]}], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
            RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
           RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
           RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]1", "2"]}], 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]2", "2"]}], 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Theta]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]1", "2"]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]2", "2"]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]2", "2"], " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
         "N2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
               SuperscriptBox["\[Mu]2", "2"]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Mu]1", "2"], "+", 
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
            "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}]}], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
            RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
           RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
           RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            SuperscriptBox["\[Sigma]", "2"]], "-", 
           FractionBox[
            SuperscriptBox["\[Theta]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
         SuperscriptBox["N1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{
                RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                SuperscriptBox["\[Mu]2", "2"]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Sigma]", "2"], "+", 
                  SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Mu]1", "2"], "+", 
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
            "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{"\[Mu]1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
            RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
           RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
           RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], "+", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            SuperscriptBox["\[Sigma]", "2"]], "-", 
           FractionBox[
            SuperscriptBox["\[Theta]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]1", "2"]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]2", "2"]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]2", "2"], " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
         SuperscriptBox["N1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
               SuperscriptBox["\[Mu]2", "2"]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Mu]1", "2"], "+", 
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
            "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{"\[Mu]1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
            RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "Z"}], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "\[Sigma]", 
        " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           RowBox[{"Erf", "[", 
            FractionBox[
             RowBox[{"\[Mu]1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], 
             SqrtBox["2"]], "]"}]}]}], ")"}]}], 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "Z"}], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "\[Sigma]", 
        " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           RowBox[{"Erf", "[", 
            FractionBox[
             RowBox[{"\[Mu]1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], 
             SqrtBox["2"]], "]"}]}]}], ")"}]}], 
       SqrtBox["2"]], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
           RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
           RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            SuperscriptBox["\[Sigma]", "2"]], "-", 
           FractionBox[
            SuperscriptBox["\[Theta]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["N2", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{
                RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                SuperscriptBox["\[Mu]2", "2"]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Sigma]", "2"], "+", 
                  SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Mu]1", "2"], "+", 
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
            "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{"\[Mu]2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
            RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
           RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
           RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], "-", 
           FractionBox[
            SuperscriptBox["\[Theta]1", "2"], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]1", "2"]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]2", "2"]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]2", "2"], " ", 
             SuperscriptBox["\[Tau]", "2"]}], 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["N2", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
               SuperscriptBox["\[Mu]2", "2"]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Mu]1", "2"], "+", 
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
            "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{"\[Mu]2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
            RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "Z"}], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "m", " ", "N2", " ", 
        "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           RowBox[{"Erf", "[", 
            FractionBox[
             RowBox[{"\[Mu]2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], 
             SqrtBox["2"]], "]"}]}]}], ")"}]}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "Z"}], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "m", " ", "N2", " ", 
        "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           RowBox[{"Erf", "[", 
            FractionBox[
             RowBox[{"\[Mu]2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], 
             SqrtBox["2"]], "]"}]}]}], ")"}]}], 
       SqrtBox["2"]]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "Z"}]]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "Z"}]], " ", "m", " ", "N2"}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
            RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
            RowBox[{"m", " ", "N2", " ", "\[Beta]"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[Theta]1", "2"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}], "+", 
                FractionBox[
                 RowBox[{"\[Theta]1", " ", "\[Mu]1"}], 
                 RowBox[{
                  SuperscriptBox["\[Sigma]", "2"], "+", 
                  SuperscriptBox["\[Tau]", "2"]}]], "-", 
                FractionBox[
                 SuperscriptBox["\[Mu]1", "2"], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 SuperscriptBox["\[Theta]1", "2"], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}], "+", 
               FractionBox[
                RowBox[{"\[Theta]1", " ", "\[Mu]2"}], 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]2", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", 
             " ", "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]"}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}]]]}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ngvarsimple", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
               RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
               RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]1", "2"], 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]], "-", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]2", "2"], 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Theta]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]2", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", 
             " ", "N2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                    SuperscriptBox["\[Mu]2", "2"]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[Mu]1", "2"], "+", 
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ",
                 "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
                SqrtBox["\[Pi]"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
                SqrtBox["\[Pi]"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Mu]1", " ", 
                   SqrtBox[
                    FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Mu]2", " ", 
                   SqrtBox[
                    FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}]}], "]"}]}]}], ")"}]}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
                RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
               RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
               RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]1", "2"]}], 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]], "+", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]2", "2"]}], 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Theta]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]1", "2"]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]2", "2"]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[Mu]1", "2"], " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[Mu]2", "2"], " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", 
             " ", "N2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                   SuperscriptBox["\[Mu]2", "2"]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[Mu]1", "2"], "+", 
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ",
                 "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
                SqrtBox["\[Pi]"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
                SqrtBox["\[Pi]"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Mu]1", " ", 
                   SqrtBox[
                    FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Mu]2", " ", 
                   SqrtBox[
                    FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}]}], "]"}]}]}], ")"}]}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
                RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
               RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
               RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]1", "2"], 
                SuperscriptBox["\[Sigma]", "2"]], "-", 
               FractionBox[
                SuperscriptBox["\[Theta]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]2", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
             SuperscriptBox["N1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                    SuperscriptBox["\[Mu]2", "2"]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[Mu]1", "2"], "+", 
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ",
                 "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]1", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]1", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{"\[Mu]1", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
                RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
               RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
               RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]], "+", 
               FractionBox[
                SuperscriptBox["\[Mu]2", "2"], 
                SuperscriptBox["\[Sigma]", "2"]], "-", 
               FractionBox[
                SuperscriptBox["\[Theta]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]1", "2"]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]2", "2"]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[Mu]1", "2"], " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[Mu]2", "2"], " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
             SuperscriptBox["N1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                   SuperscriptBox["\[Mu]2", "2"]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[Mu]1", "2"], "+", 
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ",
                 "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]1", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]1", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]1", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{"\[Mu]1", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
                RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "Z"}], "-", 
              FractionBox[
               SuperscriptBox["\[Mu]1", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", 
            "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]1", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]1", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]], " ", 
               RowBox[{"Erf", "[", 
                FractionBox[
                 RowBox[{"\[Mu]1", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], 
                 SqrtBox["2"]], "]"}]}]}], ")"}]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "Z"}], "-", 
              FractionBox[
               SuperscriptBox["\[Mu]1", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", 
            "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]1", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]1", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]], " ", 
               RowBox[{"Erf", "[", 
                FractionBox[
                 RowBox[{"\[Mu]1", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], 
                 SqrtBox["2"]], "]"}]}]}], ")"}]}], 
           SqrtBox["2"]], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
               RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
               RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]2", "2"], 
                SuperscriptBox["\[Sigma]", "2"]], "-", 
               FractionBox[
                SuperscriptBox["\[Theta]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Mu]2", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
             SuperscriptBox["m", "2"], " ", 
             SuperscriptBox["N2", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                    SuperscriptBox["\[Mu]2", "2"]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[Mu]1", "2"], "+", 
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ",
                 "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]2", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]2", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{"\[Mu]2", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
                RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
               RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
               RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
               FractionBox[
                SuperscriptBox["\[Mu]1", "2"], 
                SuperscriptBox["\[Sigma]", "2"]], "+", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]], "-", 
               FractionBox[
                SuperscriptBox["\[Theta]1", "2"], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]1", "2"]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Mu]2", "2"]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[Mu]1", "2"], " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[Mu]2", "2"], " ", 
                 SuperscriptBox["\[Tau]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
             SuperscriptBox["m", "2"], " ", 
             SuperscriptBox["N2", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
                   SuperscriptBox["\[Mu]2", "2"]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[Mu]1", "2"], "+", 
                   RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ",
                 "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]2", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  SuperscriptBox["\[Mu]2", "2"], 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                SqrtBox["\[Pi]"], " ", "\[Mu]2", " ", 
                SqrtBox[
                 FractionBox["1", 
                  SuperscriptBox["\[Sigma]", "2"]]], " ", 
                RowBox[{"Erf", "[", 
                 RowBox[{"\[Mu]2", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
                RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}]]}], ")"}]}], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "Z"}], "-", 
              FractionBox[
               SuperscriptBox["\[Mu]2", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "m", " ", "N2", 
            " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]2", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]2", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]], " ", 
               RowBox[{"Erf", "[", 
                FractionBox[
                 RowBox[{"\[Mu]2", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], 
                 SqrtBox["2"]], "]"}]}]}], ")"}]}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "Z"}], "-", 
              FractionBox[
               SuperscriptBox["\[Mu]2", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "m", " ", "N2", 
            " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]2", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 SuperscriptBox["\[Mu]2", "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]], " ", 
               RowBox[{"Erf", "[", 
                FractionBox[
                 RowBox[{"\[Mu]2", " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SuperscriptBox["\[Sigma]", "2"]]]}], 
                 SqrtBox["2"]], "]"}]}]}], ")"}]}], 
           SqrtBox["2"]]}], ")"}], "2"], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "Z"}]]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "Z"}]], " ", "m", " ", "N2"}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
                RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
                RowBox[{"m", " ", "N2", " ", "\[Beta]"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Theta]1", "2"], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}], "+", 
                    FractionBox[
                    RowBox[{"\[Theta]1", " ", "\[Mu]1"}], 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}]], "-", 
                    FractionBox[
                    SuperscriptBox["\[Mu]1", "2"], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Theta]1", "2"], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}], "+", 
                   FractionBox[
                    RowBox[{"\[Theta]1", " ", "\[Mu]2"}], 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}]], "-", 
                   FractionBox[
                    SuperscriptBox["\[Mu]2", "2"], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", 
                 " ", "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]"}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Sigma]", "2"], "+", 
               SuperscriptBox["\[Tau]", "2"]}]]]}], ")"}], "2"]}], ")"}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
              RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}]]}]]}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
          RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
          RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], "-", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Theta]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
        "N2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
               SuperscriptBox["\[Mu]2", "2"]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
           "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}]}], 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], "+", 
             RowBox[{"2", " ", "\[Mu]1", " ", "\[Mu]2"}], "+", 
             SuperscriptBox["\[Mu]2", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], "+", 
             RowBox[{"2", " ", "\[Mu]1", " ", "\[Mu]2"}], "+", 
             SuperscriptBox["\[Mu]2", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", "\[Mu]1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Mu]2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}]}], "]"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
             RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}]]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
          RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
          RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]1", "2"]}], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]2", "2"]}], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Theta]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]1", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]2", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Mu]1", "2"], " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Mu]2", "2"], " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "N1", " ", 
        "N2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
              SuperscriptBox["\[Mu]2", "2"]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
           "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}]}], 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], "+", 
             RowBox[{"2", " ", "\[Mu]1", " ", "\[Mu]2"}], "+", 
             SuperscriptBox["\[Mu]2", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Mu]1", "+", "\[Mu]2"}], ")"}], "2"], 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Mu]1", "2"], "+", 
             RowBox[{"2", " ", "\[Mu]1", " ", "\[Mu]2"}], "+", 
             SuperscriptBox["\[Mu]2", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", "\[Mu]1", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Mu]2", " ", 
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["\[Sigma]", "2"]]]}]}], "]"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
             RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}]]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
          RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
          RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           SuperscriptBox["\[Sigma]", "2"]], "-", 
          FractionBox[
           SuperscriptBox["\[Theta]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
        SuperscriptBox["N1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
               SuperscriptBox["\[Mu]2", "2"]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
           "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[Mu]1"}], 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]1", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]1", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{"\[Mu]1", " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
             RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}]]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
          RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
          RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], "+", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           SuperscriptBox["\[Sigma]", "2"]], "-", 
          FractionBox[
           SuperscriptBox["\[Theta]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]1", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]2", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Mu]1", "2"], " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Mu]2", "2"], " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
        SuperscriptBox["N1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
              SuperscriptBox["\[Mu]2", "2"]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
           "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Mu]1"}], 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]1", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]1", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]1", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{"\[Mu]1", " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "Z"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "\[Mu]1"}], 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], 
              SqrtBox["2"]], "]"}]}]}], ")"}]}], 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "Z"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]1", "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "\[Mu]1"}], 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]1", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[Mu]1", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], 
              SqrtBox["2"]], "]"}]}]}], ")"}]}], 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
             RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}]]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
          RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
          RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           SuperscriptBox["\[Sigma]", "2"]], "-", 
          FractionBox[
           SuperscriptBox["\[Theta]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Mu]2", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["N2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
               SuperscriptBox["\[Mu]2", "2"]}], 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], "+", 
                 SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
           "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[Mu]2"}], 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]2", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]2", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{"\[Mu]2", " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
             RowBox[{"m", " ", "N2"}]}], ")"}], "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}]]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
          RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
          RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
          FractionBox[
           SuperscriptBox["\[Mu]1", "2"], 
           SuperscriptBox["\[Sigma]", "2"]], "+", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], "-", 
          FractionBox[
           SuperscriptBox["\[Theta]1", "2"], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]1", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]2", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Mu]1", "2"], " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"\[Mu]1", " ", "\[Mu]2", " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Mu]2", "2"], " ", 
            SuperscriptBox["\[Tau]", "2"]}], 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Sigma]", "2"], "+", 
              SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["N2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
              SuperscriptBox["\[Mu]2", "2"]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[Mu]1", "2"], "+", 
              RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[Sigma]", "2"], "+", 
                SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]], " ", "m", " ", 
           "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Mu]2"}], 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]2", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             SuperscriptBox["\[Mu]2", "2"], 
             SuperscriptBox["\[Sigma]", "2"]]], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]2", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{"\[Mu]2", " ", 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]]}], "]"}]}]}], ")"}]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "Z"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "m", " ", "N2", " ", 
         
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "\[Mu]2"}], 
             SqrtBox[
              FractionBox["1", 
               SuperscriptBox["\[Sigma]", "2"]]]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]2", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]2", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], 
              SqrtBox["2"]], "]"}]}]}], ")"}]}], 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "Z"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]2", "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "m", " ", "N2", " ", 
         
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "\[Mu]2"}], 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["\[Sigma]", "2"]]]], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]2", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["\[Mu]2", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Mu]2", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{"\[Mu]2", " ", 
               SqrtBox[
                FractionBox["1", 
                 SuperscriptBox["\[Sigma]", "2"]]]}], 
              SqrtBox["2"]], "]"}]}]}], ")"}]}], 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "Z"}]]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "Z"}]], " ", "m", " ", "N2"}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "N1"}], " ", "\[Beta]"}], "+", 
             RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "-", 
             RowBox[{"m", " ", "N2", " ", "\[Beta]"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox["\[Theta]1", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}], "+", 
                 FractionBox[
                  RowBox[{"\[Theta]1", " ", "\[Mu]1"}], 
                  RowBox[{
                   SuperscriptBox["\[Sigma]", "2"], "+", 
                   SuperscriptBox["\[Tau]", "2"]}]], "-", 
                 FractionBox[
                  SuperscriptBox["\[Mu]1", "2"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]]}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[Theta]1", "2"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}], "+", 
                FractionBox[
                 RowBox[{"\[Theta]1", " ", "\[Mu]2"}], 
                 RowBox[{
                  SuperscriptBox["\[Sigma]", "2"], "+", 
                  SuperscriptBox["\[Tau]", "2"]}]], "-", 
                FractionBox[
                 SuperscriptBox["\[Mu]2", "2"], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], "+", 
                    SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", 
              " ", "N2"}]}], ")"}], " ", "rmax", " ", "\[Tau]"}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}]]]}], ")"}]}], ")"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.71882958161838*^9, 3.718829599182364*^9}, 
   3.7188299094540653`*^9, 3.71883084272721*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Check", " ", "to", " ", "see", " ", "if", " ", "the", " ", "NextGen", " ", 
   "PDf", " ", "sums", " ", "to", " ", "1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.71882978551252*^9, 3.718829800558714*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{"NextGenTraitPDF", ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7188295626946163`*^9, 3.718829579055909*^9}, {
   3.7188334767322598`*^9, 3.718833482022271*^9}, 3.718838953763782*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","inumr",
   "\"The integrand \\!\\(\\*RowBox[{FractionBox[RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"Z\\\"}], \\\"-\\\", \
FractionBox[SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"z\\\", \\\"+\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}], \\\"2\\\"], \
RowBox[{\\\"2\\\", \\\" \\\", SuperscriptBox[\\\"\[Sigma]\\\", \
\\\"2\\\"]}]]}]], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \
\\\"m\\\"}], \\\")\\\"}], \\\" \\\", \\\"N1\\\"}], RowBox[{SqrtBox[RowBox[{\\\
\"2\\\", \\\" \\\", \\\"\[Pi]\\\"}]], \\\" \\\", \\\"\[Sigma]\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", \\\"Z\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\"-\\\", \\\"m\\\"}], \\\")\\\"}], \\\" \\\", \
\\\"N1\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", \\\"Z\\\"}]], \\\" \\\", \\\"m\\\", \\\" \\\", \
\\\"N2\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\" \\\", \\\"\[Beta]\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\
\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \\\"N1\\\", \\\" \\\", \
\\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \\\"m\\\", \\\" \
\\\", \\\"N2\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\
\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}]], \\\"+\\\", FractionBox[RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\" \\\", \\\"m\\\", \\\" \\\", \\\"N2\\\"}], \
RowBox[{SqrtBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"\[Pi]\\\"}]], \\\" \\\", \\\
\"\[Sigma]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]], \\\"+\\\", \
FractionBox[RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", \\\"N1\\\"}], \\\"+\\\", RowBox[{\\\"m\\\", \\\" \\\", \
\\\"N2\\\"}]}], \\\")\\\"}]}], \\\" \\\", \\\"\[Beta]\\\"}], \\\"-\\\", \
FractionBox[RowBox[{RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \
RowBox[{\\\"2\\\", \\\" \\\", SuperscriptBox[\\\"\[Sigma]\\\", \
\\\"2\\\"]}]]}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]]], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\"+\\\", \\\"m\\\"}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", SuperscriptBox[\\\
\"N1\\\", \\\"2\\\"]}], \\\"-\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\" \\\", SuperscriptBox[\\\"m\\\", \\\"2\\\"], \
\\\" \\\", SuperscriptBox[\\\"N2\\\", \\\"2\\\"]}]}], \\\")\\\"}], \\\" \\\", \
SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", \
FractionBox[SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"2\\\"], RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]]}]], \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \\\"m\\\"}], \
\\\")\\\"}], \\\" \\\", \\\"N1\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\
\[Tau]\\\"}], SqrtBox[RowBox[{SuperscriptBox[\\\"\[Sigma]\\\", \\\"2\\\"], \\\
\"+\\\", SuperscriptBox[\\\"\[Tau]\\\", \\\"2\\\"]}]]], \\\"+\\\", \
FractionBox[RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]]}]], \\\" \\\", \\\"m\\\", \\\" \\\", \\\"N2\\\", \\\" \
\\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\"}], \
SqrtBox[RowBox[{SuperscriptBox[\\\"\[Sigma]\\\", \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[\\\"\[Tau]\\\", \\\"2\\\"]}]]]}], \\\")\\\"}]}], \
RowBox[{SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \\\"m\\\"}], \\\")\\\"}], \
\\\" \\\", \\\"N1\\\"}], \\\"-\\\", RowBox[{\\\"m\\\", \\\" \\\", \
\\\"N2\\\"}]}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", SqrtBox[\\\"\[Pi]\\\"], \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"Z\\\"}]], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \\\"m\\\"}], \\\")\\\"}], \\\
\" \\\", \\\"N1\\\"}], \\\"+\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \
\\\"Z\\\"}]], \\\" \\\", \\\"m\\\", \\\" \\\", \\\"N2\\\"}], \\\"+\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", \\\"\[Beta]\\\"}]], \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", \\\"N1\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\
\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \\\"m\\\", \\\" \
\\\", \\\"N2\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\
\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}]]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"",2,431,134,
   15401534451359800262,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7188389569222803`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","inumr",
   "\"The integrand \\!\\(\\*RowBox[{FractionBox[RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"Z\\\"}], \\\"-\\\", \
FractionBox[SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"z\\\", \\\"+\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}], \\\"2\\\"], \
RowBox[{\\\"2\\\", \\\" \\\", SuperscriptBox[\\\"\[Sigma]\\\", \
\\\"2\\\"]}]]}]], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \
\\\"m\\\"}], \\\")\\\"}], \\\" \\\", \\\"N1\\\"}], RowBox[{SqrtBox[RowBox[{\\\
\"2\\\", \\\" \\\", \\\"\[Pi]\\\"}]], \\\" \\\", \\\"\[Sigma]\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", \\\"Z\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\"-\\\", \\\"m\\\"}], \\\")\\\"}], \\\" \\\", \
\\\"N1\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", \\\"Z\\\"}]], \\\" \\\", \\\"m\\\", \\\" \\\", \
\\\"N2\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\" \\\", \\\"\[Beta]\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\
\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \\\"N1\\\", \\\" \\\", \
\\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \\\"m\\\", \\\" \
\\\", \\\"N2\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\
\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}]], \\\"+\\\", FractionBox[RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\" \\\", \\\"m\\\", \\\" \\\", \\\"N2\\\"}], \
RowBox[{SqrtBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"\[Pi]\\\"}]], \\\" \\\", \\\
\"\[Sigma]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]], \\\"+\\\", \
FractionBox[RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", \\\"N1\\\"}], \\\"+\\\", RowBox[{\\\"m\\\", \\\" \\\", \
\\\"N2\\\"}]}], \\\")\\\"}]}], \\\" \\\", \\\"\[Beta]\\\"}], \\\"-\\\", \
FractionBox[RowBox[{RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \
RowBox[{\\\"2\\\", \\\" \\\", SuperscriptBox[\\\"\[Sigma]\\\", \
\\\"2\\\"]}]]}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]]], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\"+\\\", \\\"m\\\"}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", SuperscriptBox[\\\
\"N1\\\", \\\"2\\\"]}], \\\"-\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\" \\\", SuperscriptBox[\\\"m\\\", \\\"2\\\"], \
\\\" \\\", SuperscriptBox[\\\"N2\\\", \\\"2\\\"]}]}], \\\")\\\"}], \\\" \\\", \
SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", \
FractionBox[SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"2\\\"], RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]]}]], \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \\\"m\\\"}], \
\\\")\\\"}], \\\" \\\", \\\"N1\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\
\[Tau]\\\"}], SqrtBox[RowBox[{SuperscriptBox[\\\"\[Sigma]\\\", \\\"2\\\"], \\\
\"+\\\", SuperscriptBox[\\\"\[Tau]\\\", \\\"2\\\"]}]]], \\\"+\\\", \
FractionBox[RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]]}]], \\\" \\\", \\\"m\\\", \\\" \\\", \\\"N2\\\", \\\" \
\\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\"}], \
SqrtBox[RowBox[{SuperscriptBox[\\\"\[Sigma]\\\", \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[\\\"\[Tau]\\\", \\\"2\\\"]}]]]}], \\\")\\\"}]}], \
RowBox[{SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \\\"m\\\"}], \\\")\\\"}], \
\\\" \\\", \\\"N1\\\"}], \\\"-\\\", RowBox[{\\\"m\\\", \\\" \\\", \
\\\"N2\\\"}]}], \\\")\\\"}], \\\"2\\\"], \\\" \\\", SqrtBox[\\\"\[Pi]\\\"], \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"Z\\\"}]], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", \\\"m\\\"}], \\\")\\\"}], \\\
\" \\\", \\\"N1\\\"}], \\\"+\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \
\\\"Z\\\"}]], \\\" \\\", \\\"m\\\", \\\" \\\", \\\"N2\\\"}], \\\"+\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", \\\"\[Beta]\\\"}]], \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", \\\"N1\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\
\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \\\"m\\\", \\\" \
\\\", \\\"N2\\\", \\\" \\\", \\\"rmax\\\", \\\" \\\", \\\"\[Tau]\\\", \\\" \\\
\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}]]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"",2,431,135,
   15401534451359800262,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.718838960254327*^9}],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{"NextGenTraitPDF", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.71883469465707*^9, 3.718838960271596*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Z", "+", 
       RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
         SuperscriptBox["\[Mu]2", "2"]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "rmax", " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]", " ", "\[Tau]"}], 
    "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Z", "+", 
       RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Mu]1", "2"], "+", 
         RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", "N2", 
     " ", "rmax", " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]", " ", "\[Tau]"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"N1", " ", "\[Beta]"}], "+", 
       RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Theta]1", "2"], "+", 
         SuperscriptBox["\[Mu]1", "2"], "+", 
         SuperscriptBox["\[Mu]2", "2"]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], "+", 
           SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
       RowBox[{"m", " ", "N2"}]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       SuperscriptBox["\[Tau]", "2"]}]]}]}], 
   RowBox[{
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"Z", "+", 
         RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
           SuperscriptBox["\[Mu]2", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "rmax", " ", 
       "\[Tau]"}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"Z", "+", 
         RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Mu]1", "2"], "+", 
           RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", 
       "N2", " ", "rmax", " ", "\[Tau]"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"N1", " ", "\[Beta]"}], "+", 
         RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "2"], "+", 
           SuperscriptBox["\[Mu]1", "2"], "+", 
           SuperscriptBox["\[Mu]2", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
         RowBox[{"m", " ", "N2"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "2"], "+", 
         SuperscriptBox["\[Tau]", "2"]}]]}]}], ")"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.7188362940927467`*^9, 3.718836302591146*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Z", "+", 
      RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
        SuperscriptBox["\[Mu]2", "2"]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "2"], "+", 
          SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "rmax", " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]", " ", "\[Tau]"}], 
   "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Z", "+", 
      RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Mu]1", "2"], "+", 
        RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "2"], "+", 
          SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", "N2", 
    " ", "rmax", " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]", " ", "\[Tau]"}], 
   "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"N1", " ", "\[Beta]"}], "+", 
      RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Theta]1", "2"], "+", 
        SuperscriptBox["\[Mu]1", "2"], "+", 
        SuperscriptBox["\[Mu]2", "2"]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "2"], "+", 
          SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
      RowBox[{"m", " ", "N2"}]}], ")"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Sigma]", "2"], "+", 
      SuperscriptBox["\[Tau]", "2"]}]]}]}], 
  RowBox[{
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"Z", "+", 
        RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]1"}], "+", 
          SuperscriptBox["\[Mu]2", "2"]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1", " ", "rmax", " ", 
      "\[Tau]"}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"Z", "+", 
        RowBox[{"m", " ", "N1", " ", "\[Beta]"}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Mu]1", "2"], "+", 
          RowBox[{"2", " ", "\[Theta]1", " ", "\[Mu]2"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", "m", " ", "N2",
       " ", "rmax", " ", "\[Tau]"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"N1", " ", "\[Beta]"}], "+", 
        RowBox[{"m", " ", "N2", " ", "\[Beta]"}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Theta]1", "2"], "+", 
          SuperscriptBox["\[Mu]1", "2"], "+", 
          SuperscriptBox["\[Mu]2", "2"]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            SuperscriptBox["\[Tau]", "2"]}], ")"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "N1"}], "-", 
        RowBox[{"m", " ", "N2"}]}], ")"}], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "2"], "+", 
        SuperscriptBox["\[Tau]", "2"]}]]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.718836300759007*^9, 3.718836604962351*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Compare", " ", "Exact", " ", "and", " ", "Approximate", " ", "PDFs"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7188298073083277`*^9, 3.718829825909896*^9}}],

Cell[CellGroupData[{

Cell[BoxData["NormApprox"], "Input",
 CellChangeTimes->{{3.719081680685485*^9, 3.719081682314673*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"z", "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "m"}], ")"}], " ", "N1", " ", "\[Mu]1"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], " ", "N1"}], "+", 
          RowBox[{"m", " ", "N2"}]}]], "-", 
        FractionBox[
         RowBox[{"m", " ", "N2", " ", "\[Mu]2"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], " ", "N1"}], "+", 
          RowBox[{"m", " ", "N2"}]}]]}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.719081682887006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"m", "=", "0.1"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", "500"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PDF1", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"NextGenTraitPDF", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Trait value\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Probability\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Time t=1\>\""}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "->", "12"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"ngmeansimple", ",", "0.02"}], "}"}], "]"}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "-", "ngvarsimple"}], ",", "0.02"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "+", "ngvarsimple"}], ",", "0.02"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{"NormApprox", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"m", "*", "N2"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}], ",", 
              "0.04"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "-", "1"}], 
                ",", "0.04"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "+", "1"}], 
                ",", "0.04"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"m", "=", "0.5"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", "600"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PDF2", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"NextGenTraitPDF", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Trait value\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Probability\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Time t=1\>\""}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "->", "12"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"ngmeansimple", ",", "0.02"}], "}"}], "]"}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "-", 
                 RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], ",", "0.02"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "+", 
                 RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], ",", "0.02"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{"NormApprox", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"m", "*", "N2"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}], ",", 
              "0.04"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "-", "1"}], 
                ",", "0.04"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "+", "1"}], 
                ",", "0.04"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"m", "=", "0.5"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", "600"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "1000"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PDF3", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"NextGenTraitPDF", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Trait value\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Probability\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Time t=1\>\""}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "->", "12"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"ngmeansimple", ",", "0.02"}], "}"}], "]"}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "-", 
                 RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], ",", "0.02"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "+", 
                 RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], ",", "0.02"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{"NormApprox", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"m", "*", "N2"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}], ",", 
              "0.04"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "-", "1"}], 
                ",", "0.04"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "+", "1"}], 
                ",", "0.04"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"m", "=", 
      RowBox[{"0.2", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["N1", 
          RowBox[{"1000", "+", "N1"}]]}], ")"}]}]}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", "600"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "1000"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PDF4", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"NextGenTraitPDF", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Trait value\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Probability\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Time t=1\>\""}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "->", "12"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"ngmeansimple", ",", "0.02"}], "}"}], "]"}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "-", 
                 RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], ",", "0.02"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ngmeansimple", "+", 
                 RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], ",", "0.02"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{"NormApprox", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"m", "*", "N2"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                  RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}], ",", 
              "0.04"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "3"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "-", "1"}], 
                ",", "0.04"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"m", "*", "N2"}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
                    RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}], "+", "1"}], 
                ",", "0.04"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PDFPlot", " ", "=", " ", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PDF1", ",", "PDF2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"PDF3", ",", "PDF4"}], "}"}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7187169158506947`*^9, 3.7187170130525703`*^9}, {
   3.7187170824580107`*^9, 3.7187171067367897`*^9}, {3.7187172839315*^9, 
   3.718717291592369*^9}, {3.718717467630354*^9, 3.718717469080131*^9}, 
   3.718717742008479*^9, {3.7187183181673517`*^9, 3.718718327684016*^9}, {
   3.71873344028554*^9, 3.718733444974235*^9}, {3.718808398025234*^9, 
   3.718808486504161*^9}, {3.7188085988600082`*^9, 3.718808629493223*^9}, 
   3.718808712228944*^9, {3.718808835412541*^9, 3.718808837103695*^9}, {
   3.718811521309044*^9, 3.718811538123193*^9}, {3.718829498597376*^9, 
   3.7188295093051977`*^9}, {3.718829983525742*^9, 3.718829988276166*^9}, {
   3.71883088381767*^9, 3.718830884269763*^9}, {3.718831538276836*^9, 
   3.718831635817897*^9}, {3.7190816075038853`*^9, 3.719081614336252*^9}, {
   3.719081646479847*^9, 3.719081675853179*^9}, {3.719081776906802*^9, 
   3.719082196395961*^9}, {3.719082227487938*^9, 3.7190823046589527`*^9}, {
   3.719082723921983*^9, 3.719082748364235*^9}, {3.7190830864893513`*^9, 
   3.719083135422207*^9}, {3.719085923849873*^9, 3.7190859372889557`*^9}, {
   3.719085993464086*^9, 3.719086123260891*^9}, {3.719159934900996*^9, 
   3.7191599454487343`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1: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
TzBH7Ilb2dzGBgXtonV1XX/ugP0PJ0qaDw==
             "]]},
           Annotation[#, "Charting`Private`Tag$9014#1"]& ]}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         PointBox[{0.26315789473684226`, 0.02}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{-1.465850947605994, 0.02}, {1.9921667370796785`, 
          0.02}}]}, {{{}, {}, 
          TagBox[
           {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1: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
             "]]},
           Annotation[#, "Charting`Private`Tag$9052#1"]& ]}, {}, {}}, 
        {RGBColor[0.560181, 0.691569, 0.194885], 
         PointBox[{0.2631578947368421, 0.04}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], 
         LineBox[{{-0.736842105263158, 0.04}, {1.263157894736842, 0.04}}]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Probability\"", FontSize -> 14, StripOnInput -> False],
            TraditionalForm], None}, {
          FormBox[
           StyleBox["\"Trait value\"", FontSize -> 12, StripOnInput -> False],
            TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       LabelStyle->Directive[FontSize -> 12],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Time t=1\"", TraditionalForm],
       PlotRange->{{-4.999999693877551, 9.999999693877552}, {0, 0.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {192., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1: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
PkpLyRcpHJFqJQ5PT95/xbHJjnVVynz6mS8OXm81gpu/s2PSk5V505YSYHCn
9PRRIjvGijP5sotJAikztoajhB3jfbF5Z1FECpSHXeXm37JjOrIuAoH3pUBE
Uw6X/owdS+0QeBt38gAs0b35yHGLHZu6Vbt96qs0pCQlOMwLsGNCjl9NGO7I
Amenx0gzJzvGY28is++XLITsGhuk07NjQ79FxdVvHobbtpzyln/ZsKibZq29
N+XgpFz4anMbG6YQtPnj2CN5qLRxuJFez4Y52+UeqOI6AnKxOp/8y9iw9+//
LESmHQG+Naq6o2lsWJ5RUUC+rQLMk+6FpHuzYQl//qgTEhThypLFmr8LGzba
xH3ZaEYRBqWOOVpeZ8O+3dQ/VKaqBPWPl85wXmDDmly1k/zHlSDO5BY+QJoN
i0kes317XBk0flhnWA6xYrMnnmTikCo4c5tYT3ayYhkR9VKv01Th1Ql9PqcP
rFg+PS7iFY0aUMWrRPgVsmKnaOXzdjvUoAVxuKc+ZsVeX79ycMRFA4xSSFrf
T7BiD/js30ZSEeBBc/m2szIrdimwUTjMlwBlf3LLV2VZMWZdjcVTawTg00s6
xMjPiqnTZksfXgYYW3bjkl1iwX7WxONSqbXA8ZzEpGs2C+arfYRjE2lDig//
i42XLJgNfd23uEht6MzkMAt+xoJV3+QxOvlZG+S3ttrigliwzq6QH4v3dGAl
e6Co3IoF4/CQbpprOgVBVI+CtjlYMGdVI/6E+NNQcthPI4SeBduV8WZAK6fh
m/mdFbYdZuz5DGO7ppk+6OZfdhSZY8aGDu6dUN9vAGxWxwy1GpkxvKr5lYbK
M5BY+kM0zJsZi3PUEh4+dgGO8clu6LgwYxuRJeQ3lRdg2Me5l+Y6M9bM7vNL
VtgQ+Ah/g+6fZ8YULgVjlRmGEN+2Nel5gBlbenSI8LLaCGK+sGfZDTBhxdkD
NTcFTEEBGfpLtDNhfMLBbWZOptCTEWc6Uc+EdTOZ/XYgmgKH4z566/dMmFRq
6E8GOzN4uiTmYBLMhPm9jWrLajCHcEZlmZNHmLC+ORHHwuqLIOPkRUV1gAmb
4b1gWSxiBa1dVSN1gkzYL1EeB75HVsAQd+KxOgMTtl92pETQ/BKECOnNK3xh
xPIvflcLYb4MQYpWeaJPGLH0jByFr9ZXQSz+ZciXIEZMY9QwKOjFVSCtjVu/
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
I0AoVzn7dJmWPoOorNo=
             "]]},
           Annotation[#, "Charting`Private`Tag$9090#1"]& ]}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointBox[{1.875, 0.02}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{-0.4704873682650015, 0.02}, {4.220487368265001, 
          0.02}}]}, {{{}, {}, 
          TagBox[
           {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUV3c8lt8btvd4ee35GlFIFIV6zzlmWVkZIXtlprIVCpVUQlIpEbITysz7
yMzK3vlSCMnKnj+/v57P9bnPue7rvu5zznOOiIOPsTMFGRkZiYqM7P/fsyM3
/xwc4LEzDaY+e7/LiIMVaYvaO3jMKN2vODG/nOif3PEvYR2PfSW7rH05oIJY
ZHp0V/IvHjM+doNKllBF1FcwJbs+g8dYRaZev9uvIs6x36Gq/oXH7hZHPWSb
rCaKd44wGQ7jsf/MLFyL62uItYV0bC/78JgV24afOUYi2jxS5JzsxGPvhDhe
zNtjxGSdJ4KBTXgsk+Es7pNvLZGpQU32bSkeK3m+fG+joY6Y887n5NwHPBb/
nujY7lJP1LqTclohD4+ZpW1rpTM1EMPhOmhOw2MNmuW+U66NREEhMXX213js
3OXXdRmCTcTKXYPz1sl47ENSrwb1UBNxrSLHYOkxHoOUTS6X7b8R45P7TVRi
8Ji5Dp41W7aFKBdAaREZhcfCWWfoLlK0Et0VrtjxhOIxmt3vPM5f2ohjhThf
dBWPOYTdVj+r0UkMeUT0i3HCY7YBQ/FcTZ1EHk/3oF5bPLaaxR23rt9FND5W
H+FmhscG500w5NZNXKRdjio2wmOPPxsY/NnpJsZOC8bs6uGxJylORvyJPcSm
dwHxcep47GK24WZSdy/R6U5G0jDAY3FWcW1SQX1ECvuul+IqeIy3NiCiV7yf
eE5I+l253KE+i7Bq6tgBYlHyWMm44OF8quVg5zfDRP0AxnIpXjwWIby/LHF9
hDhnqlR9kwOPMfIXlprqjRLF8fH1dIx4LIOsR4vEMUasXa5pNqbBY2l5eZ9t
Kf8j2nT+aUshx2MbvOeblLb+IyY/0uyT22THLjC8VC3fGycqel4fCv53iOP/
hBEiJ4jdOqk/6hfYsR9I9U8Sy08iE93WlMUUO6YzgNM9JveLGHEnfz28mx3b
jFWIuZEzRewPPXjg3M6OnVXVWnBxmCZKBRgL6jSzYyvDJ6ptRX4Tuz021fE1
7Niz1dYCieIZooSL7sBGOTsWIusnaxU5Swy2e+M+WsKO1Z2+NGd/ZY4oaqrx
NDOHHft7Ij+5Xnye6G/wXDwmgx2zcbnNk4j/S2zRnivzTmXH4jhv0QkyLBCv
g7ixM8/YMesOQ+k82iVineSodEs4O+YkdE9zCK0QeURPkApD2LHHyf03GodX
iJ4Cd4wT/Nkx7g3fucygf0QOtqNB1p7s2NVTvQ4jjatEN8YQJlVXdowqrkU7
0m+NWE3dkXrEgR1TbhwybTi2TnTavtG4YH6oL7t7qO7dBrF8tfFyjzE7JlS+
XDV2dZPItMj7t0yfHXuSKJ+vd3qLWPqLhI9QZ8dic26HzP/cJlK3M9rjT7Bj
ojeba4We7hMtm2xWN46xY6G/3tDlPTkgFtZ+vDcqzo5NzEtvi+uSAbPP5oWZ
fOyYc0ySjZ0NOcgtylWN4WTHvlrrbT5eIAf7uXu93jh2jGdHXFvvLgXISn23
c4aGHfvU4pNJWUUJtl+sPxYgZ8fuBlYVXbChAhcTtUXJd9kwtdE/d4ppqMH6
/cULLctsmJXdMudzVxpw/vrZJOsfbFiNxbSxlTc9SPF8fEx1kA0rmddn8YcM
YMllovpIDxtW30S3wc/NCJKt7v1aaGbDrthtlPQPM4F502H/njo2bF7iPa1Z
EzNAhscZymvYsFWOP68Vq1jAjEaPXEQpG9Zzb4Swb40D56BEvfMHNmxnUv1m
wU8ciFMOMtfJZcOM3uY8jvRkA0qywrfxb9mwvNacJOlH7OABt0dr5kM2DFfN
mCZIwwnOsbRQTESzYQtMzWf1MznBAtUxFYE7bJinQ24AuzYXMF6Zzo4PZMNY
2xvxP99wA4F2h+gwZzasnCGtz+UeH+ioq/1SaceG1Xl1PmIx4AfhlYS1NSs2
zE+ie9ZTQABMvR9z9DRmw8aflaguNwuCwjuWqpchG8b2cvjdzGcCsAuqCExU
YcO4FaNGFk+JAPw1nqLvimyY2YlQiahSERB4pV9IS4YNm3C7QiBhokBVyXj3
JC8bZumVYmdFdwSsyn485c1xyEdz6lZFxhGQdQTnkcN6WN/mtv8dTQnAgO8Y
EqZhwzbNVoe6EiVB71/tMqZ/OOy8oPj9Ay8pED2ZvXB+AYd9+9yleUFeGiiN
0ErcncVheZZ3pZm2pcHr5obErf9wWNTTR+qpKceByzvV69NtOAy7NJ8m90wO
8Lx8myPSjMP6aqherrHIg9a4g3HrOhymVZTYJhwrD+RufzHoqcBhW0dv3KF4
ehJsWSgfx7JwWBZvwGRlkwLIN0h22knDYfuMqYa2torARmvj1enXOOymfx7P
mR1F8PXUJ4aCBBwmnbK/swrPgFgW+ZkX4TjsZ5xnFwW5CgDUccJ9IThMrUpt
+tkXFbC0s2CGC8BhlmSfnS+HnQWms/kN0V44zO5BmwoZngiE6o++u2GJwwim
miM3IALptcttjaY4zM1HOUKxGIEjpMp1XiMcVk7IUWY4qgpkKvV0sPM47J7z
cS4oqAZUiq4tMynisIQGC41TchqgpkCZ304Oh4lKSoxNf9EAqnkUmiXSOIxV
dmPN1kATXMhKTL4sisMWq9wwmttawCylHGax4rDUB0eEaZm1wfCLiKtbDDhs
Z7Vs7muVNrjyXCdBjwaH8Si8cxL00QHN4hXtU1usWEJpkPTRSV3wC0cuENbL
iknN39fjYDQAc4wJPkdaWbG9xcJh+NMALNEcqWutZcVy/XIZHtgagv3dC+48
H1gxhjnes8KaRoBvNq784wNW7Ixh9K9gRRMgMinKZBHOin3xsO9oqjABR/8r
td33Z8WSw6k17qteAqf7Bml0nVgxjLU39IuVKTCuJZhOAlbMMkF69uEXc3C5
ujg7RpEV6zuxa0JlZwHsyjR25WRYsZUCP99imsvAu8Dt3S1eVkw6d9BSwN4S
xLwoWuZaZcFyv+/oauhfAU8T1TS/zLFgDX+Q1V0OG5D8pDfZcYIFCx7TYfs1
bgOyojZhUQcLFrmsP1anYQe++qLH2jks2Ljn01kOVgfwzbN7YjGVBfvcvm3C
9cABdLo6KSYlHeI0H+rTNI5g7Mr90Z93WTDjxMbbwgxOYEu7UyrUhgUjU927
PK7iArxDC1PML7FgNIyjxJlRFzBZGMtySocF82pnt3S96wo68Nors4osmFij
TYrmmBtI/1FbYc7MgqWe5LlD+90DcOPeSp+iZMGc/O4qayd7gli1269Ztpix
3b54RSZXL+D/XiWiYZIZO53vnJLH6QN0fEsunKpmxui/45o6rvgC0runlSzF
zFhoPa928rAvUOj3kZl7z4xFi7z5V295HQidlcGlJTBjcfYE9nfON8AKVeYA
iwczJtweYMCe7Qdcz9zVnrNjxhL+2Es8VfMHo1ftqxrMmDHZkMIryhP+oLFD
MDVUjRnzT7ot6ycdCF4mJ7nM8TJjniaZT9rWgwFr683BBlZm7Jc9B3P9pxAQ
uWesk0bNjB0wfwf9QaHA24FV1mKZCbMSk2TtZrsN1GTurzU0M2GL3dxMUV/D
QZmNi2taDRPmICWjYKkUAWSeagyFljJh83eNrA0+RgCudbIvp94yYZXiwl1/
8u+AOVJQZFoAEybjkTl2oT0S2K6Yr4d6MWEmJozn/W2iQK/4aTcLRybMyT34
hd+/KFDzYEWX1YAJ85qmitE/dg/Em3jgb0kwYbRHbJqITQ8AbbR2lIUAE8Z0
9HxRV1AMCC2X3DjFzoTZyihss8g/BC6Ck8Nze4yYTZ2A6H5BLFD5bZ1u0ceI
MRgcXxOdegI82U2sJ1oZscKe7xOdFnHgNVGby/0rI4a7weN4vzYOkCUqxoR8
YMTy+kWzX758ChoRy/U3DxixxIOD4B3PBLDpQSUjGc6ItZ1SbcieSQDHnm9P
ffBnxNavKv7Wc00EsX+nL9c6MmKbRm6TJK9nwOglSXWSyIiNbFEyGqc9B3ca
Pu14KjBiS4vM30pPJ4PSpbxPa1KMmOMnJJv5PRlwnU8+RsvDiFGqj9jfYXoJ
Rv9dY5NaYcDsNx2d40pTAIuwa2vxDAPWXryiT3J7DaDOlaiz/zFg4d5L9CdE
3oD0t9pbem0M2A/HGQaF1FTgpi864ZPFgI3czt0wuZoGXgbyvNpMYcD8SQ5d
/X1poPUdi2lEAgOm8ar98qRGOpDd3m6OD2fAKqhzjw1LvQOrWT1FnywZMLzp
16Af3JlAovubOzBiwO4zC7nYvcwE5nsk8abzDNiCONfYH+EsUGmSnzyowIA5
Y1rT9grvQThZVPgOCwOW+GDKqyEyBxRLh6hEUjNg0iHvLkeJ5IJfZr6rTLv0
2F1+wfc/a3OBVsEVN6FZeqzy5qmAJuZ8wGR52lC1jh5z2/qvOa63EIAoGYaW
CnrMJ9QVexL3AfgUidYbF9FjRz0o57yOFoFuGlYlp9f0GN8jfRabxSLwvOS3
8L0Aeuw4f07eiRfF4DSX1KaGFz32vXTmvD6+BPQHenZSONJjEZ1noj3jSgAX
WA6/fZEeG+fyLtxMKAWJzdsTfkfosbMFn0Stv34GCtLEylP89FiAXvHTZLMy
0PMoLH4ZR485Hms5cmOhDLCbUKl77dJhn7ujAi8fqwBxP5gznHrosN6CHi7n
jioghwxDRb/RYYqyZe30d6rB9/T4S+M1dFjl/hIzrcoXwOLGTW2dS4c5k8gt
rpfVgNgVgotJBB2W/j5CMmwNAzKmjoAtgA7LitCZlnKoBa1lmVzfPekwQsPv
j75dtYDhllSTjgUdtjGZ+pG5/Cu4T6twVO0EHVZ3m2MWvK8HR939yciO0GEC
zvLXwqUaQFNb+eAXPjpsfuy433hRA6CJJz5QpjnUHyuToNHUCCIFzs/J/aDF
+J6FWn4Q+AbEwx58XeimxSIeTvutVn4DdROtL/ObaTFp8/Xyf9YtgOK9oe7R
UlrMzCDhhX9+KwiXt8wXfkiLnZairSIL7QCExJTIH+G02EqXMOU9le+AtD5m
/cqfFqMLr7gRtvcd7Fc5MnM70GJL12wFkpo7QaiWlzeLMi12r80nXSaoGwjk
fNBqk6XFlCadX2f/6QZVjCtCMeK0mK5knVKLXQ/Y7vT/To071MdVgFcx6QWB
VuFye9M0WOfv7uPhlv2gsjXp79woDXaLYyXCeKIf7J4tyB3spsGOkWb+k/EY
AGECw+KlNTSYNdkphXP3B0H0j1O8Hkk0GPWOY1DO7DBo1tfpt4ilwb6uaAi+
iRkBDDV2CVp3aDD+W+alR0+MgsdvHjGLetNgrOMUcfp3f4Bntr/JhzRpsIcE
MgOa4+Og//teTeNZGkx0evnGSuw44EEcoaXyNJhvUlzC7sI4SCGorj8RpMG0
2VbPJldMgIyJl3Naa9RY2mMnfiX3X6DY8WJPaQY1tjF446Wyxm+w2uMUl/6S
Guuiydbub/0NTmuE6MfFUWOXzJz7HMxmQIV4dpNHKPXh/UZc/cHNWYBNkVeL
XqLGTssaeLf1/wEUZjxBOB1qLPuV1X5WwDzQaJQ9vQ+psRghib5V/r+gOcuq
aEiaGtt/g/hO+iyA766fMuIoqTFvpz9IKG0J4AZb7W9vUWFVttvImmwZGF/4
KeS5SIXZZHHKv7VfBv1HWV+cH6HCbnVqhTtKrYCxWbdH+8VUGLWSkRRN/z8w
7yHg7+lAhSlcpO0bSd0Ac706IbSXqTBM9nwzxr8JZohB4ekGVFis691Y5peb
YIq1P2bwHBX2wPphGuObLTBW8iRVg5sK81ZdCBqv3wGjAjUZ/zFTYTTiO5La
prtgOGo+J5iKCtsdX14JnNkFA+bapUXLlJhh0ycXe+590LlD8U2gjRKrraEz
ctYjgx1O8h1lXykxAz2RTp+3ZLCt3bbHuIIS+6wcr8GxTga/pVb/uJ9FiZmT
3l+7kEUOv6r7r6yGU2KRMNn5JD8lLH04y9+uSInpN/OSCdrQwOJVbhE3GUqM
voKmOOQ7DSy6oiVBKUaJfbq+Or+pRgsLTryTU8ZRYi1fQun95OhgVo+1ZuYc
BXa9K7A7WoIBZpx7qIMmKDC3aKmKPzkMMD2zwmBkgAJrAzKXSCcYYWoAlyVb
AwVW4+TZ90ONCSbzd3rfSqXA5Gpt107cZ4FJkfs3eJIosIcPPmqpElhh4l+Z
oJJYCqxIPFlZoIoVPiU9uDsbRIFZy3zd/BCKgzGO6smmlygwI7OnO6Q2Nhia
97n2OD0F1sOOifyp4IAzuvJTe/vkmO7z67Prkpzw0nweXccqOZbo5LghmcwJ
jx9PM/AeJ8cstH/0ioRxwbHChz8Ky8ix0Cgx72duPFDHgIY8rIAcw4j1on9m
eGDZYri4wTtyzOrsf3aVHrwwTs7fY/ExObZGuXHYMD6oWmy3dcKFHOtLzRfl
LBGAhcYjAmTW5Nin9z5vbl8QhHz/TFGnETmWvJ8cUTsuCFdO6d67RiTHii5y
SNHyCcOMT4qcHznIMc1HQR/vDhIgTQWD/Mk6Msypyqr0TY0YvH456hJFBRn2
0ejgl42YOBzbOgjoLiTDHqrf+e/ggTgsU1mruf6SDOMKNHKkvnIEulX/p1fi
S4ZVaETvMvNLwl5ry2t3XcmwrjkOxronklB1rzfB5AoZ9qQBl/6G5ijkAy3D
/y6QYRnX3X8sbB+FraRSNwUCGVb4uRojP5CCSnYnYqm4yLCNK4+NN6OkYQZZ
7odeRjIspIRX2IlVBm7eAX9nFw5I7FUXUxuOHYeW0Xh6j9cHpLuJuIzxWyeg
8KMvyGt7n2SgKBj51ewkvEb6ye32e59EpmPqfD/3JPy6TLvo0LtPSgRC/MUH
J6GTmfFri8J90ovHjjlahadgrvDvLXWHfVKtwuMFVkFFuGvE1AUM9kkDzxQS
noQqQv1I+Wzlc/ukFo8sjbc/FOHSTIjZCa59UjadyFhsxml4uhhXwteyR3pJ
FTwItZTg/UnFGM6yPZJvTpPmarESHOKyssdl7JH4o4Z3PESUYWhIJivN7T3S
Ou70OolSBX7VUPFclt8j8bAELFeMnYUXBxyPNL/YJd3GXJXQKoRv6R/sfo3e
Jdl29o6cQwguny3s+XJjl2Qs7TXvdw/BxLebESX6u6QO8rrL+ryqcPjqo7E3
5Luk6xGln2l01aBMSvGnFws7pKSjV9eDX6rBWx0DsYkjh0s7/nPC8T9qkHBK
9GzMpx1SQ7Lcsm2cOnTZ/fzc7+oOKZ7g9Sp4TgOWy456XzPbIRn6rrY4aGhC
entyLQ/1HVLm5Yc/C1M1YX6D7qqd4A6p0bv9fbSlFlx5PG6o17VNOsYoufl1
4jy8LcLAIKa8TWrqVmHgOqsLOXwGcm9JbJO+t74Z8sjThbnVGbqD+G0SmWre
pLugHuw3h48eLWyR0D9pYgiNPpR9fBO3+W6LpLigExT99yL8b3uMq51li1S7
rnFKM8YI+l/IL5Pc3STRseoVCXYZQaakIIs7s5ukVyXvSTs8xlBJnuPlmfpN
UmUwA11/njGMc9UWTA/aJOXfU/dyHDOBqLdELGBygxTprupIEWwG+0Ui6ru6
NkjmzSelR7rNoKfPRWcZ0gZpW8Mz/5+MOUxmmM2aeLFB+q0oXfdv0hwuIyEp
PYMN0uMPnXNpTpdhesF9OZHKdRJB1K7eJcsaKu2YdoW8XycF3+96JMt5BXZc
ELven7hOyr7/8kVw1BW4/etLyUOfddLlehOxYncbaMz37/S6+Dqp85+ZMLu4
HaS8d4XY+mSNFHp8aKH4mAP0V6/jiwtZIzEoSmuDmw5w5uDo5iXXNdK5V2Gv
fpAcYFvgavEYWCNdQDnMLpaOMNH94dGVv6ukPEd/J/LXTlDiYgWeV2+VVHVt
oOqFlethPcLLP86skr50zRrwVLhChqbIjnSxw/FXC15Mc7vBRWj4QGbnH0mm
0Pf+nSE3WC7/ex/m/iOlJiU/lvZyhzqcnHMudP9Ibp6KJLJhL1jdFdwkvbpC
soijo/K/6H3Yv/GMpf9WSDr3HTzD670hnjbfNrhshfRTrsnN9ZMPHN1U63vk
skISljfrjui7Br1Hr2Gl9csk76JK85+r1+F4cv/roKJlUklctd3cuRvQ2PRc
CEhZJg1yvP09GXUDnumgPd18Y5nUsFUvWc13E5Jhb/JGRJdJ7eN7JdDQDz59
15ZEEbFEKr9iZMz6NwCGGjlQiXovkaJObSQ+h4HQ9WDDV9VqiaSC6zXhSwiE
RCsx/XDFJVKn2YIALzEI9hxZpdntWSQJvXyYr/o6GEZSGYyvZC6QVoq/O4TE
3YKWdsFV8uELpNG+26Ej/25BuerMpGuWCyT+kt92tha34eiNXb0FlgVSob/5
zR/iYVDxV07FbMBfko9/ESuZSzicrqVKGNeeJ7VVRp3Il7oDqwXlvIXF50mp
HtNfRF3uwPggK22b/T+k13w++6rpdyCQLz4YKf5DSvJVSwgXuAufv7X1HOD/
Q7ok9tDrKG8kvBBWqdnxd5ZUJ0VREqoQDfPOXdusevqbdOFFyXGf/Rio4t+m
993tN4kqVZaM5/JD2PzhaNpP+Jt02VRkr670IZwUndCmX5gm2e57XZL1iYVC
9MavzHSmScth7CwPlx7B+L5TYJliikTRXmRXlBAHCaxx8VTDk6Qjk84hmd/i
4IcL89PcHydJz7bxV2XJnsK2qownwHaS9J8Loy+Zz1NInc458bDqF6kElRo2
msTDQO+NuxI3f5K83kfRT6kkQppsk0Fl3Z8kJucguazgRPhs4oOMvuhP0ozE
viVLVSIsvuTWd6NzgvRwIfDtIPEZ/KMyJFErM0GiF80zDdBNgtUs/gllLf+R
kl6J6q/cS4b30Z6QaMEw6YV229ekx69hGcFsocl6mHQhrJWGZvI1nCb78MWL
aZgU2LHw/JzKG6hZa2dd4TFEukxpZ041+wZSqNW/MJQaJO3u2T9nPfoWhqo/
5Ah730eyGhGYrUtPg3lik7/EzftIj4nHxXd70uAwJbGkhaaPdNkj7VIadTpU
rl8w4nLpJRmjoB8K7ulwXcP4SYF4DyliV8IjTukd9NHiZRhN6yR9vj+SkjSX
Ad9IXB+KMOoknUzaiZ4QzYQdNK3ZkuSdJFey71rpVpnQ4vHW42msg/RuacPt
Xkcm7H6C0XOCNpKfFtnaQkUWbIy/eOCr1ERK9RPWznqfDS3l+3rNLStJZH9p
kvh+5sOMb2c4k2UrSKU+vZjSkQK4aP/SdJCinLQUuxDX4lYAI+Nt+y3yPpEO
/vvlqrNcAD/8mx24vFtEWg1LfltH+wHiBrc9fILekJpP00x5ZxbBjJgPRHQ2
C8aKyFtVc5ZAVsu5alJ8NuTjMmP5Bkpg8LEj5+BcLuwFF33xbiXQoPmlCnjx
AeZQ3ImzryqBexR1/G9CSqF85SrdlFMpzEaFPClDX6CiOcxNrPsED66o0bfp
NMOp/E+g/kM53HypT2X5txlWSogdqZkshysDFge/n3yDrecaATlfBZw28lmj
7GuBsUlPWhyiKmCbZsrEWdt2mM79UuKpbSVs59oZ7VPugkrd6eORItXw1f6l
T5oX+yH/OWn7r8MkyO9KVRJ/dhw+Yfj732WGeuhm4soWYT8Ozx9RSv4lVQ9L
YYuPz71xKBxa/TZKtx5e5ImT0esZhyJ7At/ZHtXD8G/8WdQeE/BpIuNHDbYG
OC196kXgy5+QXZnv3U/BRli8ZB9mszUJuU5YLGtrNcMLwSRdqbJZmFQZvPat
rg2O3l+W0xifhaZeUzUOf9qg73MxLhv6Oag+b4WnwLfDl6X3xp9azUFR9pM3
jR3a4fyCgd/WwRx8mK8TI0PeAeMcx980X5iHnbaXtMzhdzigR77iMrwAu7qL
atZHO6Gn1amBcMpFWJ5q/blwqROSuTtXv5RZhN+U5nPsqbrg0XvfojtuL8K7
ksluZdJd8Mt4M/MrtiXoO+twgy+4C7LyP02n+LwE9XyEn4dxdsOSJyJtXfvL
cMjadLpeoweWh7Cv7bOvwFvly4pbZj2wxpVSSEZyBZ4svD8sfLUHtsApn2iD
w7gdJZ36ox44vpiNP/t2BT6hUFIZ6u2BTIZyVhmq/6CzmbIWrX0vdMHBOf/I
VVj59jwM9+iDnrsn8BnJq7B4sF8vIKQP+s4QznXlr8KJYb5984d9MBSjeCzd
twq5n7yAfbl9MOFao/z4kTWoYfxivWymD2Kd+kHaTWtw+kba90nbfsj31JpO
gGEDdlF4/SWoDMD3DwXTFgQ24NwI3ca65gBUiB5Trj2xAc996flabDQA9UPs
PFxMN6BEqsXcsNsADHd26ih6uwEt8pkfzzwbgNPKnomaZzahpM+F3e65AXhD
4fhxHp1NOMJ/5vbS6gAkO7HQMGe9CWXCi9iW9wcgr/i1jSd3NqENX3THS/ZB
qMdy03K4fRMuCafYxioNwuKfIQQfpy149HaaWtPtQQh/nKtQDdiCA0dPiFLd
G4RtA3tGHDFbkBfX8E3kySCcagu7W/FhC86/0lzYfzMIecruTlPubEEroSd4
4pdBmPlRI6yfeRuqh/GXhdYPwpP51Dw5hG04yhp0LKV1EOqm3dO+qLUNq9oU
aYOHBuHthw/zk59uQ4rvF18W/huEjNF6mh4Z2/CVc1LG7NYgTA5nHiOWbUPX
U6R3lGRD8KPfE9Zfo9vwi6CFYC/jEJy0Tbh+/OgODOXEOU6KDEFfy0uMZGd3
4N9sZX8OySG4f4kzo1t/BxKzmRtEZYYgj87zvoAbO3AulLtuSHEI6iq8Uvpa
swNNPKwFPpwfgrukukSpnh1o/RScldAbgvm680vxv3dgX4ri2k3DIcjiSMxx
xO1Cx93Y38kWQ7BmwZm6TXwXyt532/SyHoI+wY/tFZR34dNsQ1M+uyHY+fQ/
XmqHXdhqlZG/6TIEIwTp/L38d2H869woKfcheDJHrrsvZhf6jv9zPeU1BH8q
XJYFqbswOqtKA39tCCZgETFZJbvQY5uSpeX6ENTQy51mad6FpePPPpv7DcHV
gW61gNFdeKKO/GR1wBA0WxTbOU+9B4P94m7Qhw5BmhA98yLePbgdVi2+cmsI
ltH4lfDI7sFLWX23P4YNQbf416wRanvwVLlZ0PmIQ3+EGj1mzfbg8dm7TKV3
huC3nIUmI489mM7qIb9xdwgGK3KLV4btwRM/fk3gooagVC0MF03cgzW4OB7y
6CE4ouc2GpO9B2XSRzqbDnHsYJzSv+o9GPV7l8b53hA851SRaNW1B7tKVssG
D/HfxYmluqk9eMPn8YTo/SH4JoRBX2Z7D/JI2d1RP8QXaU/lJLLsw3NZLS9U
DvFBvBX1nug+PGWzJUl3iIuEIu2dz+zDb3d+Hs8/5LPLzf/SrrsP/f5pFUgc
YtzpPt7TdvuQRa44O+BQT23tnt+bm/tQQCNYLPVQ/3V9iW6aB/uwPI8k8jpy
CIoOXZT1eb0PN+S9sn0P6+1xCogZ+LgPV5vPfBE49CNyKXUaNu5DV6s3Lm/C
h6BCaLNa9vA+7H8+m7d+ewhO0S6/wS3uQ/tP0s+OHPqdlMC7E0h5ACVPImnp
kCGoJaxmPsF9AC89bA2gDRqCG7nuJdoyB7B+QSWq0n8IZp9OYC1GB9Bsus5G
4+YQtPha5cFnegCndx1xmb5DkP7iZNOdqwdww3o8a9R7CLo7K4abxB/APH2X
ik63Ici/fGW0KusAXnw0avzIeQi2hUYriVcdwJYoWiYRhyF4PHFgafXXAUw0
7yF0WA7BMWEy/SubBzAzjvHtb7Mh2GSa2OtAQ4b6RSSiB42HYOBEtVwrHxkS
03vej3SGoKFkl82BOBl6tvLavVxzCB71moo9dYIMfa2cKqdVHYJDm8yzr9TJ
0PiXn/8dPzMEVXC2aZ6eZMh4jYzy1eH+NLtide+fHxlqfs3jd1rg0P9cc6/g
MDJE8XAy+APXEMzVMFS+H0+Gth3FUlUO9zdvkGrXu3IypOFSsFG2MggVGoll
Ul/J0PsLq0Vq84PQEK/y+mMrGbr3Tropb2oQ3i84eZU0RoZKHEEQ7+Ag3JwQ
Ix+hIkeRQ0K8LlWDkOME4bc9CznKwcxGpksGoVyoQPsMNzmy2S2Z0sofhG5c
nC/WpcjRkzAl48yUQTigQyPPbkSOKMv7Rf4LGYSfS2bstF+To2KjuiUnhUHY
TTal1ZlFjgzEF47MSQ3CBf0JGfMicnTWbHvQUGQQSswMbTrVkSNzcV+zOuZB
+EygNS58lhyJPrvNrTo1AG9GFWBlihSoLOi0df3jAXjK/DpBooMCOZQOCoq3
98P8pJcitwYo0MWDb6neWD+U6P8q2jtOgSLHKjXTSg7/L6b4I3f+UaA9F2oS
6UU/JDMpPTbGQ4myl1iwaad+2HZx/WSSIyXa1St8RrfRB120gjVptiiRM8Uc
JRVTH3yheMd9WowasSe2vcuk6oEhSpEitvm0aE11MojHtg22nL9Q3fOJFu06
SG5jKm2Qz5zJ/AKJFnFzxrdc42qD5X6JsfLdtOhbxc2W3+2tcLU4Y4NykxYZ
hjtIE4mt0PN4Q3u2Oh1Sb6951S3YAm1EaYJXhukQOx12aWmmCaoy3e+OomdA
og8WmKjK6qDo5MHFBjwDqqY5tq6SWAepqgNaqYQYkC3nR/MnvnWw0cO1/u5J
BrRYdyvgqUwd1GnV+hxhxYCyuNFr8oyv0DiG+uWtAgZU3vVutDa5FjrQ3bX3
M2JETwktTmKnSVB9fPtHqRUjUuYucPq8WQPFy69brjozoj9KOUNPqmrgtKuD
yY1gRnSJ1ZCDW60Gujepavq+Y0TXgu3Jbhl/gdejyY55rTGiVcjo3x1eBe9S
3V5yesGEqp0dCe85yuHXDpH7N98xIcZsbSXDiTJI9qJBOLKACf2aumGoWlgG
bx9nNnhXy4RuDVa+2rlQBgPNUgomZplQgy4HXVfEZ+idXeluo8KM+mtTRPfJ
PkFLvY1J8xFm1Hf/mhiXYjF8wfUq1HWKGeU23jYrYSiGg+OAI2CRGVWEWiwm
jX+Epn7R6kmULAilPOqWe/QRGr7hTO+VZkE2ZpLZebNFUGvplK1RKAuKFtLy
Vrb9AE8mXhvSEWRFIg0pW96jubDUefdogQQrUnPR+XXidS48feZ+IKscKzpV
Ne9jb5MLzw6ncveqsaKmHZptjp85UIPw3fSKGyta5+42LVnIhub5x7t9SlhR
mKuYn7/Aezh8q0Kku5oV3ThfkIufzILWBpq+Co2HfC4JkD8/C9qtWOO2Bg/z
8T4ZcSVmQXel2It39lmRL20/5R+nTAgc/JxbxHFoebBNX6npHTzQOfso5BgO
MXZI0V149g5ip8g/ycjikP0TnEyV4zuoRv2I6smZw3hx4vg38nfwfHbGOxMd
HKI4G6QYqpYODRd6JkZ9cOhy70eO9r630CH4pM1iJQ7dY/pCyI5IgZ7nu9ep
MRzisvvmaiObAv05rj8RaMChsSfOK8Mjr2BM4UdM+zsOvb53YlpE+RUs+Skn
lvELh+ya/3XU776AVLonZiyY2NBcePCSzvvnkIXne7gPGxu6djOnvsv2OeSZ
8uaN5mJDPeK1coy8z6FMWKFOCYEN6blUz8c9SoKmJccLmBXZ0Na0bEfD7Wcw
i1/m+tcrbKgUI3/WEJ4Ai2ZaGYYc2NAv6SHCpHoCrPzk8W7RlQ1ZXZX4m0ab
ADsM8noFrrOhjE8l0etx8XDjrtSZgGg2pJBhmPkz9ym8MH90V/oDGxKaOUYf
sfYEzlYfiX5Gxo488KYmktQxMPFRRbApNTsy9Wo1u1H6ACIbfR9OBnbkf/Pc
8DOnBzD54KbFMzw7YqZ5GmjedB9eUKuXeibBjopNWkReJ92D2U0O3xP12NFG
18/tcssoeCl5ve6SETs6y0Rfk8YVBcmuxpRzmLEjpjVBVa2eSGjBUJyWaMuO
Qs6GCVZfjIS0+uQ3E6+zIza/akz24l3o0p3Kk5jMjuJ2OKV6vCIg+7tTzJde
s6P7tbq/qxQiYM2NJnKO9MO4x7mS87vhkItzcS4hjx3ZaZ9JUnsUDhvMwZeE
GnZ0jfD4s7JXGBT/MWqfMMmOSplem+nohsLOgmtmJrPsyFy9evvIfAgMvU2l
i19gR5Ju1B/5HofAXmEZhYQNdiT3uzpPoy8Y3nUIoUlgwKMfbmJnjK4FwZ+/
efPi5fBo7+giG8uAP/zyUb1ARRGPir8LS31/4A+TQ7w+/FTGoxLL+zYBRH+o
z1pbclIdj4Z3+vhuvveD5afdqrtN8SiXvaFyPOomfBz1uZ09BI+MKg+i092v
w6sG498rw/DIbHQ89rvUdajBy9DtEIlHilUSwbV/fOFW/pX+4kd49E6Pim7e
xxc69VL9Z/wWj5zWH34Wj7gGVcRMluIb8Iiv8oXpQowX5PwbuqLSgkcjDNUv
OES94NLnrNWfHXhkCd1w9ys9YabO9ubJQTzaZNf2v7DoAXHX08h75vAomzds
ut3VHU5ji+x4HAeSiSURt566wtoYXs4qDg402F3Ga3nOFaZcUud25OVAOy6l
/7p/u0CjmST+ElEOdOK4hB6ZmgusZgXiJoociCs9vGyVwhnG28QqJlhyoNSF
myMlpQ7wM1Nc9ltbDvSHIYnC6KoDHK5M4C904kCVDn9ZyYUdoAj3K/Jv3hxo
/WXfudhH9rDoe077/h0OtNkg4LTsbwc7UJOzex4Hirs/iLu4ZA1XFloGA4o4
kMF7Y/qBQGvI9bpDN+oTBwr8deoWgdIaXtnqk39L4kCtH2OwHwJWcP7j5F5f
DwcCrhsRjk6XIb0YRZLqLgf6rr/nPArMoEwXNb0BOSfqEVs5NThuCg3D6EOt
aThR558mKhhpCpNHcA4BOE40cy7UQOX7JSiRKCxbIM6JWgfylh38TKCOmlha
5TFOFN6qNCovagK9lyQ4mmU5UdqSo7dWpzH8pCe7/VOJEzHE2w/LyhlDDWpi
I48+JzrRUTl8d98QupUgZQljTkT5UvIDzSdDGGuvkX/KnBOtDVfwFngawp4v
uvEX7TlRkUmSTE6NAXTwt7SJ9ONEr6v2JdA7fRj+O2B98TUn2uptfPSlXRtq
vfBpyErnRCm2V6tPO2pDRl3XxCvvOdEbFktyze0LMKnQ7GRrEScS5/ikxHj8
Asz3U/TOquNELxu9qnIztOB1yePEK82caH5A6IGSlhY8MyTOxNHOiVa7Igfl
ZzXh13McuRH9nEjy5piJySlNOEj5b8p69jC/1gOz1gF1+ObTXCl+gROdOo5z
kI1Uh46uP++2rHCiK+9ecg/Iq8OFli4RpV1O5JHZlfY7Tg1SxRddwbNyIXlP
KY6HV1ShHMG775sCF+p3k4r0sARwvcs5I1yZCwUXSb37O0CEVXev3DgDuFDP
cjVZoDkRav3WY8s8z4VCnBd47lufg9aF0vrhllzozIt4lfZbKlDUTkzgjC0X
uj/cKNbMoAJ/s/H/+evIhT7oJf+Mf6EMr/sxPLDy4kLqfbcv3apWgvfPzdaf
DudCNnl+P5a4zsCLC+MJfyO5kDUKLij9eBri3w46ZDzgQiAq3Ybz4mn4hrKZ
jD2BCx3F+nyePVSEpS1Z5/5mcqFUNfuZeR4FOG7hVPqulQsdMFnKCwTKw4UF
xVVS56HeMbPMKDF5uBdJqzDax4XKsBdEr045yPcxt4RjnAvx9N6VfyMrBy/R
LxdHrR7W38u1WLNxHDqkfl1J2zoc7+17U8z5OPRVTDxZs8+FfkxpiEv0ycDH
9meK1+m4Uf7ssuRwtTRsrrj10VWQG6WYUZR25xyD/QYGy3dFuZHWq2sWe1LH
4NQUQf6tJPfheRbz4HrhUUjBXl80KM+NnAKy3nNWS8Jz7gxF2lrcqNZjOuL0
8hH4ge95obQPN2IXpL7OUSUKa4rcFs7f5EZpx+ifp1uLwjYtFVmnIG503GQk
bvFABM5c/1GQcvdwvMW1uPe6IlC0VayAOZkbJT2zvXjnrzCUs1+bP/aaG/HN
NpP/1RGGcKNRRiudG5Gqnjy2zxOC1mLu+bfzuZHorfyIk36CMCmkKG8R40Y3
AyLSaaX5YQbbnT+MjdyIS4zCxySVD5a8N5E+2sqNYGw/vToXH+zsWc+16+NG
z7VNro4x8kIGGWJu1yw3Uq24ENbAwQ1vj37LLmHnQbhnH5/NJOChrP8TjSBu
HsSe+ug5pQIejrGajgMBHrQ8IBI21McODy+c3C1HeBDvlVCTZCF2SJa7Hj2u
xINUmTiKk+twsEi9WjSLyIPYpmc+YNdw0O5HRI2HGg/SWdQheAjjYC2OeX1d
lwdlHngYWVKwwjsBYs7MtjyI7lWqk1seEzzJNkvW48iDxnVa64IFmODP3MKU
ZDcetDd10k82jhGqjyn3il3nQROkTzm6YQyQStNQXSWKBwWT690UD6GD0ey3
RFzzeNDX6nIH3nEqeDpf7YtMEQ+KLdjlUPSngtOadJdXSnlQrn+dnT4LFTwf
lBB3q4YHOeq/EjXUoIR04zkHCV08KA/nMJnfSA7Lg3xeXe7nQa6Bo38qPcih
G17xjPAID6KXdF+OYCeH37Qw79xJHuSswV3F70wGYwr6f2AbPGif+2qM6dl9
oHI+JSh699AvUv1zi9Q9MDduz6lHzosIdO3y5jR7QJfjr94AAy+qq7JzxP3Y
AUwhlNV/BXlR4J+3X8jyt8DjC3Iv+TR4kR2H/MO9+jXgNfJQvfkCL1Kv0fPY
vbQG9Lx/z/vp86LLqjvrQr9XAUPiG9hlxotuKG10vGdbBff+Y5q6d5UXldwd
aau5vQJcrrs9VvTmRfGdPuKdQitAi7r+zK/rvEjGxqqlElsGVNIhMSCUF/WV
d1Vt0S+DcP/ZE2uPeZH045xiT4dFYEuvOZSewIte+Z3wM65ZACDl7R3DZF50
Fo3hrwougN1a8768NF7UFJp29O/kPAhkbgx2KOVFA5eeF1U/nwO+GekN34d4
EXGwxuFd+DQwPLPvfWuMF6U6RU5z008DuZbLPNK/Dvl+Ge/MJkyBhUWcR/Q8
L9o33CwMKpoE7mfDcMQDXjQmMYjnovoFtDuGK+Yo+VAvXXeUxpuf4Kj9acdk
Oj50aWhLIUTlJ5iO/vvpHxsfKhZbERoOnAAO3VZWueJ86Lk5S4wp0zhQdS6j
sjjGhziDGLgDPf4DhE32QmpZPhQefiSrtnYMjAm2kNmf4UNz3GFx0YE/gNVV
pSxuHT7kUWVyi5l5BFwi41yO9OFDFK/E5Qrr+0FogA5j8k0+hHrob/gT+0HG
QtiRvCA+9M+I+A1U9IHV0bnLXXf5UGNUxtknFb0gsQL7KpjMhyjZqitujXSD
arn1UbnXfIh0Mr8u3r0bTL6X3lBP50MnWT6Rn9jtAgpJSdLu+Xwov2MRNkp0
gb7rnomfMT509iuebv/Ed7A/m1b4rYEP2Sq1DHy60QEk7AeaR1v4UPu3g6DC
qnbgb6C2R9F3qF+Mj5raog1wyfC4GMzyIfchFvI+0jcA3umHOywc+iV3q1pQ
7Btw4bv70u8fH2JTM2jafNAMPtMtdLza40PXvn5o5HJoAmZTdWdm2PhRCePt
4v+UG8Bt6y2jHS5+FDT6UDmzrB5k9ch6sgjwI0Ha/pNXlerBeu2LtwoS/Ojc
n9xXOWp1IOmND32ECj/6ERqpqxtYC2o4M8USIT+SnRGYQEy1YDp2mPhegx8Z
B30ZLkvHwOkQzevtF/mR1XGJtZ8FJDBgzj/C63iYz0YgSe5zNSD7brgm48aP
3EnF7mcoq8FRrWhW5MWPtCLNf3pdqgKBCsvqLgGHes5E+jJQVgIetqb84of8
qIx55O+dx2UA3d9tbIjjR94l0XSR25+B24H8xOAzfpT77+kQhftnUP43hfMg
lR/Zn2d2P2byCVi0XL+tW8qPBB4E3SPTKwGimimrtBX86JSYgcjEUDGYJzW4
1385zO9AO6DjXgzCP/GYE5v40TFblHMn/iN4/7bmxIlhfoTTH4w8sv8BXOOf
yfwzxo886I0F4+EHoJLEJpD9ix9teb2RUI8qBB0PnehE/vIjZe95I07BArDu
zzDBTiaAJvhhBW1oLsCWT5l/pxJALwJrmUV/5IAYzyvtD+kFkAq3jl63ag4Q
ciiqoMILoL/mVx5kcmYDTX2z+PUjAsir+EsU1VQmYGkOoyuREkA+or6l5XaZ
YFAt57bPCQFUiaOj9PkvA3gq7brPKAkg7jhWmdSpdyBRLF19WFcAPTLOYdHH
pwObN60VSYYCaAee5TDITANHeddOmJgKIKkLrZr9ymmgmuWCQJuNADqOs648
6/4W/Nr6u/rFVwDt+tATO9tfg/yb3B7B/gIoJZBC+Dj3a+C/iCZOhwggzkdO
jrVOKYBhKqH9Q6QAOioY9EOO6RU42amclfZcAB1RFpjPf5AMdnUcBWxSBNAt
xjf31Faeg8aG2Hi+NAEU9OFa2RWb5+By1X+3E3IF0CdXQnYvSgLhWVHmUV8E
EGvBLeU8mUSgI/KhXfWrAFrQ+lFr+CEBcKQMqu83CqA7UeXEaYUEkP1UWi6g
UwCRvy3Jfn0hHnwP7aK7+ksA4bvWIoLj4sDPkd7FmBkBtJoXfFqHEAdWVQb7
8/8KoKpQ0LPo/ATwbY1lLG0c8n/qZNStfQRc/OZRIJMgotCfnuz9HAOCehcl
X7IJIoFvQVVPyGJA7Kl/LNVcgkiRcyt69+ID8HF5a/SAIIgCbRdu+G3dA7te
tEH3FAXR8zipj+0RUYC1ncEuR0UQSZfvMO/+jQSiMiznW6EgemnaO0RmEwku
zHFwsuoIouua0Qwy2ndBgovoxyQbQYT/T0rilnYEyGo4klzuKIjmGrYovneF
g3LxY2HDboLI907TLbUr4WDs5wl9oRuCaDH1Qm/I9m0gZUuczbwniORv2dn+
qAkBxBrU2RQriCbD2lcd94KBoaBG2exTQcRHc9WXSjUY+I3oRB1PEUTzrHqc
rAOBADO3EPlUdDh/+YzQiIo/6PlsRTfw6VBv33eOqjd+YJrTdnGzUhD5+P6b
x2j8AFOv85dzDYIo9ggrRffPG8Dc8Mbl+iFBlHdP6rNSsy9w/+CPpscEkan+
YKOvji8IZQmWpJsUROGv2DrpOq+B9LbwNd0FQXTjqJPX0jcfsHDh8dMeCiFU
W8HHLejqCciznwau0QohNZM89tYUD8BB+8yWm1kImTNFMywMuAPlhlfHrbiF
0LMxy9MUNldBpGrOt5/SQkhuNcj2baYLaHyhVjMvJ4T+KYsp8NC4ALqVkeJ1
RSEkS8nS3+XuDB6ms6QwICHE/rmu5iVyAvGUN71PXhJCTDxaFK/4HECvFbPj
uctC6IVOE4XCS3vAWZplrmUjhBT5nsQiQXuQ7DSELN2EEEuO3rzFcTuQ2gDw
d0KFUPY1c/2L09ZgXHCQNjbisJ6MAPplbmsg6u+7+yxaCBXNutNIGViBLImM
qZw4IURX3Pv9W/tlkH+PvrwrQwjF9/tUT9Cag4X/0vNHcoQQoEnKM3QwA3JK
59KmCoWQWOW8iXqtKSiZ8Y7ZKj+sR+/OA5XYS6BSu9dapF0IfZzV4tAxMQa7
aV5G0t1CiP9sf1ZuhxEgbtNoKQ4IIUZDz/gP+kYAy1U+oT0hhLQKwibUzQxB
E2Mque+aECIblL7IIqQP6JyU1oO3hdD8ueRzf7X1gE5111zkgRBavr++nROi
Czo8qXqT6YURo1/DgsCSNuhtv5qFCQqjX/d3emp5zgMuCcpXLaLCSN/0a42d
jxawuJ3ypFdSGLUMyCiVtWiCEdnvgTPywsjDu0mV/okG+PlEQRenJYxWGPe5
pnTUgPhMO+TTFUbnW++l/qhTBc7IVUHcUBgRXckjU5EqmFl6IahkKYy0JDWe
c2kisGh0sGjrfcjfZ/RQYeEc6C6IRfgbwshhujIn/Mg58Jme72ljgDCiOyVr
wu1wFoTWKpw8HiGMukDN3ZdzyoBB3v3mdoIw2ru7/8dB8QxYiN2oL0gWRllZ
jXmuCadB10wkp/3rw/p2X70tX1MEyW9TPzdlCaNSGaM7HY0KQALXt5lYIYzO
eRw9Pfr8JGDwdNC+UHOYn5XnjgHnSfC3afHFzldhFCNz+JhJkgelYQxnHdqE
D99PDyPPpMsBtUV468R/wkhT+NV3Q+w4kNBtb//5SxjpHbXXklmQAfTvLYWS
Zg7j8X9OFojIgE4bP9LusjBi4Dt5jf6FFDjh2kfmTEFAwu9OVWo2SAICp0BO
DRUBsRQHCtsJSAL2OgcjHloCCovXe8QYKAHWhZbSWhkJyG7MwvXVuSPgSz+D
+klOApo9Ucp7Y0MUFEYa/XnITUC1JZ8ZJ31EwduTyQlTvAR05ZSAIPW8CIh8
fGQyWYiA2paA1eoCAehqoagDSQJSf8M5Oa0sBM6tRh+/LEVAJjTRJS/sBIFs
entfsQwBndMivwgfCQD2fUsJF3kC4r3QQqrd4ANDn/ya2lQISP6yzfebzDyg
xbHaR4JIQE9Vzkfcs+UG1WyUPOGQgIrkp6OcPnOBt15xbqc0DvmpKv5s+3IC
1yN59C/1CejT+b/JioJ4cLvBxl3CkIDSCK8uZUWzg0Rn9tZiYwIylbo3/GqV
DWCZQbGt5gQ0ssjH8OQHDvRrHv9rbklATES0pmuBA/NT4/qT1gS0IPsG8RSy
Ah6JC6x79gQU6HxCgYgxA9nGHZ8HTgREuqxzw7uXCWi4fOjkdCUg6arUK6RF
RuCbxRUv60lAOsKDIn9UGECLxBSHnT8BeQ8H+M4J0oLxxmS/+UACipJnb3rk
TAPWXfT6A0MISNd1SrGtmBqIvS95/jScgIaP/3rke4Xq8P3iuil4l4Bk2Q84
7lVSAsPffJdzowjoD+/af4kClCBU8g5fXQwBnUzo4qRcJAfxTYohBo8I6PYt
XyF+W3KQ7To7MvKEgLgSfye97CEDfe8NX68mElDuleK0xPgDouxRYYJEKgEx
Eu3frzftEDWau8OL0w79NEuUyv+9TbR0i54AGYd+fR+Q02HZJt7L/ptunkNA
V4cy5zx9NolvLqRRTuYd9murlDo2Z4NYOnPJ6VohAf1ay7Funl0njh+tPvKg
hIDiB9zCfoSsEdebfaI5PxOQKMmTy7p9lch0Vex3WjkB0Zxd8FAXXyUq58Rk
V34hILm0WcGsiRVi/LHL0vNNBLTa/ufkjaQlYvY3ptjAFgIqS2AjTrMsEWuu
YvNU7QR0/AHnTUnuReKfHMlCwe7D9fZW6P5p0b9ECp0RltxeAtrWTMj3PDVP
5Jl77HN6gIAEvrB+4Nf7Q9SQWpczGD3sdxqt9278LNGyJefpyBgBGRVNR9Zg
M8Rr7ldWXCcIqMRCnZNv7TcxJbe+JHyagC65j0l1XpsmrkklnC5eIiAe938/
/xb+Io62IU38PwIS4benaOP6Raz3XjC5uUZAb00l6yXv/iTGF2v7nt4mILe0
4ym9bhPEoEsbYc93D/U3tilOT4wT7dYzHm/uH/LfL/JYtxknyqqQ5VdSiiAv
H5qnKt/GiJyjBZX8NCJocG06eX3oB3H3ltW3UDoRNJN48XT78iixpfbzNGAW
Qf07ZO2biiNEF20vkTouEWT+w6JznGGQqP+HT06cVwR1SMat7F0cICo8agZR
/CJIO6rDsSy5/38NlHk01nsXxUuZSpciJLl+3191I8lc8hyOIfNQGUIyRySS
KbNkqpDMIpkjJbooIkIDUslDpeGVMmWO5NLwPn/utc86Z63P3usAWzdtoyNO
YVtgX48loxfGTne7lxIKRc60pM6kMeGlQHgg9zYKmwLMhaPme+CaZX96pwSF
sw65u9c0v4KYpdhiKSkKcWKXXo3UK/DMUaxOkKZwelmSdF3tBsZAUreJPIWP
99TzN8W/hDeuOjxMBoXV896psQpd0MT9XURRjcK5CxudO42eQUl5gUS6OoXq
9hLGnJ6d4Dv9S9tSm8K6oMgD6S3tcORyuXmdLoUtt95mRC08BQ15K2cRAwpf
xhpq5Ms8hfUB1Wffm1C4ssDtXnntY1gUdkyCQxTq9Jq+UWN7DAP1vNdyzSiU
asibMTZ9BBW/3RvsrShkY367upe9DfRjqB9fHFn3eOzKvxc+BNkdL9i1j7H4
iJW7Cgg9BOGOEIHrrhTuae3uikhshuF1b2TdPCjcn1H0MZy/CbpuR2OHJ4Vi
j1efuC7yAKoPypvs9KbQ7uSktadEI5xLS/SY9KOQW+S03jeb++C+hxFsfIbC
Y9WtPmpn6+HQ27Hzt4NYPDW80PBmHYhv2X/dO5zCD9WlZX0b70FD0fKn73EU
rsjKXLCVrYF9mr4/9C9SeDZq1dzV89VQ92mCJy+Bwh/cZxtnh/+FWrGPe/ST
KexxdytXrbwDCo0WRtdSWf0SpbmmNt+Bf4+8cJxPp1DB4HqaWHwVVGY2J+Rm
U5jjkC0dHFgJ0nuUC+euUiiknaLfOXEbbvVW3dPNo5C3eJ1kzlQF3NhQ+Plb
EYWl3z8NqHHfgqL4aGWdCgrfCirmH0otA7Lzt3FOJUs7DoU2PimF/HZ/59k7
FFbY+n07sbIUcjmOX8q+S2HNmryXzJgSEC0eKJqpY+V3P8BA/lUxZGta1e9v
YPF/ae2xhS6GzAj9oelmCveNjewdZxaC4N+tS1qtFIaqPdELVSyEtEYVviuP
KJT89d+9H1cKIHlJSkWrg8KUCQ8bXt98SPDlvZzZQ2GE+B5xZk0u8PDHlUz2
UqjNI+9Q0XgVLlStaNB4Q6HzXa0kpa4ciJuaHZ54T2HxL05pZ7Zs4Ehw/6n+
PwrJzN7qjH+uQPTOz+szPlE4FlsLaaZZEHmcyVAfptDNSLpMtCkDVnAaHUof
pfBKq02K+u90CC9+5Dr+lUJ6SSPIRTMdQgZrk9OmKZyZanZf+JgK/jZZo2OL
FJoerpk+ZpEM80vrf6suU+hdE3LxbvNl8Mm6wJ/6i8IvZZeS7u6+DKf6glVV
2Qjq3rvKK7s5CaZ8501TVhOcOXyj4an0JTjJf9JtlINg33dhO5/dieB+wDY1
eS3BByeDryTrxsPoVF/ZyDqC8MNm+YL9RXBNMGli8BE8eZBiPg+/AM4d+HVY
gGASB2+cWU8c2GrRqCJG0GdsPCrgaTSs7OX6q1WcYDZyHhlgj4aiY1Pv9GmC
qmGn2Ob0ouBrTF2A9Q6C65308uWGIiFB6Nr+QUmC1qsPlH9TiQSZ0ih+910E
JyzsEiIzz4J/u8ntQDmCb6Uf7zBwjIBN1oqhKxUJOjE3KuvlhkPDVxGD83sI
zoV3RIlFhgEbz/BwJoPg/oPd3UyXEEg0DhG7p03QoipiRUL2GZD9n8OEmh5B
jx2TOtaNAcD00ql/YsDys0q13g77g8jlDRavDxA0D45a+9nEDxqpRdrOlLUv
KKdsKtEX7O98mB02J9ghGBJxi+kDJT2lCQvWBLU+SG096nMa9JwTj4QdZflP
yoY+dnrDxLyPBIc9QfJEpUxR0hvkBNUebTxG8KbF5+Hd017wwLL3p4IXQf0P
nh5ceSfAYay+o8GbxdPOf2m80B1WB+VlavkS/MtETKmw0g30s08omAUSHOrc
8MbysytM7jzI9j6Y4L+pLg9buVwhqUHppVMYQe+SdfLvFF2g78NKD59zBBVT
z+9fVeIMgZ4jysvRrD6kuJqljDqB6J9nnOfiCDJ3FOY/l3UCR/HMwuQEgtuN
dHiOvnaAKUfpd1UZBEcOGHQ1ddvC5Tn+MuUrBPMkL14/V3MUFKL+83+YQ5Cb
z2zd4UIbCCpu29Cdz+IVey6nPdsatijdGLAsIigayv7uQbEVND++VDFQQnDv
PYEcr3uWwDFqrT9TTjCo7Gbb8wULKDuDwmcqCD7Pu20wRlmAIff24T+VBOd5
7F0zzMwhWXL2LG8tQcNfa/LyX5jC3ydj66SbWXnNH7ievPEgJP9xUbzYQvAV
j0s2M+IAcCRrV420EdS2LLgjNmgCU7XsZXntBFf4zX5JbjICR72hrb86CVb5
McO+3TeEvndteVbPCUoN++myPzSAByuiMjf0sOZPZ+dTX/RALsVJwKuX4LZ+
08JrK/WgZJtmUudrgu4PQlLqtutCoj5bXNR7ghyrZbRaYrTBNjUiYGGIoEhX
0mBuhia82m4/d2iUYL9Gx5DzuAZo16l53f5KMPWNwfFlLQ2Q/vjb5fg0QRtF
IYE+LnUoOPVxsG2WYMrkfd2G0wiCqx7YUvME3Uo3zZ1sVYNf/4Ra9C8SDM8R
uhiSA3Cq3uaV0jKLV9Hsrtl0BnwxZBin/CKYf7jYd/8VFXjmvbzfkI3GimPL
Mfb1ypBzP1DxwVoaDU8L6FZaKgGfsVWVyF80ulVIyNglK0LUwN5dAXw0yiXY
8Xa/UgAP9sWtMhtplHiqVCjkKg8DGa/z4oVotDr+dHVYvRyYSd4VHdtEI33c
JrODXw5UTPwFCsRonAxr22z0WgYqPpkn/RanMbTV9hJRlwHiq8hzhKZR43C8
xj773bAma36VwA4aV5mm2BYq74L+wdNz0bI0sg+fazhlJQHGfoe8BuVpNI/N
SzvsvwNaOOXGVZVo7Ix2WMOX/Q/ckJod/LGPRhsGF9/Y0jYQa3ppawY0Di9X
9MQpboPkg5X9lWo0OnBG+Cz6b4Ugf69XbqwftnKsNs1mHQ1TXCbGj7VpFF8X
kjPgQMAxW7qD6NGYfKPS1bSBAv3myYfvjGjsWVHuuDdSHDat8agyOkxjtp+W
VEyWKJRqhgbNWNG4tDpC1T1wMyiFJmqm2NDotWm8z99ZBA7NVPa+cWDxfDES
am0tDAMSLbnBzjR+9Utkd3YWAk+nHlcxV5Y+YV+/FCAIF/q+/+fkQePmvtd5
R+sFQJiPs5XDi8aqLF6vwFF+KNETji/zprG/s8LxoRg/tDTsE5v2p/FD77hq
ZsF6WCoI1wg6SyOcfmJ+8/c6iHuftHZLFItfXteYQxcPCAoWMJtiaEzIzGhY
U7oW5M63ubDH0yhpMGLlFM4NzS29u0sTaSwVim5UCOYC45/Di/qXaXxU8kSV
cZYTTnhxX0xKp7HIPqf86A12WCoVMZPPonHLVDBv3bPVEDe4c0tfNktrvFTu
+rEKisyNb2/OpzFVzsG23YUN3quk9JSU08iXLVLarvqHsVhRc2yikkb9fM/C
b09/MgTImx+ytTQGd7tdXz63xJBJWzofcJ9GZdf2+B0eiwxDri2ijc00GuyJ
2cAetsA4HqxWwfaYxnQuoQS72nlG1JQD6nbS+FEjYlFzwxyjkVni3NNLIyXx
oWlOYobRr9O+IPyOxsjPG6ufPJxkLNSPx9kO0KilXZqr5jTO2CD91+aiIVZf
VfrRVGGMIZ0vc2vsK43ndMK2m8mOMPQFTNV2z9B4/dCVrHcWQwyXWL9u3+80
TrxgaD7K/8yIXMpwql+i8Yt6hKwk7yAj92T99z9/aLx/0FPFJmeA8X/rIBjz

             "]]},
           Annotation[#, "Charting`Private`Tag$9128#1"]& ]}, {}, {}}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointBox[{1.875, 0.04}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], 
         LineBox[{{0.875, 0.04}, {2.875, 0.04}}]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Probability\"", FontSize -> 14, StripOnInput -> False],
            TraditionalForm], None}, {
          FormBox[
           StyleBox["\"Trait value\"", FontSize -> 12, StripOnInput -> False],
            TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       LabelStyle->Directive[FontSize -> 12],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Time t=1\"", TraditionalForm],
       PlotRange->{{-4.999999693877551, 9.999999693877552}, {0, 0.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {576., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUl3c81d8fx+09rnttWtJWISS6n/cxE0oU2ZWEJEQZUUQkKUJWpUJSIeOa
yT0ys0dGfc2MorJ30u/+/rqP1+NzPue8zuv9/Nxz3lvs3EwusDAxMV1nZ2L6
/6/6f1d//vtHwYpi8htlf4VTe0peTB39Q8EXRdPFvOUjqF4JzXMxixTMq9ik
+D74PjXHdOfajt8UnB3/t/G7XBT1mJIpk8cPCo6fVqnjnIqiTpCD2MqGKbi6
JeokqfQhVbb1P74TXyk455NQm49LDLUim0soqZOC+0fOseSfiqXa3lcWGWml
4FZ29vTwI4+oCfqRG3xqKXjiX9u+v8fjqcq7yrZ8/EjBBk6n1pPsE6jtnOPb
+Mop2JXZOLw3NJHKV6257zmNgpnWXs9GzT2mvk51U5x4R8E8XW/oKvCUqhv0
REXpLQX/+uRNG0tMpgbCIlH3goKf7A53ukd/Tt2wcasW+SkFD47Y6N8KeUEt
XTM6Yp1Awd9qV+WcTqVQF0peG00/oOBeEX79FwJp1OiErpNq4RRc66r5vn41
jSrvzWp+O4SCC4N7VmJmXlKdlWzOivtT8F9rGtM4UwaVkxJub+dNwaIBy9ae
kq+paTOFTpkeFGxWJLbxMXpD7c8mXUEXKXioo4V9nZZJ9btPvRZuzxj/b0zc
gS2bKu7i7Pv5DAW7nPP8VW33jmqyq+qWkxkFB/1x/HJnRy51inMmJM+YUY/D
yhH7pnKpEWMbwtcMKZh5+Xo/jZ5HrU31jo7SYvg5BhWT/jSqfVBa3FeCgvMy
GsSuOhdQWc61JcmqUfAZS4s5f7tC6uGNe1KL5SnYXW230pRnMTUnoT9/cAMF
/4wu3X1s9wfqMW/e4t0SFPzmT295jW85dcJUteyqMAU7SD5qXu2mU2Up0VVc
vBT8fY9zWOS5CmrFTHmdCQcFf3aiW+Xv/Ei1bf3Z+ISZgkvFiZ0Ryx+pCfd1
OuWXyXghZ29Xb34VVdnF48v1OTK+mPe4fePzamq7/rO+qkkyFrxMNX4TV0Pl
41oZNR8l47xi5tJzaXXUW0GZi4HtZOz6QrS71KiJ2uX/7+6FJjL+ckxtQqa4
mbrb22SDfh0Z6zT8oheLt1LbLy1rUcrJ2FRrYmk6s4263cGge6mYjA+6/WI2
DWmnXj+b7NybT8a7VqbG2x07qDKm2g9fvibjoKh55mXDTqqXUbxseBoZG918
q5V0ootaf3SiyPUZGYdY+f4xPNtN9SCi+g8+IuM3TWl7JdK/UGtUh69IR5Hx
z+LpNeu+r1TJAyrszPfIeHbd/hrH1l5q5Y7ePfWBZPx73qt+V28/VVxmPz3b
j4wruF1/Bu0cpLpIB5nEeJHxMmuCbujPQaqw0E5faxeGn11/j/0X8Y3qxOvH
p+FIxkeEPvH+uzRMLWNvfrbNjoxfRxx/bm06QrVf9ayZPE3G2aMng5/qjVGL
52ssOkzIuJCDs9735Hcq35TE76JjjPyyO3WDnH9QacN0yi0tMlatyFI+Qp+g
cvWTX10gyPjV2zTf3es/qdY9F9T0D5Hx6eUnEmEGv6nsTbznKPvJmDOjap8s
zzTVstZ2fmkXGWtw9v8IrpumZlfk3umVJeO73ad+34icoZoVns5+KUnG77fy
7q9TnaO+yXmjES5CxhKyhfFjUvPU9Td/P7uSyLi7/fGqOvcCNf1Z6p+DHGS8
m9OEy5JtibqauPhAmpmMFfZ8VRKlLFOPxx6VYV4TwiRucu303hXqYtiUXv2M
EF6iTfTJhP+hHvFQj7PuE8KpfGJVFl5MxBOXB7s0eoQw9yrXY3UVZmLaYahs
W4cQlv1++OSzdWYiwerO8GSdEN5/ZccLxzesxC/Tr14dlUJ4EefUxjxgI9CJ
vTzF5UJYvihNq82fnfih3SF/iyaE2yIyCghfTuIwbK+68E4Ijy5tirII4yKi
Dvme1n8jhMv7+n9YpXITqvs23aQ8F8KHhOOOyP7jJe6KXWp4eU8Ib14T8s7M
JhGHBepZhkKFcP+eOcE3Z4WISbZdatJBQnib5ojmgASZMJkdy4j2EcIt1KGN
oqkUgm1cZ7DJUwjXNxmm5noKE0UDaWLcbkI4JDkpq9hQhJBusgsNuCCEPQKa
wFZCjGiurPhQelYIJ27/avWOX5wILN28sGAlhG9F851v45UgRl/1n3cxEcKr
mTG5lB1SRHaQpYYFCOGAX6+1VEc3EWd9S3xi1YRwEVX4Z0viZoLiLp7ToiyE
Q8+cTHp7ZAvhY9O1UVdOCP857LzfvliG2H1K2ezWDiH8Rj2f1Oi3lejVj71f
JiOEJRaa12Z0ZQkNVZM1RQkhPJKic+TtwjZifl/uAVdhIZz08bXPwJftRPo2
0qXXgkL4+tuwSErtDoKH0vxlE4cQ7ikV7+3/sIv4/PtoEd8cCY/bPH3otWMf
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

             "]]},
           Annotation[#, "Charting`Private`Tag$9166#1"]& ]}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         PointBox[{1.8750000000000013`, 0.02}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{0.02305845124636896, 0.02}, {3.7269415487536337`, 
          0.02}}]}, {{{}, {}, 
          TagBox[
           {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUV3c8lt8btvd4ee35GlFIFIV6zzlmWVkZIXtlprIVCpVUQlIpEbITysz7
yMzK3vlSCMnKnj+/v57P9bnPue7rvu5zznOOiIOPsTMFGRkZiYqM7P/fsyM3
/xwc4LEzDaY+e7/LiIMVaYvaO3jMKN2vODG/nOif3PEvYR2PfSW7rH05oIJY
ZHp0V/IvHjM+doNKllBF1FcwJbs+g8dYRaZev9uvIs6x36Gq/oXH7hZHPWSb
rCaKd44wGQ7jsf/MLFyL62uItYV0bC/78JgV24afOUYi2jxS5JzsxGPvhDhe
zNtjxGSdJ4KBTXgsk+Es7pNvLZGpQU32bSkeK3m+fG+joY6Y887n5NwHPBb/
nujY7lJP1LqTclohD4+ZpW1rpTM1EMPhOmhOw2MNmuW+U66NREEhMXX213js
3OXXdRmCTcTKXYPz1sl47ENSrwb1UBNxrSLHYOkxHoOUTS6X7b8R45P7TVRi
8Ji5Dp41W7aFKBdAaREZhcfCWWfoLlK0Et0VrtjxhOIxmt3vPM5f2ohjhThf
dBWPOYTdVj+r0UkMeUT0i3HCY7YBQ/FcTZ1EHk/3oF5bPLaaxR23rt9FND5W
H+FmhscG500w5NZNXKRdjio2wmOPPxsY/NnpJsZOC8bs6uGxJylORvyJPcSm
dwHxcep47GK24WZSdy/R6U5G0jDAY3FWcW1SQX1ECvuul+IqeIy3NiCiV7yf
eE5I+l253KE+i7Bq6tgBYlHyWMm44OF8quVg5zfDRP0AxnIpXjwWIby/LHF9
hDhnqlR9kwOPMfIXlprqjRLF8fH1dIx4LIOsR4vEMUasXa5pNqbBY2l5eZ9t
Kf8j2nT+aUshx2MbvOeblLb+IyY/0uyT22THLjC8VC3fGycqel4fCv53iOP/
hBEiJ4jdOqk/6hfYsR9I9U8Sy08iE93WlMUUO6YzgNM9JveLGHEnfz28mx3b
jFWIuZEzRewPPXjg3M6OnVXVWnBxmCZKBRgL6jSzYyvDJ6ptRX4Tuz021fE1
7Niz1dYCieIZooSL7sBGOTsWIusnaxU5Swy2e+M+WsKO1Z2+NGd/ZY4oaqrx
NDOHHft7Ij+5Xnye6G/wXDwmgx2zcbnNk4j/S2zRnivzTmXH4jhv0QkyLBCv
g7ixM8/YMesOQ+k82iVineSodEs4O+YkdE9zCK0QeURPkApD2LHHyf03GodX
iJ4Cd4wT/Nkx7g3fucygf0QOtqNB1p7s2NVTvQ4jjatEN8YQJlVXdowqrkU7
0m+NWE3dkXrEgR1TbhwybTi2TnTavtG4YH6oL7t7qO7dBrF8tfFyjzE7JlS+
XDV2dZPItMj7t0yfHXuSKJ+vd3qLWPqLhI9QZ8dic26HzP/cJlK3M9rjT7Bj
ojeba4We7hMtm2xWN46xY6G/3tDlPTkgFtZ+vDcqzo5NzEtvi+uSAbPP5oWZ
fOyYc0ySjZ0NOcgtylWN4WTHvlrrbT5eIAf7uXu93jh2jGdHXFvvLgXISn23
c4aGHfvU4pNJWUUJtl+sPxYgZ8fuBlYVXbChAhcTtUXJd9kwtdE/d4ppqMH6
/cULLctsmJXdMudzVxpw/vrZJOsfbFiNxbSxlTc9SPF8fEx1kA0rmddn8YcM
YMllovpIDxtW30S3wc/NCJKt7v1aaGbDrthtlPQPM4F502H/njo2bF7iPa1Z
EzNAhscZymvYsFWOP68Vq1jAjEaPXEQpG9Zzb4Swb40D56BEvfMHNmxnUv1m
wU8ciFMOMtfJZcOM3uY8jvRkA0qywrfxb9mwvNacJOlH7OABt0dr5kM2DFfN
mCZIwwnOsbRQTESzYQtMzWf1MznBAtUxFYE7bJinQ24AuzYXMF6Zzo4PZMNY
2xvxP99wA4F2h+gwZzasnCGtz+UeH+ioq/1SaceG1Xl1PmIx4AfhlYS1NSs2
zE+ie9ZTQABMvR9z9DRmw8aflaguNwuCwjuWqpchG8b2cvjdzGcCsAuqCExU
YcO4FaNGFk+JAPw1nqLvimyY2YlQiahSERB4pV9IS4YNm3C7QiBhokBVyXj3
JC8bZumVYmdFdwSsyn485c1xyEdz6lZFxhGQdQTnkcN6WN/mtv8dTQnAgO8Y
EqZhwzbNVoe6EiVB71/tMqZ/OOy8oPj9Ay8pED2ZvXB+AYd9+9yleUFeGiiN
0ErcncVheZZ3pZm2pcHr5obErf9wWNTTR+qpKceByzvV69NtOAy7NJ8m90wO
8Lx8myPSjMP6aqherrHIg9a4g3HrOhymVZTYJhwrD+RufzHoqcBhW0dv3KF4
ehJsWSgfx7JwWBZvwGRlkwLIN0h22knDYfuMqYa2torARmvj1enXOOymfx7P
mR1F8PXUJ4aCBBwmnbK/swrPgFgW+ZkX4TjsZ5xnFwW5CgDUccJ9IThMrUpt
+tkXFbC0s2CGC8BhlmSfnS+HnQWms/kN0V44zO5BmwoZngiE6o++u2GJwwim
miM3IALptcttjaY4zM1HOUKxGIEjpMp1XiMcVk7IUWY4qgpkKvV0sPM47J7z
cS4oqAZUiq4tMynisIQGC41TchqgpkCZ304Oh4lKSoxNf9EAqnkUmiXSOIxV
dmPN1kATXMhKTL4sisMWq9wwmttawCylHGax4rDUB0eEaZm1wfCLiKtbDDhs
Z7Vs7muVNrjyXCdBjwaH8Si8cxL00QHN4hXtU1usWEJpkPTRSV3wC0cuENbL
iknN39fjYDQAc4wJPkdaWbG9xcJh+NMALNEcqWutZcVy/XIZHtgagv3dC+48
H1gxhjnes8KaRoBvNq784wNW7Ixh9K9gRRMgMinKZBHOin3xsO9oqjABR/8r
td33Z8WSw6k17qteAqf7Bml0nVgxjLU39IuVKTCuJZhOAlbMMkF69uEXc3C5
ujg7RpEV6zuxa0JlZwHsyjR25WRYsZUCP99imsvAu8Dt3S1eVkw6d9BSwN4S
xLwoWuZaZcFyv+/oauhfAU8T1TS/zLFgDX+Q1V0OG5D8pDfZcYIFCx7TYfs1
bgOyojZhUQcLFrmsP1anYQe++qLH2jks2Ljn01kOVgfwzbN7YjGVBfvcvm3C
9cABdLo6KSYlHeI0H+rTNI5g7Mr90Z93WTDjxMbbwgxOYEu7UyrUhgUjU927
PK7iArxDC1PML7FgNIyjxJlRFzBZGMtySocF82pnt3S96wo68Nors4osmFij
TYrmmBtI/1FbYc7MgqWe5LlD+90DcOPeSp+iZMGc/O4qayd7gli1269Ztpix
3b54RSZXL+D/XiWiYZIZO53vnJLH6QN0fEsunKpmxui/45o6rvgC0runlSzF
zFhoPa928rAvUOj3kZl7z4xFi7z5V295HQidlcGlJTBjcfYE9nfON8AKVeYA
iwczJtweYMCe7Qdcz9zVnrNjxhL+2Es8VfMHo1ftqxrMmDHZkMIryhP+oLFD
MDVUjRnzT7ot6ycdCF4mJ7nM8TJjniaZT9rWgwFr683BBlZm7Jc9B3P9pxAQ
uWesk0bNjB0wfwf9QaHA24FV1mKZCbMSk2TtZrsN1GTurzU0M2GL3dxMUV/D
QZmNi2taDRPmICWjYKkUAWSeagyFljJh83eNrA0+RgCudbIvp94yYZXiwl1/
8u+AOVJQZFoAEybjkTl2oT0S2K6Yr4d6MWEmJozn/W2iQK/4aTcLRybMyT34
hd+/KFDzYEWX1YAJ85qmitE/dg/Em3jgb0kwYbRHbJqITQ8AbbR2lIUAE8Z0
9HxRV1AMCC2X3DjFzoTZyihss8g/BC6Ck8Nze4yYTZ2A6H5BLFD5bZ1u0ceI
MRgcXxOdegI82U2sJ1oZscKe7xOdFnHgNVGby/0rI4a7weN4vzYOkCUqxoR8
YMTy+kWzX758ChoRy/U3DxixxIOD4B3PBLDpQSUjGc6ItZ1SbcieSQDHnm9P
ffBnxNavKv7Wc00EsX+nL9c6MmKbRm6TJK9nwOglSXWSyIiNbFEyGqc9B3ca
Pu14KjBiS4vM30pPJ4PSpbxPa1KMmOMnJJv5PRlwnU8+RsvDiFGqj9jfYXoJ
Rv9dY5NaYcDsNx2d40pTAIuwa2vxDAPWXryiT3J7DaDOlaiz/zFg4d5L9CdE
3oD0t9pbem0M2A/HGQaF1FTgpi864ZPFgI3czt0wuZoGXgbyvNpMYcD8SQ5d
/X1poPUdi2lEAgOm8ar98qRGOpDd3m6OD2fAKqhzjw1LvQOrWT1FnywZMLzp
16Af3JlAovubOzBiwO4zC7nYvcwE5nsk8abzDNiCONfYH+EsUGmSnzyowIA5
Y1rT9grvQThZVPgOCwOW+GDKqyEyBxRLh6hEUjNg0iHvLkeJ5IJfZr6rTLv0
2F1+wfc/a3OBVsEVN6FZeqzy5qmAJuZ8wGR52lC1jh5z2/qvOa63EIAoGYaW
CnrMJ9QVexL3AfgUidYbF9FjRz0o57yOFoFuGlYlp9f0GN8jfRabxSLwvOS3
8L0Aeuw4f07eiRfF4DSX1KaGFz32vXTmvD6+BPQHenZSONJjEZ1noj3jSgAX
WA6/fZEeG+fyLtxMKAWJzdsTfkfosbMFn0Stv34GCtLEylP89FiAXvHTZLMy
0PMoLH4ZR485Hms5cmOhDLCbUKl77dJhn7ujAi8fqwBxP5gznHrosN6CHi7n
jioghwxDRb/RYYqyZe30d6rB9/T4S+M1dFjl/hIzrcoXwOLGTW2dS4c5k8gt
rpfVgNgVgotJBB2W/j5CMmwNAzKmjoAtgA7LitCZlnKoBa1lmVzfPekwQsPv
j75dtYDhllSTjgUdtjGZ+pG5/Cu4T6twVO0EHVZ3m2MWvK8HR939yciO0GEC
zvLXwqUaQFNb+eAXPjpsfuy433hRA6CJJz5QpjnUHyuToNHUCCIFzs/J/aDF
+J6FWn4Q+AbEwx58XeimxSIeTvutVn4DdROtL/ObaTFp8/Xyf9YtgOK9oe7R
UlrMzCDhhX9+KwiXt8wXfkiLnZairSIL7QCExJTIH+G02EqXMOU9le+AtD5m
/cqfFqMLr7gRtvcd7Fc5MnM70GJL12wFkpo7QaiWlzeLMi12r80nXSaoGwjk
fNBqk6XFlCadX2f/6QZVjCtCMeK0mK5knVKLXQ/Y7vT/To071MdVgFcx6QWB
VuFye9M0WOfv7uPhlv2gsjXp79woDXaLYyXCeKIf7J4tyB3spsGOkWb+k/EY
AGECw+KlNTSYNdkphXP3B0H0j1O8Hkk0GPWOY1DO7DBo1tfpt4ilwb6uaAi+
iRkBDDV2CVp3aDD+W+alR0+MgsdvHjGLetNgrOMUcfp3f4Bntr/JhzRpsIcE
MgOa4+Og//teTeNZGkx0evnGSuw44EEcoaXyNJhvUlzC7sI4SCGorj8RpMG0
2VbPJldMgIyJl3Naa9RY2mMnfiX3X6DY8WJPaQY1tjF446Wyxm+w2uMUl/6S
Guuiydbub/0NTmuE6MfFUWOXzJz7HMxmQIV4dpNHKPXh/UZc/cHNWYBNkVeL
XqLGTssaeLf1/wEUZjxBOB1qLPuV1X5WwDzQaJQ9vQ+psRghib5V/r+gOcuq
aEiaGtt/g/hO+iyA766fMuIoqTFvpz9IKG0J4AZb7W9vUWFVttvImmwZGF/4
KeS5SIXZZHHKv7VfBv1HWV+cH6HCbnVqhTtKrYCxWbdH+8VUGLWSkRRN/z8w
7yHg7+lAhSlcpO0bSd0Ac706IbSXqTBM9nwzxr8JZohB4ekGVFis691Y5peb
YIq1P2bwHBX2wPphGuObLTBW8iRVg5sK81ZdCBqv3wGjAjUZ/zFTYTTiO5La
prtgOGo+J5iKCtsdX14JnNkFA+bapUXLlJhh0ycXe+590LlD8U2gjRKrraEz
ctYjgx1O8h1lXykxAz2RTp+3ZLCt3bbHuIIS+6wcr8GxTga/pVb/uJ9FiZmT
3l+7kEUOv6r7r6yGU2KRMNn5JD8lLH04y9+uSInpN/OSCdrQwOJVbhE3GUqM
voKmOOQ7DSy6oiVBKUaJfbq+Or+pRgsLTryTU8ZRYi1fQun95OhgVo+1ZuYc
BXa9K7A7WoIBZpx7qIMmKDC3aKmKPzkMMD2zwmBkgAJrAzKXSCcYYWoAlyVb
AwVW4+TZ90ONCSbzd3rfSqXA5Gpt107cZ4FJkfs3eJIosIcPPmqpElhh4l+Z
oJJYCqxIPFlZoIoVPiU9uDsbRIFZy3zd/BCKgzGO6smmlygwI7OnO6Q2Nhia
97n2OD0F1sOOifyp4IAzuvJTe/vkmO7z67Prkpzw0nweXccqOZbo5LghmcwJ
jx9PM/AeJ8cstH/0ioRxwbHChz8Ky8ix0Cgx72duPFDHgIY8rIAcw4j1on9m
eGDZYri4wTtyzOrsf3aVHrwwTs7fY/ExObZGuXHYMD6oWmy3dcKFHOtLzRfl
LBGAhcYjAmTW5Nin9z5vbl8QhHz/TFGnETmWvJ8cUTsuCFdO6d67RiTHii5y
SNHyCcOMT4qcHznIMc1HQR/vDhIgTQWD/Mk6Msypyqr0TY0YvH456hJFBRn2
0ejgl42YOBzbOgjoLiTDHqrf+e/ggTgsU1mruf6SDOMKNHKkvnIEulX/p1fi
S4ZVaETvMvNLwl5ry2t3XcmwrjkOxronklB1rzfB5AoZ9qQBl/6G5ijkAy3D
/y6QYRnX3X8sbB+FraRSNwUCGVb4uRojP5CCSnYnYqm4yLCNK4+NN6OkYQZZ
7odeRjIspIRX2IlVBm7eAX9nFw5I7FUXUxuOHYeW0Xh6j9cHpLuJuIzxWyeg
8KMvyGt7n2SgKBj51ewkvEb6ye32e59EpmPqfD/3JPy6TLvo0LtPSgRC/MUH
J6GTmfFri8J90ovHjjlahadgrvDvLXWHfVKtwuMFVkFFuGvE1AUM9kkDzxQS
noQqQv1I+Wzlc/ukFo8sjbc/FOHSTIjZCa59UjadyFhsxml4uhhXwteyR3pJ
FTwItZTg/UnFGM6yPZJvTpPmarESHOKyssdl7JH4o4Z3PESUYWhIJivN7T3S
Ou70OolSBX7VUPFclt8j8bAELFeMnYUXBxyPNL/YJd3GXJXQKoRv6R/sfo3e
Jdl29o6cQwguny3s+XJjl2Qs7TXvdw/BxLebESX6u6QO8rrL+ryqcPjqo7E3
5Luk6xGln2l01aBMSvGnFws7pKSjV9eDX6rBWx0DsYkjh0s7/nPC8T9qkHBK
9GzMpx1SQ7Lcsm2cOnTZ/fzc7+oOKZ7g9Sp4TgOWy456XzPbIRn6rrY4aGhC
entyLQ/1HVLm5Yc/C1M1YX6D7qqd4A6p0bv9fbSlFlx5PG6o17VNOsYoufl1
4jy8LcLAIKa8TWrqVmHgOqsLOXwGcm9JbJO+t74Z8sjThbnVGbqD+G0SmWre
pLugHuw3h48eLWyR0D9pYgiNPpR9fBO3+W6LpLigExT99yL8b3uMq51li1S7
rnFKM8YI+l/IL5Pc3STRseoVCXYZQaakIIs7s5ukVyXvSTs8xlBJnuPlmfpN
UmUwA11/njGMc9UWTA/aJOXfU/dyHDOBqLdELGBygxTprupIEWwG+0Ui6ru6
NkjmzSelR7rNoKfPRWcZ0gZpW8Mz/5+MOUxmmM2aeLFB+q0oXfdv0hwuIyEp
PYMN0uMPnXNpTpdhesF9OZHKdRJB1K7eJcsaKu2YdoW8XycF3+96JMt5BXZc
ELven7hOyr7/8kVw1BW4/etLyUOfddLlehOxYncbaMz37/S6+Dqp85+ZMLu4
HaS8d4XY+mSNFHp8aKH4mAP0V6/jiwtZIzEoSmuDmw5w5uDo5iXXNdK5V2Gv
fpAcYFvgavEYWCNdQDnMLpaOMNH94dGVv6ukPEd/J/LXTlDiYgWeV2+VVHVt
oOqFlethPcLLP86skr50zRrwVLhChqbIjnSxw/FXC15Mc7vBRWj4QGbnH0mm
0Pf+nSE3WC7/ex/m/iOlJiU/lvZyhzqcnHMudP9Ibp6KJLJhL1jdFdwkvbpC
soijo/K/6H3Yv/GMpf9WSDr3HTzD670hnjbfNrhshfRTrsnN9ZMPHN1U63vk
skISljfrjui7Br1Hr2Gl9csk76JK85+r1+F4cv/roKJlUklctd3cuRvQ2PRc
CEhZJg1yvP09GXUDnumgPd18Y5nUsFUvWc13E5Jhb/JGRJdJ7eN7JdDQDz59
15ZEEbFEKr9iZMz6NwCGGjlQiXovkaJObSQ+h4HQ9WDDV9VqiaSC6zXhSwiE
RCsx/XDFJVKn2YIALzEI9hxZpdntWSQJvXyYr/o6GEZSGYyvZC6QVoq/O4TE
3YKWdsFV8uELpNG+26Ej/25BuerMpGuWCyT+kt92tha34eiNXb0FlgVSob/5
zR/iYVDxV07FbMBfko9/ESuZSzicrqVKGNeeJ7VVRp3Il7oDqwXlvIXF50mp
HtNfRF3uwPggK22b/T+k13w++6rpdyCQLz4YKf5DSvJVSwgXuAufv7X1HOD/
Q7ok9tDrKG8kvBBWqdnxd5ZUJ0VREqoQDfPOXdusevqbdOFFyXGf/Rio4t+m
993tN4kqVZaM5/JD2PzhaNpP+Jt02VRkr670IZwUndCmX5gm2e57XZL1iYVC
9MavzHSmScth7CwPlx7B+L5TYJliikTRXmRXlBAHCaxx8VTDk6Qjk84hmd/i
4IcL89PcHydJz7bxV2XJnsK2qownwHaS9J8Loy+Zz1NInc458bDqF6kElRo2
msTDQO+NuxI3f5K83kfRT6kkQppsk0Fl3Z8kJucguazgRPhs4oOMvuhP0ozE
viVLVSIsvuTWd6NzgvRwIfDtIPEZ/KMyJFErM0GiF80zDdBNgtUs/gllLf+R
kl6J6q/cS4b30Z6QaMEw6YV229ekx69hGcFsocl6mHQhrJWGZvI1nCb78MWL
aZgU2LHw/JzKG6hZa2dd4TFEukxpZ041+wZSqNW/MJQaJO3u2T9nPfoWhqo/
5Ah730eyGhGYrUtPg3lik7/EzftIj4nHxXd70uAwJbGkhaaPdNkj7VIadTpU
rl8w4nLpJRmjoB8K7ulwXcP4SYF4DyliV8IjTukd9NHiZRhN6yR9vj+SkjSX
Ad9IXB+KMOoknUzaiZ4QzYQdNK3ZkuSdJFey71rpVpnQ4vHW42msg/RuacPt
Xkcm7H6C0XOCNpKfFtnaQkUWbIy/eOCr1ERK9RPWznqfDS3l+3rNLStJZH9p
kvh+5sOMb2c4k2UrSKU+vZjSkQK4aP/SdJCinLQUuxDX4lYAI+Nt+y3yPpEO
/vvlqrNcAD/8mx24vFtEWg1LfltH+wHiBrc9fILekJpP00x5ZxbBjJgPRHQ2
C8aKyFtVc5ZAVsu5alJ8NuTjMmP5Bkpg8LEj5+BcLuwFF33xbiXQoPmlCnjx
AeZQ3ImzryqBexR1/G9CSqF85SrdlFMpzEaFPClDX6CiOcxNrPsED66o0bfp
NMOp/E+g/kM53HypT2X5txlWSogdqZkshysDFge/n3yDrecaATlfBZw28lmj
7GuBsUlPWhyiKmCbZsrEWdt2mM79UuKpbSVs59oZ7VPugkrd6eORItXw1f6l
T5oX+yH/OWn7r8MkyO9KVRJ/dhw+Yfj732WGeuhm4soWYT8Ozx9RSv4lVQ9L
YYuPz71xKBxa/TZKtx5e5ImT0esZhyJ7At/ZHtXD8G/8WdQeE/BpIuNHDbYG
OC196kXgy5+QXZnv3U/BRli8ZB9mszUJuU5YLGtrNcMLwSRdqbJZmFQZvPat
rg2O3l+W0xifhaZeUzUOf9qg73MxLhv6Oag+b4WnwLfDl6X3xp9azUFR9pM3
jR3a4fyCgd/WwRx8mK8TI0PeAeMcx980X5iHnbaXtMzhdzigR77iMrwAu7qL
atZHO6Gn1amBcMpFWJ5q/blwqROSuTtXv5RZhN+U5nPsqbrg0XvfojtuL8K7
ksluZdJd8Mt4M/MrtiXoO+twgy+4C7LyP02n+LwE9XyEn4dxdsOSJyJtXfvL
cMjadLpeoweWh7Cv7bOvwFvly4pbZj2wxpVSSEZyBZ4svD8sfLUHtsApn2iD
w7gdJZ36ox44vpiNP/t2BT6hUFIZ6u2BTIZyVhmq/6CzmbIWrX0vdMHBOf/I
VVj59jwM9+iDnrsn8BnJq7B4sF8vIKQP+s4QznXlr8KJYb5984d9MBSjeCzd
twq5n7yAfbl9MOFao/z4kTWoYfxivWymD2Kd+kHaTWtw+kba90nbfsj31JpO
gGEDdlF4/SWoDMD3DwXTFgQ24NwI3ca65gBUiB5Trj2xAc996flabDQA9UPs
PFxMN6BEqsXcsNsADHd26ih6uwEt8pkfzzwbgNPKnomaZzahpM+F3e65AXhD
4fhxHp1NOMJ/5vbS6gAkO7HQMGe9CWXCi9iW9wcgr/i1jSd3NqENX3THS/ZB
qMdy03K4fRMuCafYxioNwuKfIQQfpy149HaaWtPtQQh/nKtQDdiCA0dPiFLd
G4RtA3tGHDFbkBfX8E3kySCcagu7W/FhC86/0lzYfzMIecruTlPubEEroSd4
4pdBmPlRI6yfeRuqh/GXhdYPwpP51Dw5hG04yhp0LKV1EOqm3dO+qLUNq9oU
aYOHBuHthw/zk59uQ4rvF18W/huEjNF6mh4Z2/CVc1LG7NYgTA5nHiOWbUPX
U6R3lGRD8KPfE9Zfo9vwi6CFYC/jEJy0Tbh+/OgODOXEOU6KDEFfy0uMZGd3
4N9sZX8OySG4f4kzo1t/BxKzmRtEZYYgj87zvoAbO3AulLtuSHEI6iq8Uvpa
swNNPKwFPpwfgrukukSpnh1o/RScldAbgvm680vxv3dgX4ri2k3DIcjiSMxx
xO1Cx93Y38kWQ7BmwZm6TXwXyt532/SyHoI+wY/tFZR34dNsQ1M+uyHY+fQ/
XmqHXdhqlZG/6TIEIwTp/L38d2H869woKfcheDJHrrsvZhf6jv9zPeU1BH8q
XJYFqbswOqtKA39tCCZgETFZJbvQY5uSpeX6ENTQy51mad6FpePPPpv7DcHV
gW61gNFdeKKO/GR1wBA0WxTbOU+9B4P94m7Qhw5BmhA98yLePbgdVi2+cmsI
ltH4lfDI7sFLWX23P4YNQbf416wRanvwVLlZ0PmIQ3+EGj1mzfbg8dm7TKV3
huC3nIUmI489mM7qIb9xdwgGK3KLV4btwRM/fk3gooagVC0MF03cgzW4OB7y
6CE4ouc2GpO9B2XSRzqbDnHsYJzSv+o9GPV7l8b53hA851SRaNW1B7tKVssG
D/HfxYmluqk9eMPn8YTo/SH4JoRBX2Z7D/JI2d1RP8QXaU/lJLLsw3NZLS9U
DvFBvBX1nug+PGWzJUl3iIuEIu2dz+zDb3d+Hs8/5LPLzf/SrrsP/f5pFUgc
YtzpPt7TdvuQRa44O+BQT23tnt+bm/tQQCNYLPVQ/3V9iW6aB/uwPI8k8jpy
CIoOXZT1eb0PN+S9sn0P6+1xCogZ+LgPV5vPfBE49CNyKXUaNu5DV6s3Lm/C
h6BCaLNa9vA+7H8+m7d+ewhO0S6/wS3uQ/tP0s+OHPqdlMC7E0h5ACVPImnp
kCGoJaxmPsF9AC89bA2gDRqCG7nuJdoyB7B+QSWq0n8IZp9OYC1GB9Bsus5G
4+YQtPha5cFnegCndx1xmb5DkP7iZNOdqwdww3o8a9R7CLo7K4abxB/APH2X
ik63Ici/fGW0KusAXnw0avzIeQi2hUYriVcdwJYoWiYRhyF4PHFgafXXAUw0
7yF0WA7BMWEy/SubBzAzjvHtb7Mh2GSa2OtAQ4b6RSSiB42HYOBEtVwrHxkS
03vej3SGoKFkl82BOBl6tvLavVxzCB71moo9dYIMfa2cKqdVHYJDm8yzr9TJ
0PiXn/8dPzMEVXC2aZ6eZMh4jYzy1eH+NLtide+fHxlqfs3jd1rg0P9cc6/g
MDJE8XAy+APXEMzVMFS+H0+Gth3FUlUO9zdvkGrXu3IypOFSsFG2MggVGoll
Ul/J0PsLq0Vq84PQEK/y+mMrGbr3Tropb2oQ3i84eZU0RoZKHEEQ7+Ag3JwQ
Ix+hIkeRQ0K8LlWDkOME4bc9CznKwcxGpksGoVyoQPsMNzmy2S2Z0sofhG5c
nC/WpcjRkzAl48yUQTigQyPPbkSOKMv7Rf4LGYSfS2bstF+To2KjuiUnhUHY
TTal1ZlFjgzEF47MSQ3CBf0JGfMicnTWbHvQUGQQSswMbTrVkSNzcV+zOuZB
+EygNS58lhyJPrvNrTo1AG9GFWBlihSoLOi0df3jAXjK/DpBooMCOZQOCoq3
98P8pJcitwYo0MWDb6neWD+U6P8q2jtOgSLHKjXTSg7/L6b4I3f+UaA9F2oS
6UU/JDMpPTbGQ4myl1iwaad+2HZx/WSSIyXa1St8RrfRB120gjVptiiRM8Uc
JRVTH3yheMd9WowasSe2vcuk6oEhSpEitvm0aE11MojHtg22nL9Q3fOJFu06
SG5jKm2Qz5zJ/AKJFnFzxrdc42qD5X6JsfLdtOhbxc2W3+2tcLU4Y4NykxYZ
hjtIE4mt0PN4Q3u2Oh1Sb6951S3YAm1EaYJXhukQOx12aWmmCaoy3e+OomdA
og8WmKjK6qDo5MHFBjwDqqY5tq6SWAepqgNaqYQYkC3nR/MnvnWw0cO1/u5J
BrRYdyvgqUwd1GnV+hxhxYCyuNFr8oyv0DiG+uWtAgZU3vVutDa5FjrQ3bX3
M2JETwktTmKnSVB9fPtHqRUjUuYucPq8WQPFy69brjozoj9KOUNPqmrgtKuD
yY1gRnSJ1ZCDW60Gujepavq+Y0TXgu3Jbhl/gdejyY55rTGiVcjo3x1eBe9S
3V5yesGEqp0dCe85yuHXDpH7N98xIcZsbSXDiTJI9qJBOLKACf2aumGoWlgG
bx9nNnhXy4RuDVa+2rlQBgPNUgomZplQgy4HXVfEZ+idXeluo8KM+mtTRPfJ
PkFLvY1J8xFm1Hf/mhiXYjF8wfUq1HWKGeU23jYrYSiGg+OAI2CRGVWEWiwm
jX+Epn7R6kmULAilPOqWe/QRGr7hTO+VZkE2ZpLZebNFUGvplK1RKAuKFtLy
Vrb9AE8mXhvSEWRFIg0pW96jubDUefdogQQrUnPR+XXidS48feZ+IKscKzpV
Ne9jb5MLzw6ncveqsaKmHZptjp85UIPw3fSKGyta5+42LVnIhub5x7t9SlhR
mKuYn7/Aezh8q0Kku5oV3ThfkIufzILWBpq+Co2HfC4JkD8/C9qtWOO2Bg/z
8T4ZcSVmQXel2It39lmRL20/5R+nTAgc/JxbxHFoebBNX6npHTzQOfso5BgO
MXZI0V149g5ip8g/ycjikP0TnEyV4zuoRv2I6smZw3hx4vg38nfwfHbGOxMd
HKI4G6QYqpYODRd6JkZ9cOhy70eO9r630CH4pM1iJQ7dY/pCyI5IgZ7nu9ep
MRzisvvmaiObAv05rj8RaMChsSfOK8Mjr2BM4UdM+zsOvb53YlpE+RUs+Skn
lvELh+ya/3XU776AVLonZiyY2NBcePCSzvvnkIXne7gPGxu6djOnvsv2OeSZ
8uaN5mJDPeK1coy8z6FMWKFOCYEN6blUz8c9SoKmJccLmBXZ0Na0bEfD7Wcw
i1/m+tcrbKgUI3/WEJ4Ai2ZaGYYc2NAv6SHCpHoCrPzk8W7RlQ1ZXZX4m0ab
ADsM8noFrrOhjE8l0etx8XDjrtSZgGg2pJBhmPkz9ym8MH90V/oDGxKaOUYf
sfYEzlYfiX5Gxo488KYmktQxMPFRRbApNTsy9Wo1u1H6ACIbfR9OBnbkf/Pc
8DOnBzD54KbFMzw7YqZ5GmjedB9eUKuXeibBjopNWkReJ92D2U0O3xP12NFG
18/tcssoeCl5ve6SETs6y0Rfk8YVBcmuxpRzmLEjpjVBVa2eSGjBUJyWaMuO
Qs6GCVZfjIS0+uQ3E6+zIza/akz24l3o0p3Kk5jMjuJ2OKV6vCIg+7tTzJde
s6P7tbq/qxQiYM2NJnKO9MO4x7mS87vhkItzcS4hjx3ZaZ9JUnsUDhvMwZeE
GnZ0jfD4s7JXGBT/MWqfMMmOSplem+nohsLOgmtmJrPsyFy9evvIfAgMvU2l
i19gR5Ju1B/5HofAXmEZhYQNdiT3uzpPoy8Y3nUIoUlgwKMfbmJnjK4FwZ+/
efPi5fBo7+giG8uAP/zyUb1ARRGPir8LS31/4A+TQ7w+/FTGoxLL+zYBRH+o
z1pbclIdj4Z3+vhuvveD5afdqrtN8SiXvaFyPOomfBz1uZ09BI+MKg+i092v
w6sG498rw/DIbHQ89rvUdajBy9DtEIlHilUSwbV/fOFW/pX+4kd49E6Pim7e
xxc69VL9Z/wWj5zWH34Wj7gGVcRMluIb8Iiv8oXpQowX5PwbuqLSgkcjDNUv
OES94NLnrNWfHXhkCd1w9ys9YabO9ubJQTzaZNf2v7DoAXHX08h75vAomzds
ut3VHU5ji+x4HAeSiSURt566wtoYXs4qDg402F3Ga3nOFaZcUud25OVAOy6l
/7p/u0CjmST+ElEOdOK4hB6ZmgusZgXiJoociCs9vGyVwhnG28QqJlhyoNSF
myMlpQ7wM1Nc9ltbDvSHIYnC6KoDHK5M4C904kCVDn9ZyYUdoAj3K/Jv3hxo
/WXfudhH9rDoe077/h0OtNkg4LTsbwc7UJOzex4Hirs/iLu4ZA1XFloGA4o4
kMF7Y/qBQGvI9bpDN+oTBwr8deoWgdIaXtnqk39L4kCtH2OwHwJWcP7j5F5f
DwcCrhsRjk6XIb0YRZLqLgf6rr/nPArMoEwXNb0BOSfqEVs5NThuCg3D6EOt
aThR558mKhhpCpNHcA4BOE40cy7UQOX7JSiRKCxbIM6JWgfylh38TKCOmlha
5TFOFN6qNCovagK9lyQ4mmU5UdqSo7dWpzH8pCe7/VOJEzHE2w/LyhlDDWpi
I48+JzrRUTl8d98QupUgZQljTkT5UvIDzSdDGGuvkX/KnBOtDVfwFngawp4v
uvEX7TlRkUmSTE6NAXTwt7SJ9ONEr6v2JdA7fRj+O2B98TUn2uptfPSlXRtq
vfBpyErnRCm2V6tPO2pDRl3XxCvvOdEbFktyze0LMKnQ7GRrEScS5/ikxHj8
Asz3U/TOquNELxu9qnIztOB1yePEK82caH5A6IGSlhY8MyTOxNHOiVa7Igfl
ZzXh13McuRH9nEjy5piJySlNOEj5b8p69jC/1gOz1gF1+ObTXCl+gROdOo5z
kI1Uh46uP++2rHCiK+9ecg/Iq8OFli4RpV1O5JHZlfY7Tg1SxRddwbNyIXlP
KY6HV1ShHMG775sCF+p3k4r0sARwvcs5I1yZCwUXSb37O0CEVXev3DgDuFDP
cjVZoDkRav3WY8s8z4VCnBd47lufg9aF0vrhllzozIt4lfZbKlDUTkzgjC0X
uj/cKNbMoAJ/s/H/+evIhT7oJf+Mf6EMr/sxPLDy4kLqfbcv3apWgvfPzdaf
DudCNnl+P5a4zsCLC+MJfyO5kDUKLij9eBri3w46ZDzgQiAq3Ybz4mn4hrKZ
jD2BCx3F+nyePVSEpS1Z5/5mcqFUNfuZeR4FOG7hVPqulQsdMFnKCwTKw4UF
xVVS56HeMbPMKDF5uBdJqzDax4XKsBdEr045yPcxt4RjnAvx9N6VfyMrBy/R
LxdHrR7W38u1WLNxHDqkfl1J2zoc7+17U8z5OPRVTDxZs8+FfkxpiEv0ycDH
9meK1+m4Uf7ssuRwtTRsrrj10VWQG6WYUZR25xyD/QYGy3dFuZHWq2sWe1LH
4NQUQf6tJPfheRbz4HrhUUjBXl80KM+NnAKy3nNWS8Jz7gxF2lrcqNZjOuL0
8hH4ge95obQPN2IXpL7OUSUKa4rcFs7f5EZpx+ifp1uLwjYtFVmnIG503GQk
bvFABM5c/1GQcvdwvMW1uPe6IlC0VayAOZkbJT2zvXjnrzCUs1+bP/aaG/HN
NpP/1RGGcKNRRiudG5Gqnjy2zxOC1mLu+bfzuZHorfyIk36CMCmkKG8R40Y3
AyLSaaX5YQbbnT+MjdyIS4zCxySVD5a8N5E+2sqNYGw/vToXH+zsWc+16+NG
z7VNro4x8kIGGWJu1yw3Uq24ENbAwQ1vj37LLmHnQbhnH5/NJOChrP8TjSBu
HsSe+ug5pQIejrGajgMBHrQ8IBI21McODy+c3C1HeBDvlVCTZCF2SJa7Hj2u
xINUmTiKk+twsEi9WjSLyIPYpmc+YNdw0O5HRI2HGg/SWdQheAjjYC2OeX1d
lwdlHngYWVKwwjsBYs7MtjyI7lWqk1seEzzJNkvW48iDxnVa64IFmODP3MKU
ZDcetDd10k82jhGqjyn3il3nQROkTzm6YQyQStNQXSWKBwWT690UD6GD0ey3
RFzzeNDX6nIH3nEqeDpf7YtMEQ+KLdjlUPSngtOadJdXSnlQrn+dnT4LFTwf
lBB3q4YHOeq/EjXUoIR04zkHCV08KA/nMJnfSA7Lg3xeXe7nQa6Bo38qPcih
G17xjPAID6KXdF+OYCeH37Qw79xJHuSswV3F70wGYwr6f2AbPGif+2qM6dl9
oHI+JSh699AvUv1zi9Q9MDduz6lHzosIdO3y5jR7QJfjr94AAy+qq7JzxP3Y
AUwhlNV/BXlR4J+3X8jyt8DjC3Iv+TR4kR2H/MO9+jXgNfJQvfkCL1Kv0fPY
vbQG9Lx/z/vp86LLqjvrQr9XAUPiG9hlxotuKG10vGdbBff+Y5q6d5UXldwd
aau5vQJcrrs9VvTmRfGdPuKdQitAi7r+zK/rvEjGxqqlElsGVNIhMSCUF/WV
d1Vt0S+DcP/ZE2uPeZH045xiT4dFYEuvOZSewIte+Z3wM65ZACDl7R3DZF50
Fo3hrwougN1a8768NF7UFJp29O/kPAhkbgx2KOVFA5eeF1U/nwO+GekN34d4
EXGwxuFd+DQwPLPvfWuMF6U6RU5z008DuZbLPNK/Dvl+Ge/MJkyBhUWcR/Q8
L9o33CwMKpoE7mfDcMQDXjQmMYjnovoFtDuGK+Yo+VAvXXeUxpuf4Kj9acdk
Oj50aWhLIUTlJ5iO/vvpHxsfKhZbERoOnAAO3VZWueJ86Lk5S4wp0zhQdS6j
sjjGhziDGLgDPf4DhE32QmpZPhQefiSrtnYMjAm2kNmf4UNz3GFx0YE/gNVV
pSxuHT7kUWVyi5l5BFwi41yO9OFDFK/E5Qrr+0FogA5j8k0+hHrob/gT+0HG
QtiRvCA+9M+I+A1U9IHV0bnLXXf5UGNUxtknFb0gsQL7KpjMhyjZqitujXSD
arn1UbnXfIh0Mr8u3r0bTL6X3lBP50MnWT6Rn9jtAgpJSdLu+Xwov2MRNkp0
gb7rnomfMT509iuebv/Ed7A/m1b4rYEP2Sq1DHy60QEk7AeaR1v4UPu3g6DC
qnbgb6C2R9F3qF+Mj5raog1wyfC4GMzyIfchFvI+0jcA3umHOywc+iV3q1pQ
7Btw4bv70u8fH2JTM2jafNAMPtMtdLza40PXvn5o5HJoAmZTdWdm2PhRCePt
4v+UG8Bt6y2jHS5+FDT6UDmzrB5k9ch6sgjwI0Ha/pNXlerBeu2LtwoS/Ojc
n9xXOWp1IOmND32ECj/6ERqpqxtYC2o4M8USIT+SnRGYQEy1YDp2mPhegx8Z
B30ZLkvHwOkQzevtF/mR1XGJtZ8FJDBgzj/C63iYz0YgSe5zNSD7brgm48aP
3EnF7mcoq8FRrWhW5MWPtCLNf3pdqgKBCsvqLgGHes5E+jJQVgIetqb84of8
qIx55O+dx2UA3d9tbIjjR94l0XSR25+B24H8xOAzfpT77+kQhftnUP43hfMg
lR/Zn2d2P2byCVi0XL+tW8qPBB4E3SPTKwGimimrtBX86JSYgcjEUDGYJzW4
1385zO9AO6DjXgzCP/GYE5v40TFblHMn/iN4/7bmxIlhfoTTH4w8sv8BXOOf
yfwzxo886I0F4+EHoJLEJpD9ix9teb2RUI8qBB0PnehE/vIjZe95I07BArDu
zzDBTiaAJvhhBW1oLsCWT5l/pxJALwJrmUV/5IAYzyvtD+kFkAq3jl63ag4Q
ciiqoMILoL/mVx5kcmYDTX2z+PUjAsir+EsU1VQmYGkOoyuREkA+or6l5XaZ
YFAt57bPCQFUiaOj9PkvA3gq7brPKAkg7jhWmdSpdyBRLF19WFcAPTLOYdHH
pwObN60VSYYCaAee5TDITANHeddOmJgKIKkLrZr9ymmgmuWCQJuNADqOs648
6/4W/Nr6u/rFVwDt+tATO9tfg/yb3B7B/gIoJZBC+Dj3a+C/iCZOhwggzkdO
jrVOKYBhKqH9Q6QAOioY9EOO6RU42amclfZcAB1RFpjPf5AMdnUcBWxSBNAt
xjf31Faeg8aG2Hi+NAEU9OFa2RWb5+By1X+3E3IF0CdXQnYvSgLhWVHmUV8E
EGvBLeU8mUSgI/KhXfWrAFrQ+lFr+CEBcKQMqu83CqA7UeXEaYUEkP1UWi6g
UwCRvy3Jfn0hHnwP7aK7+ksA4bvWIoLj4sDPkd7FmBkBtJoXfFqHEAdWVQb7
8/8KoKpQ0LPo/ATwbY1lLG0c8n/qZNStfQRc/OZRIJMgotCfnuz9HAOCehcl
X7IJIoFvQVVPyGJA7Kl/LNVcgkiRcyt69+ID8HF5a/SAIIgCbRdu+G3dA7te
tEH3FAXR8zipj+0RUYC1ncEuR0UQSZfvMO/+jQSiMiznW6EgemnaO0RmEwku
zHFwsuoIouua0Qwy2ndBgovoxyQbQYT/T0rilnYEyGo4klzuKIjmGrYovneF
g3LxY2HDboLI907TLbUr4WDs5wl9oRuCaDH1Qm/I9m0gZUuczbwniORv2dn+
qAkBxBrU2RQriCbD2lcd94KBoaBG2exTQcRHc9WXSjUY+I3oRB1PEUTzrHqc
rAOBADO3EPlUdDh/+YzQiIo/6PlsRTfw6VBv33eOqjd+YJrTdnGzUhD5+P6b
x2j8AFOv85dzDYIo9ggrRffPG8Dc8Mbl+iFBlHdP6rNSsy9w/+CPpscEkan+
YKOvji8IZQmWpJsUROGv2DrpOq+B9LbwNd0FQXTjqJPX0jcfsHDh8dMeCiFU
W8HHLejqCciznwau0QohNZM89tYUD8BB+8yWm1kImTNFMywMuAPlhlfHrbiF
0LMxy9MUNldBpGrOt5/SQkhuNcj2baYLaHyhVjMvJ4T+KYsp8NC4ALqVkeJ1
RSEkS8nS3+XuDB6ms6QwICHE/rmu5iVyAvGUN71PXhJCTDxaFK/4HECvFbPj
uctC6IVOE4XCS3vAWZplrmUjhBT5nsQiQXuQ7DSELN2EEEuO3rzFcTuQ2gDw
d0KFUPY1c/2L09ZgXHCQNjbisJ6MAPplbmsg6u+7+yxaCBXNutNIGViBLImM
qZw4IURX3Pv9W/tlkH+PvrwrQwjF9/tUT9Cag4X/0vNHcoQQoEnKM3QwA3JK
59KmCoWQWOW8iXqtKSiZ8Y7ZKj+sR+/OA5XYS6BSu9dapF0IfZzV4tAxMQa7
aV5G0t1CiP9sf1ZuhxEgbtNoKQ4IIUZDz/gP+kYAy1U+oT0hhLQKwibUzQxB
E2Mque+aECIblL7IIqQP6JyU1oO3hdD8ueRzf7X1gE5111zkgRBavr++nROi
Czo8qXqT6YURo1/DgsCSNuhtv5qFCQqjX/d3emp5zgMuCcpXLaLCSN/0a42d
jxawuJ3ypFdSGLUMyCiVtWiCEdnvgTPywsjDu0mV/okG+PlEQRenJYxWGPe5
pnTUgPhMO+TTFUbnW++l/qhTBc7IVUHcUBgRXckjU5EqmFl6IahkKYy0JDWe
c2kisGh0sGjrfcjfZ/RQYeEc6C6IRfgbwshhujIn/Mg58Jme72ljgDCiOyVr
wu1wFoTWKpw8HiGMukDN3ZdzyoBB3v3mdoIw2ru7/8dB8QxYiN2oL0gWRllZ
jXmuCadB10wkp/3rw/p2X70tX1MEyW9TPzdlCaNSGaM7HY0KQALXt5lYIYzO
eRw9Pfr8JGDwdNC+UHOYn5XnjgHnSfC3afHFzldhFCNz+JhJkgelYQxnHdqE
D99PDyPPpMsBtUV468R/wkhT+NV3Q+w4kNBtb//5SxjpHbXXklmQAfTvLYWS
Zg7j8X9OFojIgE4bP9LusjBi4Dt5jf6FFDjh2kfmTEFAwu9OVWo2SAICp0BO
DRUBsRQHCtsJSAL2OgcjHloCCovXe8QYKAHWhZbSWhkJyG7MwvXVuSPgSz+D
+klOApo9Ucp7Y0MUFEYa/XnITUC1JZ8ZJ31EwduTyQlTvAR05ZSAIPW8CIh8
fGQyWYiA2paA1eoCAehqoagDSQJSf8M5Oa0sBM6tRh+/LEVAJjTRJS/sBIFs
entfsQwBndMivwgfCQD2fUsJF3kC4r3QQqrd4ANDn/ya2lQISP6yzfebzDyg
xbHaR4JIQE9Vzkfcs+UG1WyUPOGQgIrkp6OcPnOBt15xbqc0DvmpKv5s+3IC
1yN59C/1CejT+b/JioJ4cLvBxl3CkIDSCK8uZUWzg0Rn9tZiYwIylbo3/GqV
DWCZQbGt5gQ0ssjH8OQHDvRrHv9rbklATES0pmuBA/NT4/qT1gS0IPsG8RSy
Ah6JC6x79gQU6HxCgYgxA9nGHZ8HTgREuqxzw7uXCWi4fOjkdCUg6arUK6RF
RuCbxRUv60lAOsKDIn9UGECLxBSHnT8BeQ8H+M4J0oLxxmS/+UACipJnb3rk
TAPWXfT6A0MISNd1SrGtmBqIvS95/jScgIaP/3rke4Xq8P3iuil4l4Bk2Q84
7lVSAsPffJdzowjoD+/af4kClCBU8g5fXQwBnUzo4qRcJAfxTYohBo8I6PYt
XyF+W3KQ7To7MvKEgLgSfye97CEDfe8NX68mElDuleK0xPgDouxRYYJEKgEx
Eu3frzftEDWau8OL0w79NEuUyv+9TbR0i54AGYd+fR+Q02HZJt7L/ptunkNA
V4cy5zx9NolvLqRRTuYd9murlDo2Z4NYOnPJ6VohAf1ay7Funl0njh+tPvKg
hIDiB9zCfoSsEdebfaI5PxOQKMmTy7p9lch0Vex3WjkB0Zxd8FAXXyUq58Rk
V34hILm0WcGsiRVi/LHL0vNNBLTa/ufkjaQlYvY3ptjAFgIqS2AjTrMsEWuu
YvNU7QR0/AHnTUnuReKfHMlCwe7D9fZW6P5p0b9ECp0RltxeAtrWTMj3PDVP
5Jl77HN6gIAEvrB+4Nf7Q9SQWpczGD3sdxqt9278LNGyJefpyBgBGRVNR9Zg
M8Rr7ldWXCcIqMRCnZNv7TcxJbe+JHyagC65j0l1XpsmrkklnC5eIiAe938/
/xb+Io62IU38PwIS4benaOP6Raz3XjC5uUZAb00l6yXv/iTGF2v7nt4mILe0
4ym9bhPEoEsbYc93D/U3tilOT4wT7dYzHm/uH/LfL/JYtxknyqqQ5VdSiiAv
H5qnKt/GiJyjBZX8NCJocG06eX3oB3H3ltW3UDoRNJN48XT78iixpfbzNGAW
Qf07ZO2biiNEF20vkTouEWT+w6JznGGQqP+HT06cVwR1SMat7F0cICo8agZR
/CJIO6rDsSy5/38NlHk01nsXxUuZSpciJLl+3191I8lc8hyOIfNQGUIyRySS
KbNkqpDMIpkjJbooIkIDUslDpeGVMmWO5NLwPn/utc86Z63P3usAWzdtoyNO
YVtgX48loxfGTne7lxIKRc60pM6kMeGlQHgg9zYKmwLMhaPme+CaZX96pwSF
sw65u9c0v4KYpdhiKSkKcWKXXo3UK/DMUaxOkKZwelmSdF3tBsZAUreJPIWP
99TzN8W/hDeuOjxMBoXV896psQpd0MT9XURRjcK5CxudO42eQUl5gUS6OoXq
9hLGnJ6d4Dv9S9tSm8K6oMgD6S3tcORyuXmdLoUtt95mRC08BQ15K2cRAwpf
xhpq5Ms8hfUB1Wffm1C4ssDtXnntY1gUdkyCQxTq9Jq+UWN7DAP1vNdyzSiU
asibMTZ9BBW/3RvsrShkY367upe9DfRjqB9fHFn3eOzKvxc+BNkdL9i1j7H4
iJW7Cgg9BOGOEIHrrhTuae3uikhshuF1b2TdPCjcn1H0MZy/CbpuR2OHJ4Vi
j1efuC7yAKoPypvs9KbQ7uSktadEI5xLS/SY9KOQW+S03jeb++C+hxFsfIbC
Y9WtPmpn6+HQ27Hzt4NYPDW80PBmHYhv2X/dO5zCD9WlZX0b70FD0fKn73EU
rsjKXLCVrYF9mr4/9C9SeDZq1dzV89VQ92mCJy+Bwh/cZxtnh/+FWrGPe/ST
KexxdytXrbwDCo0WRtdSWf0SpbmmNt+Bf4+8cJxPp1DB4HqaWHwVVGY2J+Rm
U5jjkC0dHFgJ0nuUC+euUiiknaLfOXEbbvVW3dPNo5C3eJ1kzlQF3NhQ+Plb
EYWl3z8NqHHfgqL4aGWdCgrfCirmH0otA7Lzt3FOJUs7DoU2PimF/HZ/59k7
FFbY+n07sbIUcjmOX8q+S2HNmryXzJgSEC0eKJqpY+V3P8BA/lUxZGta1e9v
YPF/ae2xhS6GzAj9oelmCveNjewdZxaC4N+tS1qtFIaqPdELVSyEtEYVviuP
KJT89d+9H1cKIHlJSkWrg8KUCQ8bXt98SPDlvZzZQ2GE+B5xZk0u8PDHlUz2
UqjNI+9Q0XgVLlStaNB4Q6HzXa0kpa4ciJuaHZ54T2HxL05pZ7Zs4Ehw/6n+
PwrJzN7qjH+uQPTOz+szPlE4FlsLaaZZEHmcyVAfptDNSLpMtCkDVnAaHUof
pfBKq02K+u90CC9+5Dr+lUJ6SSPIRTMdQgZrk9OmKZyZanZf+JgK/jZZo2OL
FJoerpk+ZpEM80vrf6suU+hdE3LxbvNl8Mm6wJ/6i8IvZZeS7u6+DKf6glVV
2Qjq3rvKK7s5CaZ8501TVhOcOXyj4an0JTjJf9JtlINg33dhO5/dieB+wDY1
eS3BByeDryTrxsPoVF/ZyDqC8MNm+YL9RXBNMGli8BE8eZBiPg+/AM4d+HVY
gGASB2+cWU8c2GrRqCJG0GdsPCrgaTSs7OX6q1WcYDZyHhlgj4aiY1Pv9GmC
qmGn2Ob0ouBrTF2A9Q6C65308uWGIiFB6Nr+QUmC1qsPlH9TiQSZ0ih+910E
JyzsEiIzz4J/u8ntQDmCb6Uf7zBwjIBN1oqhKxUJOjE3KuvlhkPDVxGD83sI
zoV3RIlFhgEbz/BwJoPg/oPd3UyXEEg0DhG7p03QoipiRUL2GZD9n8OEmh5B
jx2TOtaNAcD00ql/YsDys0q13g77g8jlDRavDxA0D45a+9nEDxqpRdrOlLUv
KKdsKtEX7O98mB02J9ghGBJxi+kDJT2lCQvWBLU+SG096nMa9JwTj4QdZflP
yoY+dnrDxLyPBIc9QfJEpUxR0hvkBNUebTxG8KbF5+Hd017wwLL3p4IXQf0P
nh5ceSfAYay+o8GbxdPOf2m80B1WB+VlavkS/MtETKmw0g30s08omAUSHOrc
8MbysytM7jzI9j6Y4L+pLg9buVwhqUHppVMYQe+SdfLvFF2g78NKD59zBBVT
z+9fVeIMgZ4jysvRrD6kuJqljDqB6J9nnOfiCDJ3FOY/l3UCR/HMwuQEgtuN
dHiOvnaAKUfpd1UZBEcOGHQ1ddvC5Tn+MuUrBPMkL14/V3MUFKL+83+YQ5Cb
z2zd4UIbCCpu29Cdz+IVey6nPdsatijdGLAsIigayv7uQbEVND++VDFQQnDv
PYEcr3uWwDFqrT9TTjCo7Gbb8wULKDuDwmcqCD7Pu20wRlmAIff24T+VBOd5
7F0zzMwhWXL2LG8tQcNfa/LyX5jC3ydj66SbWXnNH7ievPEgJP9xUbzYQvAV
j0s2M+IAcCRrV420EdS2LLgjNmgCU7XsZXntBFf4zX5JbjICR72hrb86CVb5
McO+3TeEvndteVbPCUoN++myPzSAByuiMjf0sOZPZ+dTX/RALsVJwKuX4LZ+
08JrK/WgZJtmUudrgu4PQlLqtutCoj5bXNR7ghyrZbRaYrTBNjUiYGGIoEhX
0mBuhia82m4/d2iUYL9Gx5DzuAZo16l53f5KMPWNwfFlLQ2Q/vjb5fg0QRtF
IYE+LnUoOPVxsG2WYMrkfd2G0wiCqx7YUvME3Uo3zZ1sVYNf/4Ra9C8SDM8R
uhiSA3Cq3uaV0jKLV9Hsrtl0BnwxZBin/CKYf7jYd/8VFXjmvbzfkI3GimPL
Mfb1ypBzP1DxwVoaDU8L6FZaKgGfsVWVyF80ulVIyNglK0LUwN5dAXw0yiXY
8Xa/UgAP9sWtMhtplHiqVCjkKg8DGa/z4oVotDr+dHVYvRyYSd4VHdtEI33c
JrODXw5UTPwFCsRonAxr22z0WgYqPpkn/RanMbTV9hJRlwHiq8hzhKZR43C8
xj773bAma36VwA4aV5mm2BYq74L+wdNz0bI0sg+fazhlJQHGfoe8BuVpNI/N
SzvsvwNaOOXGVZVo7Ix2WMOX/Q/ckJod/LGPRhsGF9/Y0jYQa3ppawY0Di9X
9MQpboPkg5X9lWo0OnBG+Cz6b4Ugf69XbqwftnKsNs1mHQ1TXCbGj7VpFF8X
kjPgQMAxW7qD6NGYfKPS1bSBAv3myYfvjGjsWVHuuDdSHDat8agyOkxjtp+W
VEyWKJRqhgbNWNG4tDpC1T1wMyiFJmqm2NDotWm8z99ZBA7NVPa+cWDxfDES
am0tDAMSLbnBzjR+9Utkd3YWAk+nHlcxV5Y+YV+/FCAIF/q+/+fkQePmvtd5
R+sFQJiPs5XDi8aqLF6vwFF+KNETji/zprG/s8LxoRg/tDTsE5v2p/FD77hq
ZsF6WCoI1wg6SyOcfmJ+8/c6iHuftHZLFItfXteYQxcPCAoWMJtiaEzIzGhY
U7oW5M63ubDH0yhpMGLlFM4NzS29u0sTaSwVim5UCOYC45/Di/qXaXxU8kSV
cZYTTnhxX0xKp7HIPqf86A12WCoVMZPPonHLVDBv3bPVEDe4c0tfNktrvFTu
+rEKisyNb2/OpzFVzsG23YUN3quk9JSU08iXLVLarvqHsVhRc2yikkb9fM/C
b09/MgTImx+ytTQGd7tdXz63xJBJWzofcJ9GZdf2+B0eiwxDri2ijc00GuyJ
2cAetsA4HqxWwfaYxnQuoQS72nlG1JQD6nbS+FEjYlFzwxyjkVni3NNLIyXx
oWlOYobRr9O+IPyOxsjPG6ufPJxkLNSPx9kO0KilXZqr5jTO2CD91+aiIVZf
VfrRVGGMIZ0vc2vsK43ndMK2m8mOMPQFTNV2z9B4/dCVrHcWQwyXWL9u3+80
TrxgaD7K/8yIXMpwql+i8Yt6hKwk7yAj92T99z9/aLx/0FPFJmeA8X/rIBjz

             "]]},
           Annotation[#, "Charting`Private`Tag$9204#1"]& ]}, {}, {}}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointBox[{1.875, 0.04}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], 
         LineBox[{{0.875, 0.04}, {2.875, 0.04}}]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Probability\"", FontSize -> 14, StripOnInput -> False],
            TraditionalForm], None}, {
          FormBox[
           StyleBox["\"Trait value\"", FontSize -> 12, StripOnInput -> False],
            TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       LabelStyle->Directive[FontSize -> 12],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Time t=1\"", TraditionalForm],
       PlotRange->{{-4.999999693877551, 9.999999693877552}, {0, 0.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {192., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUV3c8lt8btvd87VmkLcko1Pvch1RGRsrIKJsQomRlV5Ik1BelEkkyXnsk
70H2yF7JaCjKCAkZP7+/ns/1uc9z7uu+znXu536kbD2MHOhoaGjIjDQ0/38e
/Xj15+YmH94pspSaqf2UPFCeOqv9jw8rDCSv3ix5RvZJbF+IX+LDya7xp0WS
n5MpxnvWdk/zYQadlPoIhRdkPSVjGq8ffHijjVz9gyONPEUKY6j8wocZJ+ku
GP1OI8t0fOQwHOLDfHRKP5mHXpKrc1l4k3v5cOL2XFvt0QzyhXvKAl87tvDL
utWAuVfkRJ37Er4NfPgDkd0zrJJFVt5bKVVTw4f3LUpekLvyhtzFPLmTo4oP
W21/LFZWmk3mqNOQe17Eh0lqmzz0Xnnk12keClN5fDhNqKMlxptCPhn25LDS
Gz5cax1e9+BwPjkElojG1C2+7o97A/sLyBKSO46TUviw3/PX3odKCskVawan
LBP5cMu2ZIU/T4vIf8pfG8zF8GHLUn3va7El5LjEvrNqUXzY4G0WSSa5lCx/
nd4s4iYffh/H51efV0Z2UbKyFg7kwzTfm7cz0b4lM/NF2dte58PEvf8aq8mV
5PTfJc7ZXnzYMXsoNDfyHXkkl+cKusSHt01ofmnfickB98jXouz5sPkMrbvf
Z0wWdnPx67nIhx99ozG+/6qabLT3faizCR++v5LQ43u6ljzL/PtmwRk+3Pj5
rRX/gffk6AmJqLXTfPiSsY7/G6E6ckPa9bjY43z4l7JTUjRHA9k+LP3REMGH
+8TqkmuEGsl0Np3JMmp8+GH4+wetck3kY5L708rkt/QNzhO9HNZCpiSOFI5J
8GGh3yzOLU4dZL3r7GX7RPjwN13LlmCZTvKUsUrlVf4t/T8p8t+Y7CTL8MW9
Z2HnwxYe1/2q73WTq39XNRox8eGas0cami73kC90/Gx9QsuHgwdP5KSY9pIT
753olV8mYVf7BU8znX6yspvXoP8CCY/tnM2WPjdA7tJ59un9DAm/FnJ4HHxp
kMzBsvLN7BsJG/1S/z1d9pEcGpa9FNJFwtFla8KDgWPkvsDNOw5tJGzVhNPi
T42T9103ktBpJGFe26n+D2KfyV2uy8f5qki4KvK74P3PX8i7HHX7/5aR8OeV
vS82e7+S/a2fugwXknDv4oFTbT3fyNLGmg9evibhWElFuv+WvpN9DP6TiUon
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
DaeIPd3llzRAcG1zain4wYbzfHBasPUgATpWN4+OsuFThhU8tw8MES+ea6+c
bmXDUT1fi7SHPhLOetLjHhlsOM2puaYsfJRI9hV+vPyEDcdSFLZa3BjRksZl
HBrPhgve0DZWVY8RcqurjXEhbNj5jcYCf+c4sZjRTSk2Z8P9M5SIPKmvxK6u
JhfiDBumTyZmp/FXwnSdKtNwig3T6XMKDtt/IyrOZicOKLHhObvjy3pvJ4gQ
mpsh/7jYsE7MVLBjxiRRsD9ALYJxK19qrs8/9ynii8mVRY41VoyDXPPtyT+J
kzlWzpKTrHjPp2tvzX79IjjMDxuq17Jix3UmixrdOYK4KcvWXM6KK7N0FMub
5ggPivR7IworVlAY1dXT/U10MXGr2KewYncaYiH//DzxX+H3bbevs+K70wyy
RhmLxGHBfcual1lxSFZKdOCZP0Sfr1sHnR0rVrqxzWySdokQJH6HBOmz4ujJ
gMld3n+JkueK549psmJ7z8w8LaVlwpje59CqKiumi382o/9vmUhoXB2/tpMV
ewdfZih9vEoo7SdXKIqx4s4neNDr2j+i+15w3G8eVqwbihQbjNcI0lmG45fX
WPAt2Zje1X0bROwnznT7bhasdEeEL1aQFuSRYaB0Ews2OrqT5uFzWvjwIu7c
WBULzr269K1Mjg64nIUYLbNY8I7w3Ks9pvQQPb/d8WwoCw5u9ThdP8YIssZ2
BO91FvxMwTxx730maCl9KfjBbSuesv1yrgYzsN3Y16BjxoKPlJ1VyC1ngUhm
pT0aB1mwSOzioeKf7LDHxYeGZicL7r/Ln6fXwAENrWUD70RZsOkXtXfHX3MC
Uxz5jioTCy4Z7V9bCeGGCPFTU/KfmHFryuL3szW8IBN8p2amixnfXBneue00
CWrHW5KzG5mxluvE3cFBEtC9MtTdU8SMpRrk42/T8kPIIfPsbXeZ8bYwv31j
EYKwPeFJxKcQZpzCLjB15JAQUJdGLB/7MOOX/6UKOn8Wgo23dpxCtsw4fqcu
f89ZEQg8edmdS5UZC7VYGf3nIw7ir/NOtsox491XwzYv6UnAW/Z5ySgZZvy+
5XGX3D5JWO3w+cDIw4wxo9fG/qVt4GsRIr8+wYQF/T1XVGekoKLl0fTUMBOu
NNjneOiKNKwdzcka6GLCsQupOq//SkOw+JBMURUTnoyWSvLmloFbnxRFXB8x
4Xu5FOcNt13QqKfTZxbNhM028y3CuHYDW5V1/MkwJpz4tcrzZNFuiHl6j1Pa
nQn7Kb7dt8KxFx5e/E47eIIJi+f/mOJZ2g99H9ar6o8y4dqyTJHkSlkQRvyB
RYeYcLjUAYtTkQfgyXb1pfsSTFhUjJkz+uBBSB9Pnjr5hxFnZA3TvbE+BBNn
8l8p/WTEzhxjD7SHDsGemgZ76XFG/Cn2zV5aUwV482JxZL2VEZOuDI4xmitC
gZ1+d1E6I05+xmwdEakMi932sS+SGXGb//EYZonDcFgzQC82lhH7LBkyHy8+
DOUymQ2ugYzY983kFbXfRwB/o62UPseIZ36whLxOUgM6E2E/Hh1GHNDIcdFF
/yho1ssd3gBGfGc3/8unzMegMcOCMrifERuYUnkab5Phg1Nxeiw9I84OHvnG
YIOAZ6DFJmiFAcuyfZrJaEdgpPVZ0m2WAc+8KJOaI9Shbw930qmPDLhwyX22
cLcGjEw639soYMDhDUXjRWKasN08WOdXJgOuIx3ZVH+uCbbND5mHnjLgkn7f
jj+7T8C3rJrQ4igGTJF4eUhI/ST8chX3cbNlwK7PktrVnmjBVI9OAPN5BrzI
bmIkdkgbfpD9Ql4YMOBLS33nVJu04Rt3X9TAMQYMMCzmQa8LI4X3n2kKMWDh
1FDF5FQ9GBavSh/lZMCxrSkGZCN9GLr567U/AwPu2hvT8YrJAPpNtYsov+lx
c6dxTQzZEDr+0TWJt9JjySldvbPNZ6Dd/lB7aQ09njw43NeuYAStbRe7jcrp
8RPV/a8DU4yg6Vnlp8gMeqx0reNWkt9ZqDnuM78YQo9fJZieZNM3hqK7k2Jt
yvR4/Pwe0+kr56FgUUjKWZYeL1vedBqnMweK1cld9DvoseKela91j8wh52Ca
vCrPVry21eBRgwVkdFueeDlFh39Iv7z0Uf8CpB+7q4PG6TBSr2YcWL4AL16W
G3zsp8MjNs6VhzMuwrPrgua8dXRYXcDzzZub1pAo1uF+4xkdFqsY6rtMYwuP
Ija8hR/R4ZX4/xg/2NlCwrSsX2E0Hea7HMQk1WQLD6h3wif96HD22Tsx5Ul2
EGV3PNH4HB3e6W/akX/WAQLflFQfYKXD2/MZK9oVLsEP3UPf1jdoMZ3HIdU/
7y/BuV9vWNoXafGBtcxpAXMXOHAg1cB9jBb7b55uCrjnCiO5dz/lltLiwbiG
eEtRd9AxYKINzqHFb12WKvvq3KF0NkTGII0Wz4875b696gGx8j6uszG0eJsG
41yIuyeoF1ivHHSkxR7bzQ7+9+sK5Bp9FKexpMVqDPq7+gy9QHTBGHWcocW5
tPx8rKVeMK+oe9uTTIu7fxxldrvjDenFygL5/LT4VoBuHf+pa8BUznZIoZYG
B5bcUq864Ade52+eoyunwYlzPo7ni/1gZGXzelcuDTZg3azxA38oVftT5ZVM
gxe0vml6WQSAc+Xo6cIrNFhCPuyJTeEN6LE09wx3osGHGb591zQMAvX1nviz
VjTYy2MkkWYuCESJ5qEFLRosVGTtLSgeAi3UImel7TR4482hXi2fUFCxPhjN
IEiDH1ZNfC/tCIV0mqy8HnYaPL/3tC2WDYPlMGJ6cmaTKjMwcqx4MgzMb/Gx
uqZsUgf7ZG70X4+AbffeocurG9Sj+LXctanb4En9LOT8fYPaPL2U6nw+Emp+
M8/a9mxQk31Hq4SbI8HexCjFLHeDqgsU8TrKHcja9n3luO0GdfFKSu3P+Luw
doajkzDYoDpbJSfY8EaDXsShTNVjG1Q+4WOu1bHRMPcjwOSg4AZV6ulSosnD
e3C4gKdQtHmdWhk3uu9GyX2I/KocJVC6Tt2nYnZ3USoWBgUtbHjS16mD0YZe
pZdiITDgJTdT0Dq1t/KFvedaLNRoqrn9PrROTdrzk5vpYBzo99vtbExao+p/
j9WLbEmA56x31mpurVGdfV8P35Z5CL+P5na/816j/hlIvN8Q9BASni+HFuqt
UdPF14v4jzyCoUv3Rp7SrlFpGqzoNEv/A8e1kv+uXfpHNTOZfjC3nAxlcsPu
nib/qGSlX7cjnR4Dqw3tSdfj/6idHH0a//U/huw63UVriX/U5XOrNLsrn8B8
zJjh6c5V6tcd4XVX/nsKQVJsbDtUV6m+FQbxX0+nAr9Hf9aNXavUrrs5H23u
p0JWZbruAN8qVXn0xvHcrlToM4V792ZWqEol9EJvLV6AXMxVnuW0FaoGfzC5
+3oajK6OCLZxrVBb4lmG3Adfgo9WdunutWXqro+0KH1vBnA88jMLm1ymJvnZ
s9T6Z4DKIf7kI++XqSX+l/bUbnsFsU7aEi/8lqmvTmaKrl7NBNRTuOP6179U
w2DezGd6b6BPKvR9Z+df6sq12xq7c96Am4e+gyz1L5VJWuwHhTMbEtkmM8aT
/lI59IqlOjqz4TeS3Hfa4C911kZDztExF17kRMpLVSxRn/W0YN5xCtDftiK3
3P9DlfLRjdXOKAKf47WisQF/qK+2Xezf/FUEPzb3LJ9z+kNtc3O4Zq9UDK2+
iwUjxB+q9LhWu1pdMSS43N0zP71IZcmovLN3tgR26ZfziZxepPJzXx13sS8H
HQGBKUeWBWpkwbksub4qqOz0b9i/OE91vUuyPq1I3dJvLH1udJ6qyfPJSPIB
FfiYsy/6l85Tw6roVtx3Yxhe1ui95zhP7fidQrWZxOA+7ImL3v+m8lEYqr7e
qIEHaa2P6ELnqA1H/sVzf6+DwDO2DNLuc9SSiw9sQsXrwWnz7xV1iznq47Ye
7yNG9UC22KEXojxHfdl+Ucu9qh66dy4yrXXPUtONj4j9TWqACAaDsfmXM1SD
rh6pacsmmKhmiB/T/kUdC99gcudsgzfHPJffPvhOrfLW/0vx6gI1n9bTH5y/
U9//8im8+rALGvP2pH6G79TtN2tKj5V1wVfpcW3WmQmq8eWWnX3rXSDJavTY
RGeC+mNHGJ/gnW6I61UkftN9o57duDNA86wHfN3/hu+6+pn6uYH58mx1HzBl
nh1Q1f1MPa0kWHD1Sx88HM+T1ZP+TAWaVM4xhn4oOOfc690xTk0XmqJ3ONUP
P9UGd1XLjlP3SBVWsLf0QyWXT3xp8yh1c96MfaplACLRuqR0zhDVR7uo41P2
EJRuN5lpsByiKtQHzeQ2DsEETd67yxxD1JUEDQOtr0Nwotrastx1kCo+MXKs
Q/Qj0Gm8TzLcN0Ad/0uuFbv5EQKP3+UPftVLrTro8umT3jC82fH1i4xpL3UP
9Vtck8MwDNGTC5uZeqnTTYtvPW4Mg+r7mTOCjj3U3E63gz/eDMOSptH9HJlu
qu1/WX7ejJ/A46QI23BqB/WUSVy0dtYneLrLazD0TAf16HUbsZB3n6CdqSVz
N23HVn/gUnTo+ARmMSsxE7idetqcx0Tlzyfouo9ZBYhW6o6X3R5zaiMgb+iV
aZ3SQt13pEblju4I3OeROZW91kxtvKEf3mIxAqcf3I44/raJ2mQnbaATMAL1
cfqbV1QaqGXunzWlSkZA5izN03f/1VOTrny6s1Q7AuF8BcdY/9ZRN8e16K50
jgBKEPB/Xvye6j3Cmnr25wg8Pdcg/Iv/PbXAZN9gxd8RWOf3Kz1ytZZ6p/ii
cx39KFQ8HF5sV6ih2t9x6q4RHQVhk5h40bhqquBhuY9FO0fhuiBScPyNqTtN
Nh9oyY+Ck9yp0dWLVGpv1X93zmqOgkxelnicZBX1kI4+b7PeKIwd5DLf+6mS
qma60jtmMgrmh3p7TM0rqGa715umnUYhvemIQKJcOfX2xQlBK49RmLVJNh6g
K6O6/xLh8PUZhYi4i31mb4qp+uXKXJTwUfiwr0YwKbiI+k71RH7rnVEQrZUx
HTxbSN10WtiTcH8U8hYm+8+vUaiFihZj0smjsCCUJK+Umket2c3QOvl0FCK1
LuQXaedQTfcf/GqeNgqSfjsUlOezqGZfihl9Xo1C4esfBcXJmdRs38M8R9+M
gtZQjuLh4xnU6SsCE69zR2GEzbuo5Gca9aN9sFtN/ih4H1VRPpKQSr0d4XI3
omh0a55ddfXwe0rVZ0k8MFcyCmqqNy97NidRNy8/RIzlo+CQzO1xRewhVe/h
u6LailGI/Zfk6eUWS00vVr2xv3IUrpZrfZ3wv03Vk6OLPfZuFOL+VrR3qgZS
yw+Oflvawr7Lja/f/LOlMsElf/OqUVDa+KJ9OtAWsuNZTzttYU//Rknp1QDQ
1l+1kNjCX/wNOLgtboPTnZO5gVvvn7JMibhlGQvpms3aN7fyif8jhd9kfwiZ
exRUjrwdhfmkyNCIiiRw2fnvZtwW3waVjeDwS08hc+qKxn+lo9D+UxXUo1PB
XbUg+ETxKKi+vVqFv6TBJneGUUrB1nlG5ZHR0QzgpDB0P80bBW7zqUpqXCbs
DDojppM9Cv57dx6DqSwwrRzSepY5Cl+XL76tUs8BCcmygKfpo2DQmKxGJOXB
0SNNfaeej8KnlqnhC8sU6HhfGPz48ZYeipFPJGUKwKZz/GnSo1FYp6sVexpQ
BF8n/GYf3h2FAhfrj1avioGm2j844eYoOHetJ0t0lwAb7Q8NIngUulJVRFP2
lUPQNhVIuLLlB9a+QUuTChh7fP0XchkF8hXvJPGwtzD8sa84yXYUMlGu8JPB
d/AhXDHN0GgULmTqDlgwUiHp2h/DPO1RYItcbLknjGHl+Hm5t2gUqLMP7upp
VoNrRHDmxwOjsI/aytb2uBam+3KCtBhGgcH78VT2ofdg/Nw1QGRlBEZ3uTRH
N7yHA1ee6CZPj0BCDHPU6YU6mB0j/8juHYFNKw3WVp1GYExb2CP1YgSWk/UY
zKcbQeVkVK5h/AjM95ttfr/fBPouSnU7I0a2/gc9/tD3NsP8o9t/auxHoPXE
k/GjF9ugJikIDUlt9Y+wV8NNtO0gOnBS8BTPCGBqQb9pejuUOWldvrDxCQpV
m9q8Jz8A61Vuw/uDn6BN8N9wr2onXDSxvMgZ/Ql0ikOGxO92gl3w+PPx65+g
/izTgN1wJ1AHLnE52n0CHMvb/TuoC2pKuq+FqX6CIrY9TZzvu2Fvq+KxbZ+H
4fHGueIT+n2wfO7ug6c7h0E4Zagg+lkfpO81COrlGIaEo9aU7rk+KMPtdU0L
HyHG1/WNTXw/uC1vW5nGHyFsPjT1xsAARHAzXyTMPoLzRO69YtuPcGPxPP4Q
MARiTgyFcUfHYCDvzvmAlAFwPuvEG2ozBuLakSE6IQNQBM0eHrfH4HA1NW7V
dgD0hWNlT3ePwXwmXwPNngEIaRLLYHQdBw3vmUeVlH6Y2K+Y5Jv8Gb4m881k
veuDgjmb4AsrX8HtD5VNsqUHtPypuvtKJyFgrzFp21gHDEf+ltccm4TxC+uG
Q1UdcOW/HYIXWKdgQEFcKCulA5KLbo89sJiCRpl7JlEWHfBrxuDayuYUpB3d
NlJH+QCxdmNPG7V+wT/28x1yuW3Qf5p23nFoBiLPaUjpDzWBm4Vifwj9LHw/
2soR96wJaFwcKpNlZ+GYakz9bocm2HO76VZ70CwQvAXup383wruxRs7HvHOQ
md+5HM/ZCNxiD17QlcxBi0eGW59JPRTel2rt3PgNKeUe6/PytVAWQPqzQZoH
BqzGWE1XC1VO9JKyu+fhEJfu4O+eGmiGbx63DOahwbZvxw3/GhibzeQ7+nwe
WtLHaTWaq4HDUN4iXX0BnFTKhYoDMZCOSUV0Gi+Aj42pTes5DEJ7SDkblxag
9Kj2He0DGKRpFjfM4hbg+iNzs59VVFCllL7g/LIA5Yc9v+x/UAWOPDDlE7EI
uf5XOMYsKsFt7SBfeuIi7Hr151CjcCVc+bH9WGf2IiwIfgr373sLgZguZn/v
InwItTU5du4txHvWHxrb+QcY5pjn956vANyh56fd8AdexKW/0ogsg/pK4oXP
xz9w+YLj/cQzZdCSebAlbfbP1nfJM4IiVgZ9IbwSG0JLECQBDTsKSmFavhcX
OC8Bz5jIN7ofJSD6wJJFnO0vnCj3Fpj2KYZXdyVSZ8T/Qu4f+YQx/WJQujWi
Wn3wLyhuZhpd2V0MegHWro7Gf0FXVczMaagIQhzs2ynP/8LxozTWMaeKgNN6
p1N44V+4s+jTdk6mCJLNJzaN6//C4ztl1fm0RVBo4Hzo38+/ULQ3M2d/VSFM
qLolnDiyDLIP1biYiELwVjpwQFhnGbLUpsFpWyHQHJypm7JcBr79NI9MaQtB
RMbz7/2wZbgZkdA5Xl8Ap7mumg+1LcMbK7vNELMCGGRRXsgeW4aWcyvDQBSA
I/3S3eCFZagLLpq+udV3g5evv5MRWQG/0/J30+bzoeBzwHYP+xUQN9S6zfww
H+DTsXL16yvweUV5+HNQPrT2r5/hj1qBqz+7149dyodvrcHh5XkrkHbI0+QS
5INwafgE/b8VGH9iMhz+mwIv8zWD+zhX4fofx+1HRimgkM0o/Hr7KnyYH7hs
3UYB3dTb2vonV+GCbXk2zxsKBN29m534YBWWI5VVG10pwH7r9AnX9FWoK2Q0
4LCiQGII5wi5dBVSFaUc3ulTIP/afe4vw6tw9ETluo0iBQhPw8zi2VWY+K6u
dHYXBZpdeNUj6f7BKYpid7YIBb5ejPc6sOcflOx7/SaBlgJXzM+x0xz9B1rZ
63vUf+XBxjmB9C69f8B76Hfk9r48ENb5r/e69z8QnpnNkM3OA12lxyo1Vf/g
srGSqKpNHqxRaxP2df8DT42L97/r50G27q+5uO//YOyz4mUXch5w2ZFf2/Gs
QYQ39h4Xz4OqGQfGVpk1mN9hk/6BMw88/GNslFTXQKSqQO/WZi50PBgVYbRd
A+87oqLq33IhVILF57LPGlC3RZ6AwVxQeC3f1Ru1Bva0d1ZX2nLhs9J5OeLZ
GlguqRHutbkQj0OjMgrXoHebjmBSeS5ons6a4Gpcg9oB1jvXKbmw2N+lcX14
DRaN76UwZebCS7t/T0fn1uADA7Y4/jwXTGZ3/DvFuA68mTda9yXlAlPAaVOK
yDq8UspaKY/LhVKma4XCcuuwz117Zjo6F5zjUrhDNdbh9/FHJbW3c0FYst51
0mQdmqdFrFXCc6Hp9UzDGdd1CGyuWdEKzgV/ZSGZiuB14Kb5Fz8fkAv7qiFE
OmEddD5VIQW/XPh42nk4KnMdbq0X8DFez4XogViVhcp1OC+vJu18LReO2Zcn
WHSug4f03XCzq7kwPTs+V/ttHRJb6wy7vXPhaQCbnuzqOviks7zs3cL6zIqv
E7g2ICvuZorl1vrNOAvGdekNaMh9dN5haz+KZISNw5EN0K7qWv3lkwvWWdnv
2nQ3oDJA6uWcby7wHO4VOWy9AT2pH4Iub/Gtrl6/9vTqBsxVvaBYB+WCl96u
LqY7G/Cm7ZdDQ2guSA/qy3mkbMDOR89an97MhW7761H9+RsQ2HdR4OudXIiY
ezYB9RtgqZDonRCTC9+Yfz/lmd2AZJdLp/dv6f0oXuSfL/0m7PGzPMbxLBdO
btMwHRfaBD+n57J6L3Mh83A8dwHahOVHWPRrQS6Y1bx1FTXehMICmldKFbnA
qv+1IezSJuwjBRoOVeeCi4NyyNm4TRh7MnJMtCsXxH5bDb/N2AQXowt784Zy
oTXwlorM203oc3G9FfMlFw4k9M8tftkE+qYDnNJLueA7XinfIkqDeNUVgs5K
5oEaz8VUNzcaFNtWGZzhmwcmVha3F67RIKa82Qfj4XnglWV62T+YBr0OvRen
dj8PsjQNVSPjaJD2enMGkZEHIn7qnWllNGjX0ab+8715sDy+g/YjAy2KaaUV
3yZGAf6D27/bcNGinHNuHMekKCAfKN72Q4gW2esfNTu/mwLOggJJS/tokXWK
4tMHW/e9X4fpEOkMLaKLaU4a16VASeEPa+0UWtQv4lmrG0CBLppvJzsyaFH4
1+A/HKEUmNEblzWl0KLBIvMv1bcosOvH4LJ9LS3a/R9JgCGOAg/FW2JDJmkR
9SaZ6HtFAcqlBh/mBVrUfWNbjlQOBVpLai1j1mjRsZEHJhYFFGA4U7nnCTcd
er1IV7s1YMDVmzm4VJkOVe0QcRTvoEBs1+sMAujQ1M+69YYeCmRvy4iu06JD
QQe+j1gObvWj8qdm3RZ0aEbwnjz6TIFzM/fnZkLp0FtGE99P8xTwPBrdd+0u
Hdo951NQu0SB6MjIyrUEOiRKBA7ErFLgvXRoJFsmHZI8WfetkzYfFE29tu9q
p0NfLrVfX+fKh+xHyVI3+ukQVy9n1gxvPuzqq5HuGaNDIVcblGv480HUmG9n
2AIdqoHnb7lE8yEh4eiuwbUt/gVyv26J5wNnj91ueSZ61Ckm+GVUMh9ozhbt
HRGmRz/N2zIVduSDf9zwPmVperTRG0zdvzMfFjoZZKP30yOFo4ayDLvzwY33
wIEvSvTIb/hF4ts9+TBhaCynRtAj5lBWypl9+WAde+Pgg1P0aHFdY3v9/nwY
/PBS/ochPXpSqZYkfCAfjLjbD4E5PRKUZ2nTktv6/ugvKTyyo0fuqjMeJgfz
4WSMpNK0Gz1a9TNXUZfPB2rbSWVNH3qUkfB1hOVQPqhwehx+HEyPyqz0JHO2
cMHp/47MR9Ij8ZUbhQcU8kE2mqqiHUePdn2/ZRW1hTNavqs+f0yPWGmefarZ
wtvZeY7+TadHK1bSf/u2cJKOyjH9XHrUpvzAo34Lk6KsyS9L6dF0SgzXgy0c
3RRJrGF6hDVHUw5vYSbWfDjbTI+c+Z0nS7byh2gNoqxueuRRL0vl3cKrt2k1
aD/Ro6sO+rMnt/h7N+w9bjZBj0bfsZ7+f32/mIw082bp0fvK4tewVb/jSf8T
TCv06GJV9Qjdlj5jN1+ctKJjQJIthbXPtvQ7X9d8qoidAcnW7lIU3NK3i2FB
i12AAa36NrI6bul/WlNMx1aSAbW8Nd11f1c+1Icf1y3fzYBuG7y49EAmH1Ct
62meQwxod29YiZv0lp80KvWrjjMguog0ulyJLT+FfjUQ0GNAUgF1nXxiW36q
5jjjZsKALM2P6RgJb/kJWZ0VvcSAKvM4ps1IW34KvnnuitdW/gGjv9u5t/xE
zTFuDGBAR3bXuFSzb/mJ2DD1iWFAR8UzbO8ybPnpxq7zbf8xoNlmal8RzZaf
KvXNZVIZkAXDqfiSNQpMHH1m2VXIgNI7JIY0FilgHdBgtfcdA3or42nXNkuB
wYrZCyH1DCj1wkFF+Z9b91UV2cgNMqB3jFllQeMUOOnnbHvzMwM6HGQX6DJM
AWpZrN3wTwbkaxT8Qq6fAgVHxh2iNhjQy82VE6iVAknKYS4TOxjRmovCs6gi
CqSTL+ixyDEiv53PyJStfkA5oSa/T4URoRr/iVcZFGg0nv9z+TQjagwe/8SZ
SIGla7ahf64youSYgQdlvhSgCyLshYIZ0e6UK6lenhTgvCV6SvUOI/I8VENP
40wBmUddHDdSGJFyxUzMQxMKGJVoJDLUM6KrNFND+YcocKFKMmBXByM6nHAm
mmMPBS7Vr1ppDTEiyYZ7dsckKRDSV7AjeoYRvdRxjRdno0DuknQenxATOlcQ
8LKNmgdsR+jrpZ2ZkG/W5T0fmPNAEEYzNb2YkF6VbrLnbC5InXp71zGQCaWe
Krte35cLKqbeZ7JimVChBrNnXHouOF7/MnyonAn11vd24WO5UFNau4DYmBGP
4g02WescCFCJkLqYzYzCfVbTzvu9geZTWpXdxcxoIftmiaHFGxA15TDVojKj
v6/qAyXJb6DsWkL0oS5mFG88Ya5O8wYWC9L/0i8zo9GeNzRvI7LA7UBdW+Zx
FjQZhFqVbr+GC9JM/vNDLGjf6wNvmH1fgTpHZNdNVjaUQFvCkHE4DaS/burX
8bGh5XOrv7p404Ch8noLgyQb2t/SUss2/QLqXZ3ehyuwoZxbq0VP016ATsvJ
klALNhR0w8nfg/cFGEUxJt/IYUPvbN6quM09B1uWcJtrZ9hR7/GyhoNhKXB8
bPVTkQU7UhT7wqJPpIBMmZf5ogM76hT5SZ+/+gQmnGzPevuzo/7c8+XaV5+A
S4P6iStp7KhH0GH1q8tj8LpFs/fyH3bUKm10OdMxCcIZgubskzhQgPTLqsCn
D6GmXSryahoHKrksVsfr+BBokuq2ReRwIKXFxTd0cg8h6ACnQVo1B3o93v5v
pSoBfE2e5IxPciBJx7gWnW/x4J5Z4XJBjRPN3H5Z3HA8DnK8LtC5a3Kix8IP
O7R54+DXMbrkG/qc6Glsk86B0QdwqVO76YktJ9IKVd8lEvgA7FcHdn+M4kTG
u9YE7lTEgvnpv19NP3KiL+8NQmvjYyBJ8HGg0zdOpPbkuQ7paAwMjBH812c5
kdt95ehdX+6B8bVbxx/Rc6HV9kGpZ8r3wPCpwIue/VzI621RWeuXu3ByTvHi
mUAuFB7p+eOr/R1QSPAc1JHgRr0Lk4MyfyOgyGFtT84ubuRxkqjoqYiAw0ci
fbnluZGbjvj6juAIODr0TKhHgxtt6qVsf8oaAZrbPxhbOXMjOqclt5md4WCa
faDLo5AbHaBbJ9kGhMLQjXKprsotLHt/rFgrFCwNTlxRqudGBM3zpymCoWA9
b8mzMsCN/sUYle4sCgEXlWj9sA1utPvd8y90v4KBsL3m0CzDg36eGm412nMD
NnWO3gvYy4Pur+wdzusJBKxIWywrx4Ou5YW5ioQFggbjPYb7R3hQduv9arax
ADiVmZ52VocH9S151ihk+oPhTPf4sAcP2v75Xemiky/w9iexxlzlQed3dj9W
k/GFLurFQ+DHg36HR/5wH78O5x78DEkN40HLR8gbyReuw3kl+u2OD3nQaJRv
cbOdD9j6K1yYreBB0R1OI13/XQW3U11LjJgHFbx6vu+h1VXw4fe6L17Hg8br
tb/oyFyFqNx8rP2BB8WHdyXeKvKGws/yO9K/8CBLsQiZlVEvqMrreFvxgwdV
D5C/8OR4QWOg57nOaR5k6LlflCXAC4YFKTc3/vKgkvJOxrsiXsCge/CHGQcv
uoi63qRYXwEu4Q8hHry8aMxq37qr0hUQ/uYuckuQF603LZCYWK+AbHCuTuF2
XvQSSX2IL/IE48IDOZzKvGhSoampk98TMsRkvWqseFHW6GGX0NnLQPnRwjZo
y4vETeJHTXIvQ0Wxa9qsEy+alZucuu5+GdoN3vSIe/GipRl7n6h5N/gbvu/I
9Vu86GZ52l0vVjegO9P84d5dXhS0c3fxzi5X4JB0cU6P5UWbzWrXaJ64wvay
10mdybzoJ3fMQTFFV9D6tWdtfx4vmsv6ftTN3QWMyhsTNIp4kbWKz5PP4AKW
t5wPnC/nRbfTkuUukFzAc3vmhVu1vKjwhLHKuYpLkHhud/VYPy+SaLn/ulHg
EryQajj/d5gX9R4rPfBnxhmyZxznOT/zorSDY+pMTc6AIzN2HP3Fi06vx5nU
BzvDZOXOWw9pSGjzvnbEmb9OkHCv3N+YkYRkzlsrGQ06Abqg5yHARkJX3kwF
bL51gsTNq2YP+UgoNodadzbcCbQ03u97uIuEwlr8TsSKOMEiyWyb8X4SumTi
EPmCxgmef/nJJyBPQuMWxKT2D0dYjuBbT1AlIWJhf+XpckfIbLD9kHCahKzn
zRl7bRzhXOJS7bkzJHTyEq+rhp4j0FyKKuM3ISFHtrINOVVHMGMrSE24SEJm
/4nKBZAcgVmP9mqCFwnlxDsF/9fsAAUSD53PXSchf7Lkv+JyB7gws8eKP5CE
RC15NeG1A5TcNzyZcJOE6FUcIiLvOIBj1zPhhEQSevrqPUehvgOQ0hQ5z6WQ
kCSDF/835ABV3g20/C9IiGYjQ8RD0QEEBWan4t9s1e+VuD9MxAHqTIl38VUk
pPOgR8Fp0h4893Tln60lochIZSw2Yg/iKw4ZfI1bevYksgl128PV5Hv34ztJ
6GZt6ZvBd/Yg82nYJv4rCdEeNjtt+sgeOnI8Tc5OklBJXGQt6z17CAxi0OWb
ISF30j31hXB76NkmqxT/l4RMFaKm7LzsIdw2gCmejQ/d9z7ndueMPXz+LvIm
Tp4PBSt8eWQvZA/v8o/nqCnzoWt3LCX7eewhMeBy3mdVPnRbnynXns0e9Lir
CxWO8yESb4Vey7odlB12ruwy5kNPSW5Rz7/ZQczNkjZSwNZ69vQ63TI7UNtx
di6ujg9ZsXf5FdjYgcB04LxaMx+qrMw9Km9pB3MlGYuf2/nQveP9H16a2MFL
ndVlhQE+9JGjQfOarh3weKXSdk/xoUfOBnKxSnYwgWdJfDz8aLu/qbcogx1U
R4kIvOXnR2stVD3qui08OXdcyE6EH91Muwhn/trCmR+PxAql+ZEMd4WW2pQt
VHITMmeV+ZHRIOsc6YMtxF2IVo4350ca81Zd/gm2UMIRm/n8Ij+qKEiW5o62
haGKeLFce35k6eC0+2a4LUgJPaZtcudHcb2JdfxetkD58LptI4wfxQZ8/69M
zxbaUYODyxt+pBW706x7wwbmZ5oHrlP4UUSUstKFRRsQTGnXvVnMj870tb2o
n7QBq5XeQ8+p/Mj9WwU+2GMDv/K/rvd286Mbf2YTrF/ZAOsOukfqa/yoNDpW
XfmUDch2MrIa0Aoggysiq3FqNmAYzBpoySSA1MLZOdsP2EDiRx7b6zwCaHWa
5/Uwnw3sStgmlyMjgFznvQ9dHLEGTUZyvbCeABrqlr4redkaQr5fX5pNEUCz
18yqHCYuwMkkj7qMFwJIQtbqvH/DBWDXdUqweiWAxk+gROvMC/Ao10ShhSKA
fs553Ui/dAGyrym7Z9QKoKOPs2vEpqxggH7hm+WkABKdFXxh9cUS5Le79zYp
CSL67wHfD1Saw5iZfVFaiyB6O+1w8fMhE5iZUV6kdgiin8ufpmjYTGA9gllp
uFcQ0fQlKkt9NgbR/KxC/jFB9MJiV6tLnDGcY/1dcHNRENGV8zMeWzgHjeU3
8p0khNDvd0NlqSVnIU/0v9z9HkIoLO5YsZfOGaiiOM+cuiqENHJeZgTInIHW
k2py9n5CKIWDhS51wxB+eH3KeRIuhAxT31UcLzQE6ZYdOZyJQmjp4h+GNQlD
eBRAeTOLhdDX1mrH6AU9CBpuyiwkCaNI35sNZ1O0Qc7nvqafkDDSW0vZr3BR
G0a4jccIcWE0Us7JYS2lDVsDmVDzTmFU4PPlRXaGFtBkLd0aUxFG8VIFM8LF
pyDs+g4HzovCiHVfvmze+Am4Rboh5fRGGFWKPn4cG6gBh7M13slShJHjXq9n
R7U1YOIEy/n5ImFkeOhqi7qgBpzyi4+9USWMOMwqJKzz1YFl7PVmfKcwereY
eeP7TwRROX2f8F9hNBMvaW7+lYAYLflkUU0RNC/Zvjf7lipc/nj3eKOWCHqh
k2lpp6IKp92//7qmJ4Kkf8ZF1U+pAFvCU+g0EUGLtlU77p9RgdujHN9uXxJB
5n8cA8V3H4EQn8mDf2JEUOAtw8yi30pwkfXE4It4EeSbRLGZy1EC4snzMMNE
EXRE3Tn6g4sSrFWb9r5JFUHxF54mX5tQBF/Oen/bIhE0dqmiUO+bAlxJf1H3
YVAEPUiE8Hs0h8DwyIb7jRER1PTdTyO7Xh7km88L7/8igmxPtTfY3pOHmVke
11u/RJDJAN1EvLg8uBwN5iFviqB0HvFHI+FyYNtlYZElI4rEsw56/mewH9Qd
ShnM9ooimgfrnvQz+2D7MimXUU4U9apbXA2/tw9GJJppbI6Iou3ml46VfdgL
FpdUMoR0RFH2kJxntfUeOEcj8DvCQxTx+Cr9l1+4EwKv67AnXhVFdoE3grIs
dkL6TPDON36i6GHTyof3DDthcXjqfGe4KBr0q/hz1lwGEspxjUTiVvyTPn0i
aQf0erkllGBRdO6Yymp88XbYmEzNbaoTRbvaIyqD3LfDLpv+xuFmUVR0y++z
3Z7t4GOgsU7XK4oEhlT0dxPbQFBW2NFgUhRJ5RX+ijooASbfao/84BVDiyfe
OhU5i0CQ5cqZf4JiSLksKOzRX2HI6JZz4xIXQ3yP9h2VihSGpeqk50q7xFCB
2iNWyVwhePTUgzVUTQzdpjvYqcQpCFUCL3ckgBjqGHvl+TFTACaih8ivNMVQ
hhYrwXRSAA4HnPBq0xdDUrJhD/si+KHfVOyjiJ0YOup/e2GCjw9oPhj+kXUW
Q+4Ngw8V35Jgz8lb3OiyGDpMeuU+bkcCX6Xfxx2vi6HkN/TvDcp5QZi3Ibvg
rhiKXhQJp73KA2bNXkG6RWKIklW9rK3DAdInniwyl4uh6/oV94hmdvhFrXN5
/04M+atryuw7zQ4hxcKm5AYxJCp/JbvNmA1ePa86eHBIDLFknpJ+EswCnmI/
Xv4cEUPv4+1dnnKxgNojXvHML2KoTTEl0ekZM7TftWeRmhZDZT4lwUfqmWDJ
h22cRCOOYu8w8crtYQT8W9H0A4M4Sl1TaWt4zwBRblZtd1nF0T9dr4v/bBlA
0pZSzsAnjpJn5JxF0+nhhJ5J3NJOcaS+d4dHmgodJOx4cXxIVxytxj7mbT69
SVx42lL+yFAcTbf5hZoXbRB7RP4cPGssjoZyK8YCJTeISi4t8dYL4kjffvy8
0eoa8WVlevHdFXG068e+f+ofVonsq0Ku/j7iSFfn0qatzirhM4vGDweIo2vR
o9DesEKwfYtvy4sQR++r3traNC0TCh2qGan/iSNXkaje2IklYk3HTvzCk639
7laXi3gvEfV10XGiqeJoD2OL4BvaJeL829Gg+CxxJGchTWqU+UOEZNw0vflO
HBWV//gmELZAfAjsZLn0RRwdF/jCkBo3R3z+2DMb9UMcNX6mG+FRniMW1Qb6
sqfF0f1bbkHlBbOE6MpI+txfcfT9UdHUB/0ZwvHaL+TLIYFm8mnqPlJ+En49
s7uTeSWQN9vd+ne8P4loxQWuSkEJNG05vjx0bYrI/70yvLldAl19OxsXfWqS
WLvM7HdbWQJd8/4vA7i/E9xtbNav1STQvaC5t26RE4S0LNepFpBAqgW+yQ4M
E4TWFL8At44EuiQa2nyL4RsR7yid/+iCBBKUe2W2S+YLse8iefLlbQn0+Xfo
/c/ZowS5CnU0REugkCMZ7WemRwhDCc3SyQcSSNI+TPbroRHi2kedmweeSKBl
NiFLqYZhApuaSRVTJBDv3tnjg9uGiO4SC5b+YgnEaeb6US14kJgQuDi7XCGB
IsNiWHZ9HiA4ehzeHauT2NJD4ahRQT9hauh9/v2gBAqNaOGU9u8lXPJ80MSI
BBreVkKeWeghArn8d7N8ldiaBwWL3nn2EC9aQ/7ozkig0qLWpD3e3cSMVsyD
bjpJFEtrIRad1EnQZj7w/cMsiUJfcDi07+0k+JkfXhTilES8U7P0zyo7CNW6
xwcshCRRztAzEdfuD0SE+uumz/slUcDEsFoybiXqkzSqfslLoiPb5qLD2FoJ
lvmPBUvKkihD2kn3oVkLcfcF1xM2JIn6RYR2faZpJuLor7ornJNE5/tOLDYE
NxA9Fpx2x85LovYocfe8H/WEQFGG6ckLkki9USNazLieSLQfRObOkqhqQGtY
WaWOeFZH8IUFSqL/NVDe4Vh/YRgnpTRlp5/3/Y7QfO1CzvGUkVF2IXslMiO0
KbOQWTQRMjKTIskoFUmECpXsFaVIhN/757nOdZ77uj/3/Zzgs/FmPuK1uFvs
4/LIIAZ8sVOfPptVgyk/73+JoQz4eMrU9RyrBmdKpPdnxzAgbbA8h6lWje+H
8TxuTmdAQ//yreaiz/D417T7ndns+fePWJjvr8TSiiqp/fkMaJaSxQYXn+IH
Qx6X/j5mQNTgnsTixSe4XLvVkmxkgGXa6A4LqTL8L9XdcFsLA9bRb5MYoY8x
muXWVPjAgFJmk8/yb49wVY6SlPY3BnCJv/MfSSvFL1fd4fSeYsC+1+Nr/E1K
8ApHxelTswwI8+T62Pv6AdapaB4JXmTAbVdVvud7H+C3bktbk3iY0BQkpxSN
i3Fro0tmlRgT3AoUJ7dZFmIhCa4b9RQTIo6yHki2F2CzczevtEoywTb/ekPh
33zcyWoKGJJhgrC3VdIRwzzcc0Vel1eTCTnh5lFvVXPwpqFGVVFdJuQZ3TNv
DsvGTuAsv8mACcSq4b/RrVl46EeymOJhJmzQr13+6vQ9PGG4OGHjwYTeotIq
6YV03JIXCfw+TMAytv4jx9NxKY9obJ0/E8pVLm3lGb2Lz1TLy+4IYsINn9/7
JPvT8EoZV9/ZeCZUeaz9/nEhBY9H/nmel8T2s6xZIicyBTcPBQva3WLCJvEz
iwfEUnBSyp3Sl5lM+G9gf8vVqNtYgrdtJqGMCf6pQak13jfwSjd7ba1KJuyK
GjTje3Qdf385kTxXw4QfoZdZvJzXccn5lbvt3zBhvadIbWZaEt47oXpW6isT
VH+t9zTZcBVL6DY29vSy/XJK3xAPSsQ89w4zrg4xoWXZ0n+tYwn4nfWJZ/9+
MiHZz7veqykeSzm3cTgtIWCjwmLrlmexmBD8L7tyKQG5droSfmqxmK/W3lBk
OQGrj2wynayPwdOMH6kNqwjYMZ4obFZ3BT9tX6kmK0hAdWitp4x7JM4PNhy9
LEyA/jWxG9npl3GKbFJ8/wYCQk3Hxa2/XcLB0eJ9SQwCHr24Uv3XJQLrakLI
oiQBbw0+l8SWhGKV36E7zLcSkEJ7CZ3jC8WstMa24u0ECIdMSZb4hmC+hcMS
R2QIyOMSbIzRCMafHp54+UaZALdT1TU7hS7geocKTwlEALPjYdHV+CBcsZ5L
JFCVAJWAxE9+AkE4xT3mqJw6ARfOPe6zIgKxs3guz/UDBKQZN/d2VZzB515Y
u0oYEGB7n7vS/9NpnODE11BsRMDhhmfaNf9O4aqMk5ENpgQk8cq8zD50Erdr
7PhuepgAibryY6ORAXisv/tAnyUBn+cfiki89sciElrr5u0IkL7DKOky8sOs
ujnPCEcClnPonuROOYHVjxS8E3Rm60f0DwRP+mLvTKE4lhsBXdm8CwOZPrhe
ol/A1o+AThNFZR1tb9xdl3RiLIAAFkN8ZuNTLzx9ZH97wGkCNHsfdm5R8ML0
vQfXYgMJGCsufztv74GV9znPiF0kwOBq3lrBY+7YYFDUPCeEgKOxxY6lp9zw
GckLorWXCJjuDXAtL3DFcS8VTutHERDPm2BV3OqCs5yHOzuvsPPOPNdhzeGC
2+4Z3PqdQEBtGk/EumPOmLWZSUjcYfv11ThRGO6I1V+1BBanEiD/w/Ec/cUB
Hz4a+g2nE2BhmZvbreiAw7K+p5lmE3BOTmzNjXk7fFsrlasvl81bn79e19kO
lwyZOHrlE6Co5pKf12aLuzdXiEc8IMCfsPgwft4GT7/yDBUsJSCqrPOXgr81
Xu1CD6Y+JmAXQ0P0rZ8VVsq+lFX+lIB9adJjv6MscNwW821jLwnQWOFHXRU0
w1mvV0cG1BPgQlX3NmuZ4kqXqrGljQR06Ladjb1wCI9mS+aLtRAQXLE04f2K
g3iJTufanFZ2//9bqz9lYoJFRqI9d34gwOGB8oFPmcZYfeu0tH4XAeua0GkF
CyN8uD47tvMLAT42axNMnxpiL1erSedv7LxDDhRe2WSIb+Y8fxA4QICJw4VN
dzkN8NTW+J3FP9j8NnIanu3TxV1vQIP/FwGNBq7PKzh18XOPcWPfKQLUmjmT
+sV1cFyxtvfOWQLIJ0PdEhe08EmTP+ev/SPA7GB0clfZPmw7nR49s8De38tB
EqV/NDFLmeN+ORcJejPJP8RCNLBgV175Rm4SeFd4/zBuVcf/zlq8PrOChNNh
tNL8ZnVcX106gNeQUM2otebu2YuPaLuTtUIkXGcSFeXRgA+Mikpv2kBCW8aw
oc4ywPJRr3DIRhKKG3OqNDhU8ZJm2nIfQUJVXtiw+VKEh483u2ZRbH2u4GRV
PhX8TuD8SR5xEh6N3nepkNyN75h1XG3YQsL3dafa448q4dDZsIzt20kIZF2u
OxeviD1uKpREsUg4ps/lTL7YhVW6Y5r15UhgKXNeerZ7J/7ovG91qwoJsQmP
zdZ4y+FnPFOiCqokmG3hajF7I4szc9O2XN1DQv/Ibbm+7bLYd2Je00yThORd
YanC89LYIjb3YJkWCTmZdhu93aTxXjlzR1FdEjJ4+GM6qqTwev+SoC59Emyo
vfUnc3fgGRH7GGREwuszEczEvO24u3zdndsmJEyXaGd8ebQN5y+4Vtiak5Ba
pLVjrncL1gkl//TZk/CudfXt8ngJLLO5aZmmE/vcKNaS/E4ci9SfEbjnTMJq
2a/v3vOL44E1H2Vc3EhI9F2yOfo+jRsLQqDegwT9FGXVPE4alxjK6W/zJkGo
e3WEoyWFLyZGu30/QYK9svv7IZLErrtUTusFkBAfXVBhE0lgo0/DEQWnSOjq
+rQ95A8TE2Ia97zPk5Bprlxk0SyGK9Lnvk2Fk6Bo+LmZd3wDVlbz/aNzmYTG
aPPiyTUbcNm3sdUpUSQsW7zcQiuI4FLGl106cSSoRbgXXkoSwvJPDx24k8Dm
pxCjZNAqiB9YNNn/vkpCKXw6HywkiAuTqqJu3yBBXkB6zjWPH7N2Kd39dYud
d3zC9zJOfpzXVvRYK4WEwQezHEUWfDiH727vZDoJstyZEt+Y63F6ZIjSvnwS
VjU9cJR5vQZT2xb0bhaSELbefE9nzWqc+trP8WcxCblagYLwYhW+zX30yo1H
JNBE2EZGLw/+L6M7/UcZCVu1dpxZu7AC31AzL9eoIMGlSG59FrECJwXq9E9U
kbAwWd/aeZobCzFrZ9VrSQjWSDCdf7AMJz7dzXv9BXue4kJy++RSHDe7fbd6
Pbt/6x4Kvb/IhaN818UmvSdhQtjNXOM7B17NH575vY2E/D0V7i4HOfClIo6K
vR9JID9dFnQNWUTh4z8HxrpIUHd8kswym0fcUa7/9nwlweBJ8KpH+v9QyLbe
9de+kZD+taxE3WAOXTjaqrJngIS5yfNde479RRzLDxhdHSJh/5UCJyJkBp3P
eOE8OsLer7ZioZ7MP+hMT2lc4gQJR1fx5i7jnEZ+lslDwzMkdPbM23Pw/EK/
Z9cv4Dl2/kr7dmy0mEQ+yZf4E+bZPEOKvZQf/ERe7acxXkLB9L/gsTLfH2jc
97dx/FIKkpb2L/N6MoHc+d1dhrgpIJWOuYxdG0euBtYJcaso0Oea3rXoMYaG
xtuzB9dQkGG+5crw0VHkHKX/TIWXAquA8Jdzx0aQYz2MDAhQsNLH+LpV5BCy
VqdhN4MCsVO/uFax+hFn24q1tQQFrVCwOc+sD6U7jXfq0BS8Nt4g7Xe5F42E
lvkf3kyBTtTggM6KHhQlfEejZysFNVENts8NvyHprGB+1x0U5E20UpDWjfxe
6xeclKVAe4fl7LH8L2jDYYWznAoU7OEf9nfw+4wqRkR1I3ZRoNrv9sZJpwst
WT0wkKRCwWOjYqEagQ4UrXeG8ViTArO8yaUqku1I5qvdmKo2BZ1bM1e+VWtD
rZ77yl/qUpA8ZhmJXFqRaCzfoQ8GFHR72IjaNbagp+QMbWNMgemHJSPHV7Ug
2+LPPwcOUrBuxWSwmGEzynyfFTV9mIJ90po3pfuakLZjtMU5KwouxE1ElCW/
RWO/fbZw21Lg6DDYpG7ZiGSFVF8IOlEwoRth7crdgCrN2v7Je1LAVSctJdlT
h+yGy+srvCngvzDj3zb5Ai09lZKk7svmpa8tt3zNC6Rz45i8yUkKukZlbgRa
1qLv2wyXdJ2m4E6HT7lQbA2Kqdj5zuEcBRLCcz/fNFaj9s+cbj4XKRjkPf7X
3LoKnfQYVJoLoYD7t/I7aYdn6L/FN8svhlNQveb6yGXhSmRPJN2Ni2Lfm+3y
eHzvCRq3Z3UWXaPAuWfNcm6zRyj2F3+20nW2nsOp9S42pUg++K9f9U0KhIdn
5L56PUSnMp7zNaey+9cXc+h44QMktjOn2yydgswUmfymz8Woqu5KfncmBbva
V4VU8Rcj7qHDOj9yKXhla+e6NKkQZQeASEA+O7/vmhucGwrQfh6JgcVCCkbf
/2RZnshHcVt/Bq0rpaA27haunMxFTPewMlYVBcMlFzTPB99DcYtHFC7XsPub
REniq5mIO06zaPA5BXq+e3VYRRlovHRZdsprCnb2zSipc6Yje+3+TfMNFPQE
jPTXKNxF7Z3PU8zfUnA2b9580/E0VMkRnMT3noIrForf7DhTkWy8g4BnGwWH
BBam8oxTUKa4WkzDBwrGE3u0TprfQdE6S8KDuygQiL87tbvvJrJOCPSf7qcg
IkZJqjA0CbVI2P4yGmL30VWCW+zSNaRZpupZMMLuh6fjpM+1q4j1ZeHI0Ql2
P3zsL9u8TUBpXl96nv+kAFunfVL5E4+EuCqtyd8UZPX9womb49G85NlDHTPs
/lwbmnC7G4u8yi1bds5R4JSfUqo3FoP69qvoxc9TcPf3lKGXSgx64z2nsX8J
Dbc4Iivze6LQzScnFSpX0UC9E3NbcSAC8eqZF4mupSGhR31AVT0cBXcr7vDn
pSGYlI/k0QxDbstmNkkL0tAhzSdQ7ByCuq99SIkUpmFDkemm+tBgZLL10X/D
G2hYEu3lM5B/Ee3W9xNIY9DQFfrMuE7kAsr/djBmgaBhW8OlG1/NgxDlq7Da
gqYhsCFNPystEK1M/s0lsJmGN9cDxrclnEMdPcd/hcjQkC6U8Eyz+STSO2Hk
2SNHw4BXNrOuMgDVLJcdxTtp6K3t5nR95I9ytv/s+aNMw321iVqbVycQ49k7
axNEw2BWd3LXV18UZ1jYUahKQ8BSscj3HL7olJ9niwv7D7ubURRYZHUcja/Q
16vTZOvReok9Sd7I/garntKmQYHmSCe7vJBO1ffqzgM01Ky80sT9ywNVGjUi
RQMatG4JPBHMdEey/ffLEoxoWB6cSL8/4oY2rHQrOmBKw8P0fx+2r3NFWWpn
T/0wZ/MRMel91XYU7TwbrRZvScPRwKCYhhxnZPSjsO2jHdtfeukev7NOqHtL
ze3TjjSoeg6/HDrpiDwc3jsznGngf/PB/NAFB3SpfeqvgxsNzj+FwxdL7JAI
7/Jabk8a7g2+D1f8YosytUUis71pkMsv7Tyy3hbVVCgzJvzYvJtUdj2UtEIG
07qDsSdpuN3uqBXz3AJ9kbIqlD9Dg7kGb8yU92E0m3Z+76kgGl5p+ns7zpmi
8K6YVWLBNNh+OzG0rP0QEhJKa30WSsPXDbzXbCsPItmI50eWRdIQmcstVffQ
GFXVtEllRdNgU2m8kF5rhPT+DczoxNKQL7wo39dliI558lyOuUrD4+PDecel
DNBslqiJXDINLsdOsGKa9FB4zzax9hs0cJadduI3PoDSD+oVbEylQTh9hY/s
FR0ke8UmoPIuDbN/9mWyNLVR1SuvPXaZNGQ/zRWtXa2FunbHv8/MpaHM1O3t
xxcayPVE+k3tfBrOCA5mcDxSRzP5D53GCmlwf3NWYc1DNSRAffwjU0qDR9Cu
RN+2PSjNYriq9TENx5cU3iqcBiSdOBvh/4SGjTnRcvEUoP0rxP57WkWDf54d
uieNUMceVr9NLZtvN4sMq9mNjp5WzV9SR0Prs6moOSdlFDxuB1oNNBiV8ZRY
fdmF+Db78Iw20mBfYM6sLtqJUuyCW6Le0aDk/ujW3XgF9LQ10/F9Gw109eUt
MoFyaP/axzv8PtIQIq9anhghizr2vZ4W6WS/p5TyR2/LoOny0XDrbhqkPKwl
rdqlUPDvf4acvTQ8OjPSJbqXhfhYazem99OAl2Q0BlVvR6xU6bzhERoqORoy
rv3Zgio69vhFfqdB1yZQOPz+ZqQjYKwq9YOGn08aO+56S6IjYSeafadoECv0
CtHbIo5+V4VeF56hwUlxodpNdBO6MHvNoXyWvd8eGRKtIjTilc/ebjXPvn++
oPmNptBt9/KpxUUa5qKQ04wyif4HKBUbxw==
             "]]},
           Annotation[#, "Charting`Private`Tag$9242#1"]& ]}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         PointBox[{0.31249999999999956`, 0.02}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{-0.7976449792707256, 0.02}, {1.4226449792707248`, 
          0.02}}]}, {{{}, {}, 
          TagBox[
           {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUl3c8V/8Xx+09PnzsvZJokJVx7/ttZwul7BBCiewt46uSrIQkKysrIxE+
18zI3pJQhDISQsbP76/7eD3OeZz7POeec973LWjnbnyLhIiISIuMiOj/T6XP
Xj+Pj/FY723ruYqVJHSiLntd+x8es9Ekt+p0TkZ9Uvv+JO3gsV27Pd655WS0
4qrYwelVPMb/OPuC1fYzVGTgM53RFB5zyJBsjZRORZvLqJjSR/EYsiNIVdST
ilo/kWX9PoDHzlgPhDs6paGpOk95/T7iMZF0Gi7i4nSUrl31fFY1Hns/SjPL
Zf0SLcp1v7hSjsf0SCrbXVkzUc0HGXIyb/DYyHKJDM1gJhoGdtDObDyGr9Mp
6hLPQrfrigw34vCYfX6bpFlPNpqYOmai+AiPed8bX3mlkINK+pJej4zCY9Ql
j9QCinNQFxkrW44gPBbx42kvX3IuOlOG84C38ZjpdPbuaMxrNPAJ4v3IAY8t
0VtpXKfPRzncXPxHbPAYIf9r5kpyPmp8pi3c+RoeCzBckY4qLUA/5vomxqvh
MTVG4Zk4imLU4UFeyhSKx3geWbDFvi5GSW4Oposo4rEC74X35y+/QZX5JHLf
S+KxLmKq2HepJWhF6kzVLC8eq5JX3hC7XY7q+9K+F+fEY8T/1SUM4yvQlauX
GrxY8JiTUrgf4l2BiuAT26ho8djk24lzLehbNPWJxqjkLjPGnRq6sbFaicq6
eU4G/GHGKOROhS3aVKFDOq++tK0xY95Gd1/eHalC6aj2Fq4vMGOkdZ8T3dur
0fAHJTthQ8xYaHWNz0jnO3Qs6PjhrV5m7K9ixWCSZS0q7mvMq9PJjF05vi2z
8qcWHXLdVcM3MWPG0XrY23N1qNBV9YTXRcxY+Y8Af76BD6iP4XORR3nMWNR8
rS95RAParb1Se/cVM8Ynv5OopNiIeqLxM/LPmLGC2JR/+zVNaOvpaYnuMGYs
oe9H+PgmhnIIXSCUBTJjCganRvasm1E3ngfGST7M2JfXG1Rve5tRFiYxf0s3
Zuzt3/H/uKpaUIf9+x1rZsyYoU2VXtKrNvT9VseNYWNmbL++dh8v1I7SrXOu
1uozY0+ZXom/KWhHq78R8OFqzFiAYGa2Q0MHSt5LexN/gRmzFpcLZ2DoQs0/
Wm/9PcOMyZMba+u+6ULLmt/+Ny3CjLmbPd6T1+tGr70zK3vNxYydNdEp9U7r
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
8s5rXEoJWuIteze/lRWmXjt8XUNajHqePodYdbLCsru5GsC5CJWfFKFj6WWF
X17L+GsNFKItyizF4WOsEP9V+Wd0cQE6QfpnwXKZFUb7On1pinqNZtasVOPX
WOEwTSO/PNlr1N5pPqJ7kxWWTjF4ZEbloWvdg4KXDlhhUlCN6V58LkqWWGGF
Z2SD3j6+imc7s9FutcKz3Xg2qP31fbqjZTb6dPvVvzAONlg/fT2T7U8WynXj
adqaIBuUc+eoyDqdhUoK3B3tkmGD59ijHSfNXqI7g7fywhTYIHvz8vPWvAz0
Q4TVfXmUDbbeyljr2X6Bav7QY3qtxQa7bw/emcpNRy3LJPTDzNngVEefcfi5
VFTIVphH3oYNlt652/Az9Tn6g4n756o9G0z04dL+SPkc9fSmeWhxhw0ys5I2
R6w/Q2OUl9vkwtigJ1FaJ8VCEmqwNpu0GskGn98R+vrzdhKKz5qwy3vIBvsc
Q50qfieimaSdRMxJbPDIQ/tUCnUiWt2dr7z6mg2O8CmI89yIRwOCMmnzitmg
VIG/YOTiUxScT5kyL2eDFGRsQ2n8T9HuhCi/zvdscIBtOa761RN09rpDdW4P
G6z7MaTcNvIIXVuT3SIMsEHVFNLuML5H6GEkpcz06In/MtfWsttDlOttcRXL
LBvce0KTo8ceg5pS/66M2mKDvqKFUO1VFGr3qmUze48NLocfehvSRqEesskX
m47YYM9bt1fnAyPRuJvylTtU7JC/+tUcmWME2lkX/NaJlx3SeIdFPboVjo4Z
Gv6OEGKHQSEKwbmrYejCgoBU1ml2SESRvvvZLwwlYW6rmJBih+mE8Cu1kqGo
sgtNhbYmO3x9K9+c9E8gqkM0vX5Ll/1kv7evH0oGojdSSi88MGKHbg9j5XFe
AahPi1F5vTk7vLHI/nqXyh8t53peJuHODvHknHp3XXzQpgrnNS0vdtj3WPVX
Ta83+klT8byDPzvcmlV9LSTrjS55finNiGCHY+7zVceMXqhQj3ApfSo7TDL5
+Xl/0wOVvLn968xLdpjXPXuU6uWBgr8dZzVz2CFX1gu9Z3v3UEthl5KQEnZo
y6Qga0R/D00JrHizjrFD1tryesoqNzSP6cFP2g52eNlcdum/H65oVYGJhFgP
O4z64tMSIuiKDgzvFNuOskPz6k0V+Po2SnMWKR5cZoct+oPXjJccUY4WhpXV
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
sUkhgZ87/qepVw==
             "]]},
           Annotation[#, "Charting`Private`Tag$9280#1"]& ]}, {}, {}}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointBox[{0.3125, 0.04}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], 
         LineBox[{{-0.6875, 0.04}, {1.3125, 0.04}}]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Probability\"", FontSize -> 14, StripOnInput -> False],
            TraditionalForm], None}, {
          FormBox[
           StyleBox["\"Trait value\"", FontSize -> 12, StripOnInput -> False],
            TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       LabelStyle->Directive[FontSize -> 12],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Time t=1\"", TraditionalForm],
       PlotRange->{{-4.999999693877551, 9.999999693877552}, {0, 0.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {576., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}}, {}},
  ContentSelectable->True,
  ImageSize->900,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.7187170207142563`*^9, 3.718717107695266*^9, {3.718717273459364*^9, 
   3.718717292575947*^9}, 3.7187174697085857`*^9, 3.7187177425759697`*^9, {
   3.718718319349058*^9, 3.71871832853012*^9}, 3.7187334460766172`*^9, 
   3.7188085380065203`*^9, {3.718808609607501*^9, 3.718808630390555*^9}, 
   3.718808716427579*^9, 3.718808840936462*^9, {3.718811518589789*^9, 
   3.718811539106632*^9}, {3.71883087639846*^9, 3.7188308876780577`*^9}, {
   3.7188315395586653`*^9, 3.718831636856647*^9}, {3.719081599415312*^9, 
   3.719081615090671*^9}, {3.7190816617223063`*^9, 3.719081667403246*^9}, {
   3.719081812235379*^9, 3.7190818278036013`*^9}, 3.719081889727558*^9, {
   3.719081926246151*^9, 3.7190819477632923`*^9}, 3.719081982062501*^9, {
   3.719082048656259*^9, 3.719082102324141*^9}, {3.7190821360607023`*^9, 
   3.719082165837604*^9}, 3.719082197829417*^9, 3.719082250633272*^9, 
   3.7190823060575123`*^9, 3.719082749771954*^9, {3.7190831199886227`*^9, 
   3.719083136605283*^9}, {3.719085926687276*^9, 3.719085938556262*^9}, {
   3.719086015793054*^9, 3.719086032089575*^9}, {3.719086071928133*^9, 
   3.7190860850081778`*^9}, 3.719086124803211*^9, 3.719095506465527*^9, 
   3.719159797081622*^9, 
   3.719159950232328*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vQd4XclxJfx+cTickSXLkne96yBLtiUrSx7Jli3bsq1oW7Isy7akyTPM
RA4EGAECBEEEEgAJAkRODMgAkXPOOeecc84ZZ6v63b544IAgR/9+i+97AF6/
e/t2n6quOlUd3s+OW5w7bXTcQu/k8c/+s/lx03N6J89/9scm5lR05P/TaI7Y
azQf+dpnNfw/NBr566kfR/71geLfoLRf/DmC7e1t+Ynmdw8oe1kpw+4OdnZ2
xbuXZBl2sLW9I96JqyOUD7a29ir4lM7F2zvai48pZTv0oF3lOlnpzs62+qBo
bVtblI9WJvvgdc8FtX0Tmo8olS+Pd8HHJwTj8xuinrWFCYT734O1zTXYOdxG
QmoavO7fQ13fJHobSxAUFoctuq6rOhv2dE1QVBK/PyKq+0Nq5Ard7omI5CLZ
Mkz0t8D9tgOuXbuG23e9kJ6aAA/PYAyPDiLQ1xN1/VN01TYqcxJgb3sNNtft
ER4dBS+/UEwtUeU7m6jITcJNOxtRh6tnILpHZ7WQBSh9628ogLuXD8aXt5S+
fRK9tTnwf5Qi2ss/kz1N8HBxgPU1Gzjf8UJKWiLcvf0xubqBvPhwJBXVkZy2
kRf3ENesrZFZ0ajA+odYnu7HvVu3UdLcr9S2jcbybNEoG6rPOyQMSdGPEBSa
huG+Bnj4+GNidRdb64tIeOwPG6rv5q07iI4KQ3B4BliQGytzSAwPovuvUcds
ERCeiLmVDU3UfrEt9DfA+Oz7yGjsV7u20FcLc5Or6J9YFY0pTX2A42fPI7+q
CfXVxbh+2RTvHDdE5+QSGvJjcfmmO9bpukfOF3Heygl17b1K1/4Ik1010D/+
Bs5a2GNieUt0LcT5Ms5b30JTWzuKs57A5Mw7MLK9h4nxXliY6iGndRQbU10w
1zsJt4BoVJYVwPaiEd47a42JxS20libj+IkzCI7NRGNdJZyoPaZWbphb0wrD
X+lbc3Y4ThuboWd2Q+1bY9ZjXLjmg01x5ToC3KxhYuWKxvZOFGbFw+DMCZhe
csbq7i4eu9vD+0kutpYmcM3oJG57PcTAxKzat+q0ULzxq/+GnWeEFvK5YVgb
noJrQCQ629sR98gLx99+Ha6PM9HXlIuzZpYYXgF6KpJwgtoflVqA/Iw46J9+
H5fsQoR6xAXdwQkDC2QUVaKyMB3Gp07gbkgy1x/5lOQGGmFueBpZTQNK736H
pFmHC+dtMDCplVxJSgje17uIqtY+rK5v0ZMzoK9/FeOk+Y0FT2Dt7Il16qn/
9YvwCSs8qnQs47EHLl6+BktTMySXdQnzEOxwERdv3EHf6AS2yFSkhd3BFVd/
zFOnL1oYIb9jHDMd5TA1uoD+2XXx+M6yFHqcFcZnl/H49iXY3gnBpjJyp4Z7
kJ6Ri7nVjX1Ca8mNgr65JXrnNtRuNeWE44pdgCo0fxcrmF/3RP+I0pbguwRg
oPg03NMRfgn52JgfxWV9IxQ3jGjl9Wnsbi7Cw+4y7OztYWp2BZ1Ta9haGIGV
/gncf5yAiel5bG8u4I6dOYJSyzDYWgBDy8sYWQMq4wJwkR4ph3tSoCuu3AzB
yvwY6cYphKZXKJ/soK2hCnlFVdxczQsL7Sp6J1a0VnJuDA883WBpYYErVjR6
r1hCz9BWqL6u0ALsLsLrUZ7s3fbKGGwsDBCbU4/koNu45vYAWwT2WHc9XB1s
YWFhKSycpZkRbO4FqYIr6BzHSF0ujA2tMKIIbqAmB8YGVhidWUDQzUswNDkP
W1tbcb/dDXs433ZDz9SC5oUkd/m6N7VXC85oRwNc7W2pbxfIUtrigqkhrtqH
fEByV0hy+TUDsm/jnaUwNDRDfWsPXK6a4VFqJX2wi7qiNNhevYQLF0m5bG1g
oHcaDzLKVcmNkuTyH93DlRuBkF4v95EHrEhyC5ODsDY4DctLV2Fro7X+N0gz
7vs/wOLOi0luoAHnDQ1Q0TMpql6aHUNlRQ3GxibQ39eLzOhg6OlZYUxHcqzD
QTcu8XCTveuoSIWewQUMLGxiiOyEgb45OseXMDHQgdqGFkxMjKO3ux1B7na4
esd/n+RG6/NIUlcxPKOVXD+5Tpbc+Bz5yjtWsLBzQQvZtq6uLqRHBeL4cTN0
Ty4/X3LNOZEwsbTBlLZejPR1oLqmFVOT4+jp7kTQ7eu4ZBuwT3LbZCivGhih
qGFE67P/WEgpOcQNF+y8xNjJifCExbW7WNrYRGdzLVq7+jA+OoSO5mrYXjJC
YFrpPukVkCnioS/HXc7De7hK0ltdnMR1s9O4ExKDzs4u6l8HfJ2tYXblHtZ2
n28rPyk8H3ueyzduIywsCoV5aTA8eZJIRxra2lvwyMsJZ4wJgNVt1OdF46qD
OwZHe3HzvAnsXILQOzSt1EW93N1AgDPpoPsj0dLd9WncsNBHUEIpqsgLvX/K
COkFlWgly+B0xQTX7z3E8qLO+CMyoXfmIoamtWj3VmaK96w4HZVpOH1GH+HJ
+Wiur4T9FXPc8HyM9e3d5wjxk2jOjcS7774L1/t+iHqSgtSYIJw6aYSMwiq0
NFbBkTzn1duPRT3s7XyeZKKjvhgmp88hMCIDM/OrSl2fJrM0hEtk6cIyq8X1
033V0Duth/KWPjzyvA6jCzdRRdpaVZQOU/KiETm1GGrbk2Tug7uwvOarSjIz
mLTimp+wmIkP7uGs6WXkldehvCAdJvrnyKJWPk1WVoZbhBhzWofVLq6M9yAk
JBCB3u7EK+1Q0TqIlsocON28ARsa1nb2jsgqbRQOmjlmRFwKKkpTYXj2NAxM
LyIxq1api+jt6hT8vO6hoF6Sof+N8owIBEalYn1jFZmxj2F33VbU6+jiieae
KWwvDpD1NkJe+xhmiJt5egZhalHrqSa66+h9sJZo7m6hKj9ZcDpraxt4BUZi
cnFNXCd5ZntBjBDhwNKO2r/+unwEBIfAw/Um7OmZA+PTyE4IVdvh7HoPTX0T
op6C5BjqayXiI3xxmlTZ4ooj6jvHVRFOkb1ydfdG36TW0+xuLSMq2ANpFW1Y
nRvHI18PMoVUL5l6D79wTC+tY6ApW4hweGUXjXnxCAxNVU1pbW4cvU8XZHxz
bQFJEYF0vzWZUjtEkrqube5IETaKP68KjjMy0Ifu7m40lGTA6NwpRGSUkEnp
RnfvADa2oTT3qIw01J+trS3NEeWzuakRNHf0CvvibXUenqF5mo+Jz46Jsq29
MIl4WS8szQ2R3TTILVBDJiUS0tpCP/HvK9jaWEFfdxe6e7qRFemLc0amKKpv
pwZ3YWB4Qtu2l8Uz9rdOPFP348GeDvSNzWJjdhiWNKAKGodlC3d3ON7au7+3
PhMGFpfQv7CptpDjr+39sZYK4tYC7tpdhaGRMYxNTGDEf42NYWpiCBMahkMz
q5qPKkDV5MTASjAGoDo7EQkplWTdtY/YnO+H9SUi9jSeRDvClAfMjrThkokR
TExNYUQV8wNM+EGG+rju+lAwm1d1uvqYHIBvXB52tjYQ//ghappH5DMGm3Nx
nrjkwOKWJu2DujA5PorhkRGM0Gt0dJRe/P8wRohmbm7vKt04grWleYxPTvMw
3otad7YwPjKKpfVN3eZTjLy5hlGuZGSElImqJcrODxgZHsb41CwLTsIzPz1J
Vm5JV4wqPFvrK1TNODaJDShNx/6f/2sR///b0nTx5wip4TY2lUFgrZSxUDa3
hJHWfFEp29zcEPaT331FKdvZ3pKDTLOslG3TfVJlrdXrNtXUwhfkM6i2zU1h
IzVfVcq26L0yIjSf1TbznPJRVWY0gsKT2exoPifKjmGgtRLOxNacnZ3hcPMm
btLL9rodxVQVyu0vi8c0l2VR3G9NRNoaXiHRFCNuaqt4BSuT3fB0c4ITV+Gg
reIGWVW/sDhQTPLnytOXxrrgedcDfdNLms+rNVOAXpIpMgpWVlZw932MsYU1
+fF4byM8b98UH9nYOiCD/A81Xvvgj6IwPRrRqSV7YiHXUJkdD1trK1wlwh8c
lYKVzZ2HEq3tNcQE3UdmebPSgGMoSokV3XZ2chLtvnnTHjZ2TqhsGVa7v0Oj
IDv2IaytruIqce3Y9CKOviSC/Q15cHJ0IASdVASvE4dOKq5TBdVdlYX7fqFY
phEgO7e9vowMrtb6KqzIkT2Oz8bq1u7nJDSkP42lGXC4roXG4bYHGnrGP6d2
ZhGPAn1R1S5d+MvYXF1A/CNfXL1KNdrYI724jtXtM/u1IPPhLVy75c+DV9WC
hdF2WJ55D3rml/AkIRnxcXGIiY5BWU2XAsMxTPXWEZ85BZ/wFNRVFuKi0Wl4
R2QKS/JniirsrM3C1doUb71rgEcR8UhIiEdsTDSyKArf3FOFhb4amOjpo3V8
UZVEf30B9E6cIo6QhobaUlhZGMLOKwzrO7L6Y1ibHYA1hWa2Lj5oaGlFSngA
jp82QF7DoHINj4ldPAl2wZ3AOBWYgYYCnDtxBo+T8wStMj57EmHplapi7K7i
rpURHqeVqc1pL0nB+2/8GlaObkhOTkZc3BNEx8ShZ3BGVYzazEicIkaaUliB
wrQInD1FlKquV4I6O9gIk1PvQs/IBnFJKQLU6OhoVLf1q4rRkPEAZhftsawj
DO5BXpQfTp0xRTpVXZKbgHNnTiMsq3pv2DZRj86cgl94ElpbGuFLUcQZCzsM
Tq8qSPwWebcZ3LhqgYyqDjk+kBvpjdN6lsgvr6Uwxp8IsSFqeyY0io68I/58
ArOTYxgYHMTQ0JD2Rf8PDI5ggwLhueEOeLu7wM3NDa5urrhkYQJ9QxN4PYjF
8rbILypeZRNjI0MYHBwkQVAtpB/0P0bHJxUDtYva/EScPauHoCd5PLD/VOld
btR9mF9zw5LCParSH0P/gj0mV7YVBMgPtZfjgtEZuPiEYn5j9/OKBmJ3E2lE
n1zd7sDN1RUO9jY4d/YsrOxuob5/Wiqq0BJfe1y+JVNYQGdpCvT0r2BkbkMq
XC/FDPpnjNEzs6ZctAVv2/NwD05WYP6YqCr+4R14hCQo1+zgiZ8DrCi2kdwp
k6I1MzsPrGzteinw7JLTHRvWheejAp7h0SlxSxsZ3DtuDLMrXFycYWJwDqbn
aXjmVP2RUsUWWZAhrZSUKo5hcGAAU3OLWnHvrJPBc8cZQwtkV3dq/lR2fmsF
9+0t4fYwTW3xg7u2uO4dxaNZ27GjorgyM4wCqHOISBWpYo2EeX1+DA+878Lt
zh2hBNeuWOCsngFuewRhYnlbDsbd1Wk4XjJAYGKRGhwkBbjgsr2IRNWBnRF8
Gxes3aDEyFif7sWFc2eQVd2to86zcLS5xD3RtnllCjcp0g1OUTJGNIrvXLeA
e0T20+oc5+NK9MsE58+f177MzWBCo6VvchXz/U0wPP42rrv7IzH+CZyvXoDp
hStIyinG2s6eOu8sj+LW9cswNTWjrlAtRLzMTIxx466/qqdCpQtTKPw9gVv3
w7G4vq35E6WL8T434eDxWCW7Q2STDM9d4myVgupLFOZV4qq5Hixv3MHA1LJ0
sKzTwY6XcIIiu5iEBBFe6J89R344lG5fVC0fidvXxgwO3qEq2H3VmaTAFuR0
V1WwhxvzoHfqDMraRkVLNhZHYWdqAN/IAvWaDyg1BeYhTpdw/3GqWndbYQKM
TG5gmkal1Oqt5RncuXYBxmbmCkofhZmpMa45BIpxVp8ejnfeOw6fx1F4Eh2G
i4Z6sHF2RUlDp9TqyZ4KWJqZwJxulkAbGxoiKDFfokyOfhWJD71x8v0ziEwp
FYzmsxKG1Vk4k17E5u4FpAUR3rC09mLyrhgQrXpX5cTi3OkTcAt+gpWNHY1E
fI1CDSv947C4eReJifHwcLCBgbE5IpIyML+2IxFfnujF5bPHEV1Qrz4qg8Lz
i9aeWNNR78IoTxiYXxNpCP4Zbi2F/gk9FDUP7yH+lHpvTFNMYaKP3Ppete64
+44UNmhzMn+sq+JHKI4bFxZba074N1nb4RGsb+0IXpQS6oEr9vdA0Sfyw91x
wy3406rekKEmRs83HVF+j45PqUz1I4p2DjSV4PzZ9+HoGYbVzZ3PyNs5bnGx
hpt/ktrQYVJuY71L6CPl/nPl9rnxbtheMYWZjStG5tclzxnrroaFqQmK28ex
MdYCC4oTOyf3dH9nDX7Xz+P4OUMk5pWju6sZbtfMcP66J5Y3diV6O5uLiPB2
pEDLAgFBQbhJo9jyym2O0DXySfv0mRTovvV5BMUUyza3kzqbkDrP6KgzE/vx
0WEdVF+l3wMYUeDZWpnFvRuX4BWeKfTJk1oamVmpkdBKC713/xEMsIWeXdSB
lnVxG2Upj3HqvffJ1FYIUyvx3VwYx3VTI6SVdqj4FpI+X7D2xgbps8S3gwkU
ERuXoCdY28beSGYrHg7zS9cxRtJvz4/AhavOQj8lm1ge7cJV/fdhdMkWlU0d
aK7OJ0mfhEdolnrN4mQPXKzMceWaPYID/HHB2AAuXlFYomHzLB1eHGnHBQMj
VLSNqU2P93LEjf06fFoR0DZ5i9tWFvCJzhH5TTsX4SVk9NTfkEOD9TQSCYjP
SPUgqCLJdTl5hauWdbixEMbnLqJ3fOULCjbz4124RGTBKzSTL5MmoDTpIYwu
O6GloRwXTc3QOjK3x8J2NhDocBnWthTZ3LAmK2ZKJMIVHYPT+5lapB/0jYzg
7e8Pa0sz2Dh5Y3lzR7H7r4oEydjQII2YbSSHuu9p4DYrtgW8w9JVbDqKEmFs
bCcsarDSxqneepgSvcqpaIDPzYsISy1V4smXxPPzY31xUt8C7aNLUmO2l8kz
mhsgLn/PLBVF+sDSSmsBJflsr8zEaaLcOTU96iDBziqC3a7DnrhATVYkLl51
xOK2GuysTvbimpkRXFzdyOdfgrGJKdy8QzG7uqWisrO+CH/HKzC7cg2+/r7E
ts8hOCZbBAoSlZ2NVRoY5H+2F+BMXlVqzMpYNy4b6KGgsU9teoK3E6lChK7G
nFHAmeiuwgUzM1hftoTj3WDBKWQz1meH4HffE20jc4pibOOu9QW4BaWpMU1m
+D1cuOmh8o6W4nicNbTG0Oz6XkCxvYLIQB/iIj1qk9JCbuGSk6fOIDoqrgty
tcXlK9YwNT6PttE51Z+woOL8SPHvhWJjYw2Tk1PEjQfR3N4LMtBy/GyvTcHK
yAAhqTWiOQsDtTDUP4ey3kkdfdrEY3dbWDkQ+3K2hdejJKXxO4jytoOd52O1
maXJITC8cAvz6zuaEEVnqjJCYWZ+EZZkUiLTy2S8M9JWhvs+IVhQqMzmwgAF
L/rIqOhWLRF5d7jfOA+vmFz1ETF+zrjsGCIyWbIbPA3v5eGFrvFlpWkrcLMy
hE9cnkJ1jmKZFOn6BXNcs7qMyza3WcdUye2uzsDxsgkismqwsbyAqelZ9PZ0
ontoUr1mrLMSpyn2qu6ZFU+ozQyFwQVrTKztKlB9HJukAdcvmuKOTyCuXrRE
bm2XFqiVCSo3QERuvdK+Tfg5XYWjT6JkjmcVtErTHuOdN1+Hg1a55NO3l8dh
e/4s7D1CyVVOoL02D6ZnTyE0q07VrQEyQ+dOnUNycQNGh3rgdMkUTr7RPJeo
xssszKBbV2FsfQudg2MY7mmGrYURbgU8YU4jeeEima8rZmdw/JQxjfN5KbPe
ujycPn0GSYV1mKKIzcfpIsxu3Mfq9p4sdjYXcPuiCWneY9HSooRHOHPOBK1j
C0o88BJmRnvgR2P+zTfegl9oykeUW5uLEyk+NEZhQyeGu5thZawH78gs4Zyk
NrG5eOhhh9dffxvRmeWyZZNd5Thz/DhCk4swOTWB/MQQCmeNUNM7oyCsGM9o
f5wzvoLG3iF01RXDmMLcJwUNqpTX5odxxegU4RGDsYkpNJVnQZ+i7ISS5j2/
V0VW7P23yLrd1rVUXH0muckzxpfQ0DWMsb4mXDA8AY+YPM1ehN4MY6ouNKUE
42OjeHjHDuY2LljYhKpEnBztbiyD3SVjvPnWSRTUd6vmJNbvNowvO6B7ZBQN
Rakk7rPIa+h/Wol4eiDYxQ6O98SslkwA9dQWwvaSJSwsLcm7mOBeYBiN1C01
60a0LDM2GOfNTOl1HlaO99AzsSjvnhnpgKvDNZhbWMLc3BQ2Lt7omVyStr2t
JAUmhhfQTnL+vE6NeSnhokYLCzNcuGKL6rZB+XFvUxG1x4KIN7XHzBKRaeXY
3oUay20u4+E9e/KhKWpihcuePPAUzvG8mTlu3AnE+OKGTKwsT/XAltoWnV2p
JlZAlKo4KZwovhkuXrCEKXUtOr1QDAvZ9c2lSQR5OFErzCnGMieTHcM8Q1e0
rdV5sKbGWly8SKTPDB6PErC4sa1qBafPkkPu4bLtHdYK2cdNMi0Pfd3oqeYw
p7jE3uU+hmdXPqeDUHFqOCwYcwoULS/bobRpQCbdlojv3yBXk1PXrUKwNNUP
D2cbksF5mJqch19UBk++KCrw18qdGxsyy7C3MEy3TD5hY2URk9Pz4p3sysbK
Egb6+zEyNsljT8pjZoJzNMNickjyHGytYWRoAAPDo9wIyZxYVydo8FMwoDp/
Dhj6+gewuLKhlvHkQH9fHyZnFjQyV7exSi2aXRDvZCTAApgcHcHg0Cgn9c3l
YzgNvrm1r5O7OmWfV8oWZqcxv7Sq00kqm5kSjyZmrNiul0TcMjrEKZEJ7rhs
5fryPJFowmNiWvMlpYz5xPjEjOAYqgpQrzkBNTA0wmDsdXxCdHxhZX3v6bNT
/F6nk9TyrXUME9cfnZhRjIHmr8SfT2BmuBOetx1w5coV2N9yR1Ofdt0CL1zy
vG2H/MZe8X5muEO97iZf1z+pnUkoVCpqJ6J90/aauOBeQJg6kTnaWgxHZ2f0
zWjXH7XRdfbiuqva65bWtRWZaRv2l+LPJ7G7Poe7dha47OCO+qYGeDtaw8Ta
FTMUEGwtjCLgvgtKWgdp3PLqHAtcoesa6DovRyu6zg0zq9vaevOVChdHWmBu
cIri/jg01JThCvkAF15GRfKY6KiAu8c9DM1vYGm0FWZ0ndfjeHHdZbrO9UEK
X6et0FS3occw2lYOg9NGqO+bER8vDTXDXO8ciloGlalJLSUxOG2MBuWaxcEm
mNE1xa2Duo08hqInQTC2cGCzLX6ac6NgYHIZo0sbamVFsYEwtnTcuyaHrjGl
a5Y3D2xgR3UG9ExtMDynzLOvTcLuihFiyfPIOtur0qFnZqtzDfGKy0Z4Utqy
v4HxIe647PJInbKf7SuHEVn8lvEltbL44Lu44vJYTRnO9O5dc1ADG4piYWx1
E5Nru2oDr1812dfA+kK+xgFT6jUTFIKbiAYeUdR8aWkJdXV1qK+vp3fa3/kl
afCO0IdvpD6RFN9IAyrzizKEL7/o3UFlx17wOm3Zy0oZZ520Lx9+Reh/hB9M
lflE6sOfLgmIMRKvwBhDBMUa8W00tOmGj/Al5J/9RB36dC+xk4hz9N4YUSm3
kVecgIb6BjQ2tqBJvFrR3NSKhoYGagP18yP876sH/Pd/+1Mtqvy+QW0J/+WW
NTQ0orA0FZEpzgpW1I8jomtHBCx+Cmyv6kKphUyB8iVRxjAEEEaBsUZH+B+C
0D9ae6lWkoYSYf67X1pKdQeVvfKCZYffa0CitER1dSU1Vqthzc3NcgW2xkD8
1gZJYT6OuBkYK3NPmO6rgBE5YxoFH1Ev20EoXeYQ9ES9bKqXLzPjy6Re8yR4
bW3tPr1OyAyEV/jZ/a2LPqDF0Qf0TKfsKP/WSun3RJdZ+fjlFWoJz8e2xPOD
YeeRgBse8bjhmQB7z0R6H0evWNi6R8OGXtfuRsHB6wmik/JoANaTcjaipbmR
VIOVtvGjSpvpX/5PvHvlgLJjL3jd/7t7j+mWiVdjQxOatVpP7pX0nq6prC5F
Sk4wHiVYq2NXC6O+RoztIwrUEnhWZ7YApOFkPljFjwrLwOWsYsIQRCnC4YHE
oydaqD2pHVd7VAwF73DlxcOCrMkR/k97wUvC7Pgo1ohu/ugLKsSLKs7/H6WT
1/lG6SE0wWmfYrOi9/T0CNX/9H4/0VyaiLMW1zEsI/v1KdhZmSCmuEn1E02l
CXSNHUbUa572JdpHpKWloa2tjcML8TshIQEZ6ZnoaO+k5vFvLktEZkbWvrLE
xCRkZ+WId8eUsvj4BGRm7r+Oy7KysnXKPoe4uHhkZ4t70draTnrThMz8KoQn
FOJuSDqs7sThjG043jK6hV8b3cFJ61AEROaipq5ZLIbq7OgU97a3d6CpuR61
DUV4GOqDx9F3EZ/tioeJF+EbfQquj34BO/+/hbX3N2Hl/Rpsff8aIYnG8A12
Qk5OLro6e6mu7peVrsfExFBxjnj3ilL25MkT5Obm7ivjCV9ZduyAMt3r8vLy
9pXFxsaioKBg371RUVHIz8/fdx2XyetkWWRk5Afu5WcUFhbqXPe/xHVKmYCJ
u9nS2oy80mgEx5vhOkFi5f0XsPF7DWbXfwh771/gXvivERJvjtjMW0gvDEZR
eQKq6goI3lpRR2RkFIqLS8hnacUaHRWD0tIyHfH/jhDLkxguL0VmQTUcfZLx
1oVg/Mo8EL8+H4STVo9w0SWGIv802Dp5k7jSyKXXorq2mdra8bJSdUR4JEpL
yvZpVlRkNMrKyvdpFl/3dFl4eIRadkynrLy8Yt913J2Kikq0t7WThdiDd2Zm
5gP+KzLgNq64h6lMb6a/khyTCZrHdPzXLiL8+bJwlexN91UKN0eXyfEWHx+P
qqqqfeMtMCCQxmHdvtYFBgahrrZ+X1lI8APhUnR7xtfV1zWIdy+J339I46kF
dY0VKKvORH5ZFG7ftcbDOGsEPTGCe9ivSPjfgY3vX+Ka7zdxzec1uD3+uRgz
NQ358PcPQXpOOSISC3EnKBWX3WJw/OoD/NLcH78084fV3VjkFlcjJCSY7D/z
H20f/P39Bd/UVVYuYz+hq6y6ZfK6oKAgJlQfuFeWHTugTF7n5+cn/JJuWWBg
oFp2TOe6pqYmnes+rZQ1a21AZw8qa3IRl+UGl0c/F4PDmrC55vMtOIX8EBft
3hQuKSLVFsl53sgtjRL41jWUC7y1g6wLD0JC0N7ahpKKBoSRLbO5F493LhF+
ZoE0CILIB9IwoFD4zQsP8K6BLc5cewQDu3AY34yAmWMUzjtHw+JWNC7cjqGB
EotLrrG4QrbQ8IIDrrrFwto9TtRpSzTkmjvREK9EoiUpcAlIhXtIBi7busIv
PAsPYvPJlhYhNrUESVnlSM+rQm5RDYrL64WtrSe/HRAQhJaWVnVA+/sHUF/a
9umXbpnUQ3+/D17HetjW1v6B6w4rO6ZT1t7W8QH9p5G5b5y0trYiNDQUu7u7
T7vDoeZi6J/hqZ5FxRv24qLhWaRVd6nucKipSFzTJq+Z7BHXpNfIa44IFea9
AFASLGKCqr9f0E45zmXZ2NjYvjJWTemtZZ6kt7cX4+Pj+67jsomJiX1lfJ8s
024zehWbZEbGZ9cQn1aAW4HpOO9RhDdtUnDxfiFya4awvSN3Hn5C3D81OQX5
s4MNLG+MY3KhBW3DichpvIGwgjfgmfotXA/4NgKT30Zt7wPMr/Sr2yR5zfHU
1NS+dtXU1IjlK7pljM/09PS+fuqW6V4njaksY9PHS0117+3s7MTs7Oy+67hs
bm5uX1lHR4daJu+tqKh4Ct/fFtctLCgy3p5D00A0Iovfxb2kb+Fu4mt4nP9L
ZNXboH00HqVVaRgaa8f61oyssr29nW5f2PfosrKyp6D5GJ6klcDGJwcnHbLw
rl0arP1K8CitDdVtkxiZXsHqujaM6aD6KBqX65bZIy8uLu7rBXvLp5Hi65aX
l/eV8QCQZccOKJPXlZSUqEjJvalFRUWqhAyVGvIifGFy2RUrSsDVW5EKfUNz
9MysqqMmL8KHrnETKwz4p6c8BQZG59E7u6qOkNTUVKyurirv9jRHLmJ95ZCy
9PR0rK2t7esTX7elLLLVXvdx1NbUUmipbeja5jRpdjP6p4pR0emL+Aqi9Rk/
hGv8VxCY/QOK1U5hcKJKI33z+uYuhqdWkF09COfHVXjvRjrO3s7DdZcgzC+u
SNFUV1er0esrOmU7T2391S2T1zGH3t/kF7+Xy8im7StjSGVbdO9VflRY6mob
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
+p7IA9VAnh7CkmWXyqeNbW/vSE3gbI/rk2+I7afP1QTt3qru5io8CPSHt68/
MguqsL61+wn1UVtIj/TF2XMGcLvrBuNzZ3H3YTJ/xQ7WJ7thofcOEis70JAX
idd/9WsiP+awsrqKS5cu4fx5C2TX9WgO0gR5JgQfTsWjjjiE5jA14FXnbynr
T9SvxO0JFXaRdF+l0kvKhiOeV6ImyqRcbWc9boT9BXLqb6nHlumqwa8VNHa2
1lFRkAF/Hx/4BT5EdbMQs0Rje20W952tYHz+MtxcHHDmtD6SS1uEFvRVJuL0
2bPomphDmMd1/OpXb8PM7BKuXLmMixcv4NI1O3RN7f8uNqkCcm/k/Zh6HLeP
pKD2u3zO/LOlf0QsheDJSscHZSr/SKm6LHa3La9PHyZ6eZgke8vNzQ1sbGzQ
O+3vnV2p1TJi/CQWR9txXu8M4gsbxAftpSk4e9YUzcNz/4e99wCuc9vOwzDv
8hL36j3Zek5mnBlbUjyOlBc78khRFFuxPbGUxElmnNiWZZXLe9nQe+8kGgmA
HSTAAnaidxC99w6i9957O+gH7QBf9tr/v3/8ODw45L3v6UnJ6MwcEtj4y9pr
7732t9ZehUmDAywtzDMZts9E4ALuXnOCi88dtmyXOaKlfeZAd2R0DkzKmiv5
BxmaA6IMCSUVJ+cRyrLPFot45NTSB+7SRq5ZYhulE2tKar2lPTg5f2hMxa1U
StBcYHAOiOCIoyMdMYMz5EcKcw6UXPlfy2wZqMlk090ZfTNS+sOcNw/g7Hcf
mweMrbvbmF9YwAHbgOYH2Bq1uop7UclY2djB3q6WsUVLh1JGJsOXSCoZgHlo
AVM9LuBd6f/Dkz6KYA1DM4Jya5EGT6eAQhhQfsnosv9M5aZMis+eESI39OpE
P8J8veDt68P47eHhwdpcXF1R1Dqk6ropRigmz04dkzeHAA8b5DT2KaOlmaFn
OcLF7yb6plfVVXWE7mYpX0rEkNXdgSLqt/cNpYJWqiPS6Z6vlOddtG3vLvFp
n9/ip0wAbka6ls3wiebkrJLt5k+z/BlE/11otibFHFDrcSLSqbs8B36eHvDx
9mK/SYzw8HCHp18Ahpa25bMTObLv5mslsm+pv4pH9g2yawQjBj8UwdnGDGFP
oqHZOVQH9wmdTwx5ecskrtwow5MsLzzN/0Pu42hsyJk05L0sbhxXhnxte5pH
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
Q3AvupDezX++H10g/fnvYrAuC44efuidlhJNYHcNkTc9EVNYL/+6iMQXj2Bn
awtnZ0atvSNeJGRhbedAif3cWp3E3SBfWJib4VlahWBpf00GnDyvY3BuW5+l
Vbmv8J25L6aXtQpLK7Oew8rrNrYY8dU5L2DJfl6V6whuTHTAyeoKEkp7JMJ/
jMznN+F95wl1FW0lybj8zbe4FxWHgeFx1JfnwPbKt/AMfYqt/SNFwu2vjTO2
W+HarSeob+vD1FgPCgsKz5H+xugoLCrG8MyqanYzmT/WBgfLq0gu79NntxZP
7/nCPeDlaXZr8eSOD4KjstjPh9LPzzKlP/8aesuScNnKCe3jkt8PtKu47W2N
qOwqXpg4+XEoLl62RFxmCcbHRpEZ/xzf/vmfMbaW07oUHZnoLMWlqxaIfJOM
vok5dLfWM/216Au5I8XFxSguq8LK1omvQHdJPHuzC7omN/VHozrvNS5Z+p0a
jarsF7D2vsNHoyb3Jf/5ZDQ64WxjhsSyHtHtrBch8Ln7DLu6fURcd2FrI4JN
Rwgu9n8oQ2wiHe/unQzG+jjTy+2QWsWPVlGb947NIItztCDYLZZWNmwFDeoN
Rjscrc2RUtH/8WA8u+8Hj8BX+oPx9K4vbjzP5oPBf47KEquytzwZV22c0aEa
jDs+tniZW4vtlQm4ml9CZGLJiTQ5QnleKjILquklylh0l+KqnTv65mirPMDr
h8GwtLT6Qu6Hra0NbFx80TNzUn+3uzSBvdgV3T9wLNjKWDlrLH4sjcW9KLbH
beOWlws8rgcjIysLGenp3OaWk5vHJksJlpTiDV8qg5FcJlVNPj6ilJiHh4ck
aRUJK31+EaOgXhJnjUJeHdbmB+Bw9SpuRz7jJjoiPz3jPXLz8lBRXY/dIyXb
Bg2DmZ0buiYkz9cjnU7pwWn68fPwvzbvFS7b+mNuTcJZm5NdjP/mSKroE/zP
finzn0nx294usHF2w/3wh1SkEOEPw3HNyx7fXrRjM2Lto8Ug+L8wOYTKispz
in2gChOSq+APXAz/1UfD8OyeH7xCoxXTWV9FCmOKCzon5Z1Aqzk9DmZX4H49
CA/Dw3lXHobfhYP1FTh43MK67tRykMZhk6+Yga4WIv8Lxd5Rheq6Rqyp3Jh+
nuHIf4PvrjigeYgfeUEz2sow90U8jM4Vw/E2zBved59i7+gQr0N9YO8dSpkx
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
S+FEt2vEmT77xLfXxM9PiTZ37z00mg/gfO13OOX5czhe/hldZwK/wPMbJntE
RKSY7PHxCVyql4itoKEKqQ0z7HltO/9/d+9n9NtELamE+EQkJ6bR91ia9Y/F
rH/y1Bc37h2Hy9UPSDD+RGDlcu1tEpofMWYa1q6EK/2mh/XrYkLwzGfaXLpt
wTOffrcQ13EbzX+dEAB0v7vXfv4uZvhOde4rbdbimyIj/kTM/Wt3rXH1Lk9A
c2XOeu4XfONIPHLs/F4xtw+57Rb/P0F85HzVlOgtJqzgQeK7beq8Ja0husP6
RbY5e4pLxDcxl7erPM2ywPUq85TFhlkgLvYRF2vXKXxtoZPzwdlzN0nPMxtm
FUtaLlbJ825TYcr6oniY2TuRr7S0rlNP2myw+OvJ4ufild1a8UrWqTZ6elep
is4Vz2WmGf/MzspGeVkV5maXaBj8cxvycgtRUV69oS0/rxjVlXXi2061LSer
AJUVteLbdvHzM5iZXsTQ8AyaOnoRFB6O0JhHSCoMhn/0OVwKImXw+Ltwuv8l
uAT8HTyffgdhmUdQ154m8jGqq+qoV9McjhN9Yzi4gjx/e01t47qpLJQ2t8nr
5L1cw3XzvZw/wuWV9du4nixXvde/V79NXseFfjbfy+/lI1H07+Xq4Zxts37d
p5CSnIaGhma095YhruAsfGPegmvgF3D20ZfhGfpt3E/4gNrPobQhlKbYbRSX
ZWFkrJ+wnGMjlHAlF2Z2CfNzy1hQP5npOWhv7eSNnsvbuYWtSLomNSUDLc3t
yn1MqEUeEGnvlqZ28W2H+Pl/+M9ITc5AW0sn3b6EhXnea7CMlcUVrC6tit9n
phcwOjaLvsFpBD+NR3B0IQJianAlsAiO3lmwcE/AOyci8dbRZ3j3ZCR2nY7B
frckmBzxwZELkTh/rwC3QsvwOK4WMZnNSC/qQGFVL6obB9HWNYFnEQmob2hn
ppF8lpSYiva2rg18xt3sJH7S58ekhFRq69nQlpiQorXJexPjU9DVufHelOR0
dHeJA7dIZCl0Y5G3uWo9u1HHLgWsF81kNWpvK1ykdT26pl63XlxzhPWovXC3
5NRjW4p3h+lPvdCQpxgcGN3QtbDQCAwNbmyLeBaD4cGxDcPi64aH9Ns+g9mZ
JTx+HIaqum6U1vYjJb8dQfG18AwoxMHLqdjrHCuoxZQ6dTMXZzx8UVLZQb1Z
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
P/H8nfUl1NU3YmF1W0wM9n8M2uZGf+//ARmZcUU=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$HomeDirectory", ",", 
      "\"\</Dropbox/PostDoc/2017_SalmonStrays/manuscript/FinalDraft_rev/fig_\
PDF.pdf\>\""}], "}"}], "]"}], ",", "PDFPlot", ",", "\"\<PDF\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719082324317504*^9, 3.719082330147394*^9}, {
  3.719082362870101*^9, 3.719082369916211*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2017_SalmonStrays/\
manuscript/FinalDraft_rev/fig_PDF.pdf\"\>"], "Output",
 CellChangeTimes->{3.719082376814921*^9, 3.7190827851860943`*^9, 
  3.719083159100573*^9, 3.7190861304819736`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Where", " ", "m", " ", "is", " ", "density", " ", "dependent"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "It", " ", "is", " ", "an", " ", "even", " ", "better", " ", 
    "approximation"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7188464837989187`*^9, 3.7188464945979233`*^9}, {
  3.718846649842949*^9, 3.718846656930035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"m", "=", 
      RowBox[{"0.3", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["N1", 
          RowBox[{"1000", "+", "N1"}]]}], ")"}]}]}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", "1000"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{"NextGenTraitPDF", ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"ngmeansimple", ",", "0.01"}], "}"}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ngmeansimple", "-", "ngvarsimple"}], ",", "0.01"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ngmeansimple", "+", "ngvarsimple"}], ",", "0.01"}], 
           "}"}]}], "}"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{"NormApprox", ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"-", "5"}], ",", "10"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.71884650753863*^9, 3.718846671543887*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVV3c81e8Xt/e47rW3S5Iks4x8zqNkayAkSSopSkkIlYSkJSQkm8heiXA/
9kw2WV8UlTKzM37399d9ve/5PGe+z3meI+XoZn6JjoaGZoCehub/v9pDHr93
dkg4iFqGONBmYQNlSXNG/0i4+X2aM3uTszDP6Pa/ESskfKWY69RT/Wws/5Tc
5u4ZEu5sWnP0XGwOJtMxxHFikIT/zUNvD2vkY9W5LDyxvSR8VWD4vFh0Pmb/
TJ3vewcJ92G+wiuwkY9FG78Q824k4SG7fAxf1RVgHPWHFROLSXjtFJ0Ax+0i
LDPFTWU6j4RHSjv+2fujCNMPiDuglkXCj0xu/Gg7U4z5wwrWlETCPzauKzSZ
lmDLZZnH55+T8Db1WDqF46XYaC7hJrpCwq+sDIZ+nfiE+T7TuR16kYQPPnoz
Mf+wAhN0vXqn5xwJf6rhfC5ArhIz31P3wNmKhOsEiiqf9avCGlO8wsOOkPCu
x10igRk4djEgNWoQI+FuD4MU6FiqMbrznbEyWiT8RnjvvSdXqrFD4ntTPiqR
8Er2joxplRosP3q0aEyMhGdpJ8zzjNViZl7sH+WFqOdp9J5JnKzDpk9pVHjw
knCmdy9cI+rqMBlSeB0LOwmvO+Tz/r/Ceiz62dFepTUi/o52yv9WbiP2ICB7
xb+LiLPs+nP83b42rM9v5/Glz0Tc2b/JfnigDZP3MhczbiLiK1e2ghcefca6
XNaOkKqIeEVsSyLPYjtGPqX3Mi2TiOdmj3032ezAPI+/lglNJeLXvp5qjnPs
xFqMpkuvJxBxdOkKjWZrJ+aOhY0efEXEfZX2+QSldGG1u4f3tvhTsUXM4aGb
PZggeT8l15eIZw5Pli787sFcRQPMIzyJuMigqU2Vcy/GyyN3x86ViIcazmUU
X+3DLm7capi1JuJJl0fLKS8HMMbP7OdJ+4m4nPJe/lSfEcy20X5pdQ8Rt2lO
UHizexTLrS54NCxDxAmX/g1aDYxiVh+sc9OEifjnGdH2EvIYlp6Q8u8gExEX
9+Fukc0YxzZiVp6L0hJxefGD//VwTWDHIo3ItJs8eGIl+78yrwlsJWTOsGWB
Bxe4/e+59YlvmIG7dpTdCA9OlKoMVhKfxOJcn+/RHeDB1QQEPk6+nsTmncYr
dnXz4L76PufUeKew6DOPvs028eC/C3vru3l/YD/1upUeFPPgzV/4hJIO/sIe
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
        "]]},
      Annotation[#, "Charting`Private`Tag$814018#1"]& ]}, {}, {}}, 
   PointBox[{0.7499999999999998, 0.01}], 
   LineBox[{{-2.6771961174205288`, 0.01}, {4.177196117420529, 
    0.01}}], {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
2M7gPCaEGC2f/snaWcd+DXYtRk0LoYnAdqr5C+vYmkpfT+68EDLJU0HfUtcw
gT/DmUubQgjxpVGU6q5iR0x+PeT8J4QexJcwOhauYKhswuMElTAKZg1BrLwr
mIPXHPJlEUZXgr0fpK0sYX5diwdSOYTRki5IU3VcwqIVVtkqeYTRzj+HVC98
EXu//GdojySMJAt2izKq5rGdG/R+9xWF0fQB6cEK7lmMvZXJ+q2KMLp41fPG
NDaDiR9mO98MhZH2f4teU67T2IVZLm52LWEk1SarGT48iZlr8u3I6wkj8ce1
Zz6RJjG3bMExAyNh1DjksLbuNIElOIi/T7IURvDZgnc50ziWVSeV/PGaMDr3
/p/m1LUx7KPkwTsDTsLo+m/VBtvaX9jwr6M6IreFEeUbr/CnsaPYISts5vV9
YRTG8m4mmjyMYdWo7Wu0MFovibHhrv6B6Qurl808FkZ9h2rMBr4MYV6DWveO
pAmjE9rhFlyzA1ikiq6rXrowUrnhn87MMIClplwyvJUljER8nlSpHenHcGMT
sdJCYfT6pW7Io+herPODOUNvqTA6vHSS5UR9DzbJbbW4VSGMkjUxkipdD8bS
ZV91uk4YHXLz+pWZ3IUZ6982/dIvjJ7v/BecTdmBuRR4o8lhYeR3GjPidW7H
Atn8DzCMCyP9BUzcp7sNy2gJWb+4IIxmEgYju32/Y6Wy4UM3VoURt+4vJ7sb
37CGqPufH20JI9IXn7uvXFqxhQuxjzupRPb/kwuSAsHNGGX2Y991ehEEctBi
U0ITxkX/nxUvqwgqZdy7KvK+ETtV9/SIOa8Ics2KZvlA2YCFn3nb+EtWBBkp
1V/QX/uC1aecrZ6TF0GaBeSfU2pfMIaVwaINRREUUfU24EjKZ+xhBlsaExJB
Q1sBvKxGtVjL9ps4Lg0RFCol/EmvvAZjMzxzT0RLBClFT/z3WKIGi6f2dDtu
JIIeaxc/96DDsS5z1munTUXQ7FLOjQf/qjHukizjc5YiyIRyM3ZzowpLtutH
Zk4i6HqTaTMPdSX2og4QwwJFkFxk7paQ30dsRLiPPjpUBDGPSxyrzC7DxL1v
7fwXIYLKDUUspX5+wLKkMyfexokgkSBirZ9VKTYdjA0U/yeC7jw6delvdgl2
sLfnW1WqCHJ26XG5vVWM5d5n/NieKYLuyY3E3csuwhZ+ZuQOvhVBdj6WUbUM
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
k6U=
        "]]},
      Annotation[#, "Charting`Private`Tag$814056#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.999999693877551, 9.999999693877552}, {0, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.718846567820239*^9, 3.718846671960134*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.718808818632412*^9, 3.718808824481842*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", "100"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "0.5", ",", "0.02"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"MeanMRMD", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", "ngmeansimple"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "mvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"VarMRMD", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"ngmeansimple", "-", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "mvec"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"ngmeansimple", "+", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "mvec"}], "}"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"MeanNorm", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"m", "+", "0.01"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"m", "*", "N2"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "mvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"MeanNorm", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"VarNorm", " ", "=", " ", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"MeanMRMD", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.01"}], ",", "0.52"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "1"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "mvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "3"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"mvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "0.01"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  "\[Sigma]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"mvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "0.01"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                  "\[Sigma]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "mvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"MeanNorm", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7188086460815353`*^9, 3.7188087882114162`*^9}, {
  3.7188089239215183`*^9, 3.718808959029765*^9}, {3.7188089904662123`*^9, 
  3.7188090092309437`*^9}, {3.718809043448574*^9, 3.718809313053968*^9}, {
  3.7188093492244663`*^9, 3.718809545741788*^9}, {3.7188095918309107`*^9, 
  3.718809723218051*^9}, {3.718809807174232*^9, 3.718810168132708*^9}, {
  3.7188102059524183`*^9, 3.718810213619656*^9}, {3.718810244809334*^9, 
  3.718810386241495*^9}, {3.718810420597369*^9, 3.71881052150747*^9}, {
  3.718811132055025*^9, 3.7188111832470703`*^9}, {3.718811222385106*^9, 
  3.718811254461451*^9}, {3.71881136578835*^9, 3.718811381245942*^9}, {
  3.718814127477487*^9, 3.718814172296891*^9}, {3.718830900698316*^9, 
  3.718830961451515*^9}, {3.718831650165007*^9, 3.7188316534459763`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQjQ6qRda5P6yaYs+3Ypff71st9hD+EnvHNXaia+ym
2u+Qa30duGOdvd+PvZzzbBZA5bfYp0sl7lwuuMx+1kwQ2Gkve0hR5pDiGqj6
ffanOys8HSw22r8JBIkctPdYs+nzg4YtUP1H7O9c2Spz5812e67riwtsuY7b
/6t2/1lRtxtq3kl7Y/nmz4YW++01Y/oPfdU4Y3/j3B+T2L6DUPPP2b8W2TOn
afph+yVA3dcXX7C3ckmTVNt5FGrfRfv305WDeL4etzcGg8v2F5Z4TlbzPQW1
/4r9qUS+4hmHz9gf/qoBtOGqfTELX/i+qPNQ91y3t1zn2jSL66J9ENjCG/Z/
2OzNP1Zdgrrvpv3f/yBw2f5hFcjAW/b5B4UjJs++CnXvHfsDdrHz1/lfty8E
Oa/grr3JY5+OKXI3oe6/Zx+UWKxwkeu2PSQWHtgLxpZcdBW/aw8AIKbF3A==

       "]]}, {}}, {}, {}, {{}, {}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0., -0.8942903926535991}, {0., 0.8942903926535991}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.02, -0.9054423786742795}, {0.02, 0.9258089774522836}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.04, -0.9163388317467196}, {0.04, 0.9578326076803299}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.06, -0.926979839956144}, {0.06, 0.990404787102021}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.08, -0.9373638471422476}, {0.08, 1.0235707436939714`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.1, -0.947487613793212}, {0.1, 1.057377723683322}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.12, -0.9573461524897805}, {0.12, 1.0918753004718436`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.14, -0.9669326368888359}, {0.14, 1.1271157032503925`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.16, -0.9762382825058553}, {0.16, 1.1631541703563222`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.18, -0.985252196782842}, {0.18, 1.200049332821028}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.2, -0.9939611950784557}, {0.2, 1.2378636341028457`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.22, -1.0023495782525522`}, {0.22, 1.2766637927163926`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.24, -1.0103988663951333`}, {0.24, 1.3165213153747253`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.26, -1.0180874819182844`}, {0.26, 1.3575130693856479`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.28, -1.0253903736257093`}, {0.28, 1.399721924427848}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.3, -1.0322785714183929`}, {0.3, 1.4432374755279818`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.32, -1.0387186588851856`}, {0.32, 1.4881568611323763`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.34, -1.0446721480325047`}, {0.34, 1.5345856927010928`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.36, -1.0500947366567994`}, {0.36, 1.5826391153550248`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.38, -1.054935424131333}, {0.38, 1.632443022915527}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.4, -1.0591354553658991`}, {0.4, 1.6841354553658987`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.42, -1.062627055003155}, {0.42, 1.737868212559425}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.44, -1.0653319039966584`}, {0.44, 1.793808725188712}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.46, -1.0671592978354278`}, {0.46, 1.8521422329890125`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.48, -1.0680039088232252`}, {0.48, 1.9130743313584357`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.5, -1.0677430525795601`}, {0.5, 1.9768339616704684`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.01, -1.}, {0.01, 1.}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.03, -0.9898167006109979}, {0.03, 1.010183299389002}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.05, -0.979253112033195}, {0.05, 1.020746887966805}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.06999999999999999, -0.9682875264270613}, {0.06999999999999999,
      1.0317124735729386`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.09, -0.9568965517241379}, {0.09, 1.043103448275862}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.11, -0.945054945054945}, {0.11, 1.054945054945055}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.13, -0.9327354260089686}, {0.13, 1.0672645739910314`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.15000000000000002`, -0.919908466819222}, {
     0.15000000000000002`, 1.080091533180778}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.17, -0.9065420560747663}, {0.17, 1.0934579439252337`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.19, -0.8926014319809069}, {0.19, 1.107398568019093}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.21000000000000002`, -0.8780487804878049}, {
     0.21000000000000002`, 1.1219512195121952`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.23, -0.8628428927680798}, {0.23, 1.1371571072319202`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.25, -0.846938775510204}, {0.25, 1.153061224489796}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.27, -0.8302872062663185}, {0.27, 1.1697127937336815`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.29000000000000004`, -0.8128342245989304}, {
     0.29000000000000004`, 1.1871657754010696`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.31, -0.7945205479452055}, {0.31, 1.2054794520547945`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.33, -0.7752808988764045}, {0.33, 1.2247191011235956`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.35000000000000003`, -0.755043227665706}, {
     0.35000000000000003`, 1.244956772334294}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.37, -0.7337278106508875}, {0.37, 1.2662721893491125`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.39, -0.7112462006079028}, {0.39, 1.2887537993920972`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.41000000000000003`, -0.6875}, {0.41000000000000003`, 
     1.3125}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.43, -0.662379421221865}, {0.43, 1.337620578778135}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.45, -0.6357615894039735}, {0.45, 1.3642384105960264`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.47000000000000003`, -0.6075085324232081}, {
     0.47000000000000003`, 1.3924914675767919`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.49, -0.5774647887323944}, {0.49, 1.4225352112676055`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.51, -0.5454545454545454}, {0.51, 
     1.4545454545454546`}}]}, {{}, {{}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQXS2yzv1hVYs9AxTskGt9Hbhjnv2j5bv8ft9qsZ81
EwRW2ouusQOiqfZASaCKjfa5P/ZyzrNZYM91fXGBLdd2+xqpxJ3LBZfZa8b0
H/qqscde5pAiEK2xXwKUvb74gP2hzgpPB4uN9ibGIHDY3nrNps8PGrbYH/6q
AdRx1P79la0yd95stw8CO+CEPXuN+8+Kut32j6pADjxlbyHf/NnQYr99Ici4
grP2N879MYntOwh19wX7ZyJ75jRNP2zv8RCk4aK9nkuapNrOo/YTDoEsuGT/
bbpyEM/X4/Zg516/bH9piedkNd9T9vIg78pdtT+byFc84/AZ+/Q0ELhmX8DC
F74v6rw9KHRE1l23N1nn2jSL66L9N5Bzv96wZ2S3N/9YdcneDhwAt6DuuGIP
Nq71tn3BQeGIybOB5p4BgTv2u+xi56/zv24vCjbwnr32Y5+OKXI37cHBFXPf
PiqxWOEi122o/x/YS8SWXHQVv2sPADDHwkI=
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{639.12890625, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.01, 0.52}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.718809186166864*^9, 3.718809295111578*^9}, 
   3.718809419330842*^9, {3.7188094828428*^9, 3.7188095462534027`*^9}, 
   3.718809592238591*^9, 3.718809623944737*^9, {3.718809665485173*^9, 
   3.718809686335656*^9}, 3.7188097265413446`*^9, {3.7188098164095583`*^9, 
   3.718809858268634*^9}, {3.7188099722733727`*^9, 3.718810048026855*^9}, {
   3.718810081701235*^9, 3.7188101239778547`*^9}, 3.7188101687784557`*^9, 
   3.7188102145297613`*^9, {3.7188103981978083`*^9, 3.718810468434786*^9}, {
   3.718810499163671*^9, 3.718810522817602*^9}, {3.718811143449791*^9, 
   3.7188111840035133`*^9}, {3.718811223442919*^9, 3.7188112557654743`*^9}, {
   3.718811367036667*^9, 3.718811381861631*^9}, {3.7188141280551662`*^9, 
   3.718814173209078*^9}, {3.718830928341237*^9, 3.718830961997004*^9}, {
   3.7188316511234407`*^9, 3.7188316542187567`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", 
      RowBox[{"N1", "*", "R"}]}], ",", 
     RowBox[{"m", "=", "0.1"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"R", ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "0.01", ",", "2", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"offset", "=", "0.03"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MeanMRMD", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"R", ",", "ngmeansimple"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"VarMRMD", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"R", ",", 
           RowBox[{"ngmeansimple", "-", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"R", ",", 
           RowBox[{"ngmeansimple", "+", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"MeanNorm", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"R", "+", "offset"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"m", "*", "N2"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"VarNorm", " ", "=", " ", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"MeanMRMD", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "1"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "Rvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "3"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Rvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "offset"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  "\[Sigma]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Rvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "offset"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                  "\[Sigma]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "Rvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"MeanNorm", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7188105715288963`*^9, 3.718810800786799*^9}, {
   3.7188108341192093`*^9, 3.71881087203193*^9}, {3.7188109123089457`*^9, 
   3.71881111293487*^9}, {3.718811209522244*^9, 3.718811215309848*^9}, 
   3.71881126742873*^9, 3.7188113949674263`*^9, {3.718814181644374*^9, 
   3.71881418427037*^9}, {3.7188309684666147`*^9, 3.718831075786327*^9}, {
   3.718831112086708*^9, 3.718831132206202*^9}, {3.718831659669606*^9, 
   3.718831663596909*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQXS2yzv1hVYv9JWOn1192ldlrxvQf+qqxx/6a1spf
Ni/X2T+qAik4Za++6s/rdv299jcWF9hyXb9s31TJNLfc/6i9Hdd1oMgt+7Se
nNB5j07bB+2Qa30d+MBeJ7h3qb7mRfu214FAkcf2hxojN7zyv2K/EyS945n9
uWlnXrCnXbd/A5J+/dJ+x7K/KZw5t+zlQdJyb+1jEq7+yk66C3XPB/trBjMP
XlZ5YH/4qwZQ5KN9yp6OHvGJD+1jQdIxn+2f369fZfHtkf03kPTXL/bnu7ud
ckKe2E8ASfd/s7/m9qDg6eqnUPN+2Nfe3Bl/9c8zqHk/7aMeXorLdn8BNe+3
/bcr3T+vdL+EmvfHPs/lOrfdqVdQ8/7Z32r/f/UC0xt7APzKsdk=
       
       "]]}, {}}, {}, {}, {{}, {}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.01, -0.8943016887195726}, {0.01, 0.905400467853868}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.11, -0.9526174860627944}, {0.11, 1.0733639185545611`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.21000000000000002`, -0.9971336016858462}, {
     0.21000000000000002`, 1.2251466310018073`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.31000000000000005`, -1.031644095189188}, {
     0.31000000000000005`, 1.364619390570498}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.41000000000000003`, -1.0585224197132337`}, {
     0.41000000000000003`, 1.4942291147185476`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.51, -1.0793717351197718`}, {0.51, 1.6156493376434309`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.6100000000000001, -1.0953354066022234`}, {0.6100000000000001, 
     1.7300908696615371`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.7100000000000001, -1.1072626173791078`}, {0.7100000000000001, 
     1.8384675607364716`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.81, -1.1158041570107462`}, {0.81, 1.9414922304052407`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.91, -1.1214713742563138`}, {0.91, 2.0397357536710468`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.01, -1.1246742910488392`}, {1.01, 2.133665300039848}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.11, -1.1257472509044941`}, {1.11, 2.2236700995691825`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.2100000000000002`, -1.1249667622251311`}, {
     1.2100000000000002`, 2.3100793968970215`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.31, -1.1225642647472367`}, {1.31, 2.393175321973232}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.4100000000000001`, -1.118735485298801}, {1.4100000000000001`, 
     2.4732023440884268`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.51, -1.113647437716073}, {1.51, 2.550374364452513}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.61, -1.107443755813794}, {1.61, 2.6248801365866496`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.7100000000000002`, -1.1002488216479704`}, {
     1.7100000000000002`, 2.6968874771101543`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.81, -1.092171006700619}, {1.81, 2.7665465848689808`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.9100000000000001`, -1.0833052489036707`}, {
     1.9100000000000001`, 2.8339926916167775`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.04, -0.9944506104328524}, {0.04, 1.0055493895671477`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.14, -0.9396267837541163}, {0.14, 1.0603732162458837`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.24000000000000002`, -0.8859934853420195}, {
     0.24000000000000002`, 1.1140065146579805`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.3400000000000001, -0.8335123523093448}, {0.3400000000000001, 
     1.1664876476906552`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.44000000000000006`, -0.7821466524973433}, {
     0.44000000000000006`, 1.2178533475026567`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.54, -0.7318611987381703}, {0.54, 1.2681388012618298`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.6400000000000001, -0.6826222684703434}, {0.6400000000000001, 
     1.3173777315296566`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.7400000000000001, -0.6343975283213181}, {0.7400000000000001, 
     1.3656024716786819`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.8400000000000001, -0.5871559633027523}, {0.8400000000000001, 
     1.4128440366972477`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.9400000000000001, -0.5408678102926336}, {0.9400000000000001, 
     1.4591321897073664`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.04, -0.4955044955044955}, {1.04, 1.5044955044955044`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.1400000000000001`, -0.4510385756676558}, {1.1400000000000001`,
      1.5489614243323442`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.2400000000000002`, -0.40744368266405473`}, {
     1.2400000000000002`, 1.5925563173359452`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.34, -0.36469447138700284`}, {1.34, 1.6353055286129972`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.4400000000000002`, -0.3227665706051872}, {1.4400000000000002`,
      1.6772334293948128`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.54, -0.28163653663177923`}, {1.54, 1.7183634633682208`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.6400000000000001`, -0.24128180961357204`}, {
     1.6400000000000001`, 1.758718190386428}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.7400000000000002`, -0.2016806722689073}, {1.7400000000000002`,
      1.7983193277310927`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.84, -0.16281221091581854`}, {1.84, 1.8371877890841815`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.9400000000000002`, -0.1246562786434462}, {1.9400000000000002`,
      1.8753437213565538`}}]}, {{}, {{}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQXS2yzv1h1RL7bcZOr7/sKrN/E7hDrvX1Qfv/Wit/
2bxcZ78TyAvccc5ebtWf1+36e+2PfNWI6T901b6rkmluuf9Rey0g76vGHfvE
npzQeY9O23s8rAKZaK8X3LtUX/OifQ3Y/Cf2exsjN7zyv2K/3h2k4Ln9+Wln
XrCnXbd/BFb+yv7gsr8pnDm37EVBykXe2UcnXP2VnXTXfkmBLdf1xR/sbxrM
PHhZ5YG9HZBXYPvJPmVPR4/4xIf2NxaDFHy2f3m/fpXFt0f2hSDlBV/tz3R3
O+WEPLHnBinn+m5/xe1BwdPVT6Hm/bBvubkz/uqfZ1DzftnHPLwUl+3+Amre
b/s/V7p/Xul+CTXvr32Ry3Vuu1OvoOb9t7/X/v/qBaY39gDxgKt8
       
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{788.3828125, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.1, 2}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7188108247482452`*^9, 3.7188108730697927`*^9}, {
   3.718810914133781*^9, 3.718811028979849*^9}, {3.7188110788240147`*^9, 
   3.71881111352164*^9}, 3.718811217567678*^9, 3.718811268084944*^9, 
   3.71881139574783*^9, 3.718814185204925*^9, {3.718830994785548*^9, 
   3.718831077389462*^9}, {3.718831112845772*^9, 3.718831132921204*^9}, {
   3.718831660366815*^9, 3.7188316644567347`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", 
      RowBox[{"0", "+", "d"}]}], ",", 
     RowBox[{"N1", "=", "500"}], ",", 
     RowBox[{"N2", "=", "1000"}], ",", 
     RowBox[{"m", "=", "0.1"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "1000"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"d", ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "0.0", ",", "8", ",", "0.2"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"offset", "=", "0.04"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MeanMRMD", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d", ",", "ngmeansimple"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "dvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"VarMRMD", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"ngmeansimple", "-", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "dvec"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"ngmeansimple", "+", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "dvec"}], "}"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"MeanNorm", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", "+", "offset"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"m", "*", "N2"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "dvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"VarNorm", " ", "=", " ", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"MeanMRMD", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "8.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "1"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "dvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "3"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "offset"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  "\[Sigma]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "offset"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                  "\[Sigma]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "dvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"MeanNorm", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.71881120195149*^9, 3.7188112030149183`*^9}, {
  3.718811280169083*^9, 3.7188113571303883`*^9}, {3.718811436010174*^9, 
  3.718811461110474*^9}, {3.718811569075536*^9, 3.7188117917682667`*^9}, {
  3.7188141024144163`*^9, 3.718814108447359*^9}, {3.718814191698409*^9, 
  3.718814207250331*^9}, {3.718831156154985*^9, 3.718831176987026*^9}, {
  3.718831669446412*^9, 3.7188316748657913`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0TssQ2EUB/CLxiMeKUpLPWowdLGQGEi+IyERkUhqEYmIJnQw1GDpYDGI
0WAh8VwshkbSSWJgUCmJCppWomg9q/TlIgz6nfufnOTm5ss93+88bpPdaRvP
VRTFmn3k+38sL8k4EisVUWvX6qbQzkGxyucd0dYqIyJi5su9sfguvj8jf19o
SkJ0G0em/T2HyE+LV873CceEDFX0L2zpXH2nuP8N/0ycHMv4FW+LloGi1Dk8
hXrZCyA/h9bRl+bnUZz9K9zXUQeD16iXTzaudwOvkLJYVryFV0Ra/Tt4xeQd
nO1s9kbgldAN9xOFV0YFspz5AZ6eBPf3iHw9OYZ+5jzOJ/jltIY9afcryBdq
3545eEG9Srrn/mPwDFQlOWMcnoFauME3eFU0H3arpZPv8KpplOdLwDOSX34O
J+CZyMXzJuGZ6CPJA8GroQ2ePwWvlurx3zTPTCHeRxpeHU3xAjPw6ijAXAZe
Pdk9zuwGPuA10NeF3JcKr5GCsj23Cs9Cw7y/T/EHr9MWgg==
       
       "]]}, {}}, {}, {}, {{}, {}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0., -0.7071067811865476}, {0., 0.7071067811865476}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.2, -0.6728438132669847}, {0.2, 0.7455710859942575}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.4, -0.6427451770891272}, {0.4, 0.7881997225436727}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.6000000000000001, -0.6167030420440753}, {0.6000000000000001, 
     0.8348848602258934}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.8, -0.5945476881806809}, {0.8, 0.8854567790897717}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1., -0.5760605454787758}, {1., 0.9396969091151394}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.2000000000000002`, -0.560989175898768}, {1.2000000000000002`, 
     0.9973528122624042}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.4000000000000001`, -0.5490621138403478}, {1.4000000000000001`,
      1.058153022931257}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.6, -0.5400019892556256}, {1.6, 1.1218201710738074`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.8, -0.5335360410011504}, {1.8, 1.1880814955466046`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{2., -0.5294037592903863}, {2., 1.256676486563114}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{2.2, -0.5273618495495702}, {2.2, 1.327361849549571}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{2.4000000000000004`, -0.527186960162626}, {2.4000000000000004`, 
     1.3999142328898986`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{2.6, -0.5286767003801705}, {2.6, 1.4741312458347153`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{2.8000000000000003`, -0.5316494503973579}, {2.8000000000000003`,
      1.5498312685791777`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{3., -0.5359433866700289}, {3., 1.6268524775791198`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{3.2, -0.5414150497779919}, {3.2, 1.7050514134143555`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{3.4000000000000004`, -0.5479376914499354}, {3.4000000000000004`,
      1.7843013278135718`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{3.6, -0.5553995616221246}, {3.6, 1.8644904707130296`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{3.8000000000000003`, -0.5637022380597109}, {3.8000000000000003`,
      1.9455204198778882`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{4., -0.5727590587340997}, {4., 2.0273045132795526`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{4.2, -0.5824936879197561}, {4.2, 2.1097664151924813`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{4.4, -0.5928388277184117}, {4.4, 2.192838827718413}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{4.6000000000000005`, -0.603735074669972}, {4.6000000000000005`, 
     2.2764623473972465`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{4.800000000000001, -0.6151299140566148}, {4.800000000000001, 
     2.3605844595111583`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{5., -0.6269768407923461}, {5., 2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{5.2, -0.6392345942260085}, {5.2, 2.530143685135095}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{5.4, -0.6518664939484438}, {5.4, 2.615502857584814}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{5.6000000000000005`, -0.6648398642308193}, {5.6000000000000005`,
      2.701203500594465}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{5.800000000000001, -0.6781255356689562}, {5.800000000000001, 
     2.787216444759859}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{6., -0.6916974137388696}, {6., 2.8735155955570537`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{6.2, -0.7055321051409749}, {6.2, 2.9600775596864204`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{6.4, -0.7196085939429557}, {6.4, 3.0468813212156842`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{6.6000000000000005`, -0.733907960581375}, {6.6000000000000005`, 
     3.1339079605813653`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{6.800000000000001, -0.7484131377284016}, {6.800000000000001, 
     3.221140410455682}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{7., -0.7631086978689692}, {7., 3.308563243323523}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{7.2, -0.7779806681663393}, {7.2, 3.396162486348145}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{7.4, -0.793016368829699}, {7.4, 3.4839254597387734`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{7.6000000000000005`, -0.808204271744215}, {7.6000000000000005`, 
     3.5718406353805627`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{7.800000000000001, -0.8235338765926825}, {7.800000000000001, 
     3.659897512956337}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{8., -0.8389956020986991}, {8., 3.748086511189617}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.04, -1.}, {0.04, 1.}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.24000000000000002`, -0.9636363636363636}, {
     0.24000000000000002`, 1.0363636363636364`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.44, -0.9272727272727272}, {0.44, 1.0727272727272728`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.6400000000000001, -0.8909090909090909}, {0.6400000000000001, 
     1.1090909090909091`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.8400000000000001, -0.8545454545454545}, {0.8400000000000001, 
     1.1454545454545455`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.04, -0.8181818181818181}, {1.04, 1.1818181818181819`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.2400000000000002`, -0.7818181818181817}, {1.2400000000000002`,
      1.2181818181818183`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.4400000000000002`, -0.7454545454545454}, {1.4400000000000002`,
      1.2545454545454546`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.6400000000000001`, -0.709090909090909}, {1.6400000000000001`, 
     1.290909090909091}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.84, -0.6727272727272727}, {1.84, 1.3272727272727272`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{2.04, -0.6363636363636364}, {2.04, 1.3636363636363638`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{2.24, -0.6}, {2.24, 1.4}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{2.4400000000000004`, -0.5636363636363635}, {2.4400000000000004`,
      1.4363636363636365`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{2.64, -0.5272727272727272}, {2.64, 1.4727272727272727`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{2.8400000000000003`, -0.49090909090909085`}, {
     2.8400000000000003`, 1.5090909090909093`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{3.04, -0.4545454545454546}, {3.04, 1.5454545454545454`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{3.24, -0.4181818181818181}, {3.24, 1.581818181818182}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{3.4400000000000004`, -0.3818181818181817}, {3.4400000000000004`,
      1.6181818181818182`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{3.64, -0.34545454545454546`}, {3.64, 1.6545454545454545`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{3.8400000000000003`, -0.30909090909090897`}, {
     3.8400000000000003`, 1.690909090909091}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{4.04, -0.2727272727272727}, {4.04, 1.7272727272727273`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{4.24, -0.23636363636363633`}, {4.24, 1.7636363636363637`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{4.44, -0.19999999999999996`}, {4.44, 1.8}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{4.640000000000001, -0.16363636363636347`}, {4.640000000000001, 
     1.8363636363636364`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{4.840000000000001, -0.1272727272727271}, {4.840000000000001, 
     1.872727272727273}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{5.04, -0.09090909090909083}, {5.04, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{5.24, -0.05454545454545445}, {5.24, 1.9454545454545455`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{5.44, -0.018181818181818077`}, {5.44, 1.981818181818182}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{5.640000000000001, 0.0181818181818183}, {5.640000000000001, 
     2.0181818181818185`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{5.840000000000001, 0.054545454545454675`}, {5.840000000000001, 
     2.0545454545454547`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{6.04, 0.09090909090909083}, {6.04, 2.090909090909091}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{6.24, 0.12727272727272743`}, {6.24, 2.1272727272727274`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{6.44, 0.1636363636363638}, {6.44, 2.163636363636364}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{6.640000000000001, 0.20000000000000018`}, {6.640000000000001, 
     2.2}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{6.840000000000001, 0.23636363636363655`}, {6.840000000000001, 
     2.2363636363636363`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{7.04, 0.2727272727272727}, {7.04, 2.2727272727272725`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{7.24, 0.3090909090909091}, {7.24, 2.309090909090909}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{7.44, 0.34545454545454546`}, {7.44, 2.3454545454545457`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{7.640000000000001, 0.38181818181818206`}, {7.640000000000001, 
     2.381818181818182}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{7.840000000000001, 0.41818181818181843`}, {7.840000000000001, 
     2.4181818181818184`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{8.04, 0.4545454545454546}, {8.04, 
     2.4545454545454546`}}]}, {{}, {{}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtkksoRHEUxq9njMhjmGEYLJRZUzY4h0KxEDYWZkFZUTPKxmujjKVZ2LAY
ZaZspEkpUhYjISUk45Xn5DUeY8aMImXO3O/U7Xa////8zne+bmmPpb03XlEU
U/SR94h2qel22EUKas044W9b3ae5bJ+pzjFPpq4pT7j8Et/LNBq776MPw8lG
99s63Q2L8IJzD7msNRqvM0CNOvPgYcM2nTpFCOH+HqV5RfimFvtC4lDzAdVq
RPhB/xENSLv1j4LTJa2pwWNqXxVDCqs8L722iRDHszNSZ2Tzi5DAKv+CisW+
MYnrHQK8InWfZFbn3YCXwlFYlHgLXiqr8+/AS+PdjvHqsp178NJZ9eMDL4OL
ZJzhAflkwt8jRcpFyGRr569txfJEm2ERsuD3meweEbJ567xqcWzzhczS3pUD
/37wtKwXnO4NPC32eQcvl/uv3ZH0vg/w8rBfADwd38jxdQA8Pfb9BE/PGnUh
8PKxfxC8Aq6skAqBZ0AeIfAKOWbP/AVeIfL5Aq+IJ1cs0QTC4BmRVwS8Yl4W
e+4IxX4nbQny+6Z/uHY3KQ==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{499.91796875, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.1, 8.5}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.718811427853614*^9, 3.718811466915813*^9}, {
   3.718811671447691*^9, 3.7188117924674797`*^9}, {3.7188141039265327`*^9, 
   3.7188141089501123`*^9}, {3.718814193854145*^9, 3.718814208144547*^9}, 
   3.718831201295684*^9, {3.718831670159874*^9, 3.7188316755271473`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"N1", "=", "500"}], ",", 
     RowBox[{"N2", "=", "1000"}], ",", 
     RowBox[{"m", "=", "0.1"}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"10", "^", "Z"}], ",", 
       RowBox[{"{", 
        RowBox[{"Z", ",", 
         RowBox[{"-", "1"}], ",", "5", ",", "0.2"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"offset", "=", "0.0"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MeanMRMD", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Z", ",", "ngmeansimple"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Z", ",", "zvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"VarMRMD", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Z", ",", 
           RowBox[{"ngmeansimple", "-", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Z", ",", "zvec"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Z", ",", 
           RowBox[{"ngmeansimple", "+", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Z", ",", "zvec"}], "}"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"MeanNorm", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Z", "+", "offset"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"m", "*", "N2"}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
             RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Z", ",", "zvec"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"VarNorm", " ", "=", " ", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{"MeanMRMD", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.1", ",", 
              RowBox[{"10", "^", "5.1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "1"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
               RowBox[{"VarMRMD", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "zvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "3"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"zvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "offset"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  "\[Sigma]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"zvec", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "+", "offset"}], ",", 
                 RowBox[{
                  RowBox[{"MeanNorm", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                  "\[Sigma]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "zvec", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{"MeanNorm", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.718845968874015*^9, 3.718846033294403*^9}, {
  3.718846064406501*^9, 3.7188461715466957`*^9}, {3.7188462241793823`*^9, 
  3.718846343105008*^9}, {3.718846378894969*^9, 3.718846397624887*^9}, {
  3.718846452932513*^9, 3.7188464628426523`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQLRq6dffGbKYDkrElF13F39ord3TEy1T+3S8C5Uul
LXO/KvVtvzSUrwiWf7tfCMqXB/Pv7heF8hmgAKZfEyJvD+OrQfTbw9RLQ8yH
y0Pth8uLQdzngKqezQGmXqF8+uUfJznh8hD9vHD+lDN7vspPEXBANU8Izp9x
d22js7MImvlicP6cd/N40z+Jw/nyYPsk4fwF//tndi2URrNfFs5fKtCoui5A
Hs09CnD+VYGdN17UK6K5TwnOD5+5cV5VuDKae1Xg/JuKq1J49FXR3K8G50ev
WqQ1j00dzgcA4uTNsg==
       "]]}, {}}, {}, {}, {{}, {}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.1, -1.0543598706525685`}, {0.1, 2.872541688834387}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.15848931924611134`, -1.046124550926682}, {
     0.15848931924611134`, 2.8643063691084993`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.251188643150958, -1.0327648170385255`}, {0.251188643150958, 
     2.8509466352203443`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.3981071705534973, -1.0109125682215108`}, {0.3981071705534973, 
     2.8290943864033276`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{0.6309573444801934, -0.9750085423977092}, {0.6309573444801934, 
     2.7931903605795267`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1., -0.9169001896702298}, {1., 2.7350820078520472`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1.584893192461114, -0.8299299732901966}, {1.584893192461114, 
     2.6481117914720143`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{2.511886431509581, -0.7269139407663113}, {2.511886431509581, 
     2.545095758948129}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{3.981071705534973, -0.6532367476118814}, {3.981071705534973, 
     2.471418565793699}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{6.309573444801933, -0.6296381148570879}, {6.309573444801933, 
     2.4478199330389057`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{10., -0.6270435514742366}, {10., 2.4452253696560544`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{15.848931924611142`, -0.6269770331385145}, {15.848931924611142`,
      2.4451588513203317`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{25.11886431509582, -0.6269768408104678}, {25.11886431509582, 
     2.4451586589922853`}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{39.810717055349734`, -0.6269768407923463}, {39.810717055349734`,
      2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{63.095734448019364`, -0.6269768407923463}, {63.095734448019364`,
      2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{100., -0.6269768407923463}, {100., 2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{158.48931924611142`, -0.6269768407923463}, {158.48931924611142`,
      2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{251.18864315095823`, -0.6269768407923463}, {251.18864315095823`,
      2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{398.1071705534973, -0.6269768407923463}, {398.1071705534973, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{630.9573444801937, -0.6269768407923463}, {630.9573444801937, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1000., -0.6269768407923463}, {1000., 2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{1584.893192461114, -0.6269768407923463}, {1584.893192461114, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{2511.886431509582, -0.6269768407923463}, {2511.886431509582, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{3981.0717055349774`, -0.6269768407923463}, {3981.0717055349774`,
      2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{6309.573444801943, -0.6269768407923463}, {6309.573444801943, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{10000., -0.6269768407923463}, {10000., 2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{15848.93192461114, -0.6269768407923463}, {15848.93192461114, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{25118.864315095823`, -0.6269768407923463}, {25118.864315095823`,
      2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{39810.71705534977, -0.6269768407923463}, {39810.71705534977, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{63095.73444801943, -0.6269768407923463}, {63095.73444801943, 
     2.445158658974164}}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], 
    LineBox[{{100000., -0.6269768407923463}, {100000., 
     2.445158658974164}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.1, -0.09090909090909083}, {0.1, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.15848931924611134`, -0.09090909090909083}, {
     0.15848931924611134`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.251188643150958, -0.09090909090909083}, {0.251188643150958, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.3981071705534973, -0.09090909090909083}, {0.3981071705534973, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{0.6309573444801934, -0.09090909090909083}, {0.6309573444801934, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1., -0.09090909090909083}, {1., 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1.584893192461114, -0.09090909090909083}, {1.584893192461114, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{2.511886431509581, -0.09090909090909083}, {2.511886431509581, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{3.981071705534973, -0.09090909090909083}, {3.981071705534973, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{6.309573444801933, -0.09090909090909083}, {6.309573444801933, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{10., -0.09090909090909083}, {10., 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{15.848931924611142`, -0.09090909090909083}, {
     15.848931924611142`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{25.11886431509582, -0.09090909090909083}, {25.11886431509582, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{39.810717055349734`, -0.09090909090909083}, {
     39.810717055349734`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{63.095734448019364`, -0.09090909090909083}, {
     63.095734448019364`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{100., -0.09090909090909083}, {100., 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{158.48931924611142`, -0.09090909090909083}, {
     158.48931924611142`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{251.18864315095823`, -0.09090909090909083}, {
     251.18864315095823`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{398.1071705534973, -0.09090909090909083}, {398.1071705534973, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{630.9573444801937, -0.09090909090909083}, {630.9573444801937, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1000., -0.09090909090909083}, {1000., 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{1584.893192461114, -0.09090909090909083}, {1584.893192461114, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{2511.886431509582, -0.09090909090909083}, {2511.886431509582, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{3981.0717055349774`, -0.09090909090909083}, {
     3981.0717055349774`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{6309.573444801943, -0.09090909090909083}, {6309.573444801943, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{10000., -0.09090909090909083}, {10000., 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{15848.93192461114, -0.09090909090909083}, {15848.93192461114, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{25118.864315095823`, -0.09090909090909083}, {
     25118.864315095823`, 1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{39810.71705534977, -0.09090909090909083}, {39810.71705534977, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{63095.73444801943, -0.09090909090909083}, {63095.73444801943, 
     1.9090909090909092`}}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], 
    LineBox[{{100000., -0.09090909090909083}, {100000., 
     1.9090909090909092`}}]}, {{}, {{}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQLRq6dffGbKYDErElF13F39ord3TEy1T+3Q/jS6Ut
c78q9Q3OVwTLv4Xz5cH8u3A+AxTA+JoQeXsYXw2iH86Xhphvj2Y/nC8GcZ8D
qno2OF+hfPrlHyc5HVD188L5U87s+So/RcAB1TwhOH/G3bWNzs4iaOaLwflz
3s3jTf8kDufLg+2ThPMX/O+f2bVQGs1+WTh/qUCj6roAeTT3KMD5VwV23nhR
r4jmPiU4P3zmxnlV4cpo7lWB828qrkrh0VdFc78anB+9apHWPDZ1OB8AN3vO
DQ==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.232356247657727, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
     Automatic, Automatic}, {{{-2.3025850929940455`, 
        FormBox["0.1`", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.3025850929940455`, 11.743183974269632`}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.206072645530174`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.611537753638338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.89921982609012, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.122363377404328`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.304684934198283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.458835614025542`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.592367006650065`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.710150042306449`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{{3.718846132591881*^9, 3.71884617288659*^9}, {
   3.718846226978334*^9, 3.718846343911129*^9}, {3.71884637969797*^9, 
   3.718846398315515*^9}, {3.718846453988811*^9, 3.718846463434947*^9}, 
   3.7190824212249613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$HomeDirectory", ",", 
      "\"\</Dropbox/PostDoc/2017_SalmonStrays/manuscript/FinalDraft_rev/fig_\
contSD.pdf\>\""}], "}"}], "]"}], ",", "CPlot", ",", "\"\<PDF\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719082844236074*^9, 3.719082855907892*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2017_SalmonStrays/\
manuscript/FinalDraft_rev/fig_contSD.pdf\"\>"], "Output",
 CellChangeTimes->{3.7190828602303743`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.71884669634621*^9, 3.718846701988805*^9}, 
   3.7190864612430677`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"N2", "=", 
      RowBox[{"N1", "*", "R"}]}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"R", ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "0.0", ",", "5", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"mvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0.0", ",", "0.5", ",", "0.01"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"offset", "=", "0.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"VarMRMD", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", "R", ",", 
           RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "mvec"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"VarNorm", " ", "=", " ", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"P1", "=", "\[IndentingNewLine]", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{"VarMRMD", ",", 
       RowBox[{"Contours", "\[Rule]", "20"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.0", ",", "5"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"BarLegend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "175"}]}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<m\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(N\), \(j\)]\)/\!\(\*SubscriptBox[\(N\), \
\(i\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<\[CapitalDelta]\[Theta]=5\>\""}]}], 
      "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]1", "=", "0"}], ",", 
      RowBox[{"\[Mu]2", "=", "8"}], ",", 
      RowBox[{"N1", "=", "1000"}], ",", 
      RowBox[{"N2", "=", 
       RowBox[{"N1", "*", "R"}]}], ",", 
      RowBox[{"\[Sigma]", "=", "1"}], ",", 
      RowBox[{"Z", "=", "0.5"}], ",", 
      RowBox[{"\[Beta]", "=", "0.001"}], ",", 
      RowBox[{"\[Tau]", "=", "1"}], ",", 
      RowBox[{"rmax", "=", "2"}], ",", 
      RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rvec", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"R", ",", 
        RowBox[{"{", 
         RowBox[{"R", ",", "0.01", ",", "5", ",", "0.1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"mvec", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"m", ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0.01", ",", "0.5", ",", "0.01"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"offset", "=", "0.1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"VarMRMD", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"m", ",", "R", ",", 
            RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "mvec"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"VarNorm", " ", "=", " ", 
      RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P2", "=", "\[IndentingNewLine]", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{"VarMRMD", ",", 
        RowBox[{"Contours", "\[Rule]", "20"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.0", ",", "5"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "175"}]}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<m\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(N\), \(j\)]\)/\!\(\*SubscriptBox[\(N\), \
\(i\)]\)\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<\[CapitalDelta]\[Theta]=8\>\""}]}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{"For", " ", "density", " ", "dependent", " ", "m"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "5"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"m", "=", 
      RowBox[{"m0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["N1", 
          RowBox[{"1000", "+", "N1"}]]}], ")"}]}]}], ",", 
     RowBox[{"N2", "=", 
      RowBox[{"N1", "*", "R"}]}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"R", ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "0.0", ",", "5", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"mvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"m0", ",", 
       RowBox[{"{", 
        RowBox[{"m0", ",", "0.0", ",", "0.5", ",", "0.01"}], "}"}]}], "]"}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"offset", "=", "0.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"VarMRMD", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m0", ",", "R", ",", 
           RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m0", ",", "mvec"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"VarNorm", " ", "=", " ", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"P1m", "=", "\[IndentingNewLine]", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{"VarMRMD", ",", 
       RowBox[{"Contours", "\[Rule]", "20"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.0", ",", "5"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"BarLegend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "175"}]}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(m\), \(0\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(N\), \(j\)]\)/\!\(\*SubscriptBox[\(N\), \
\(i\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<\[CapitalDelta]\[Theta]=5\>\""}]}], 
      "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", "0"}], ",", 
     RowBox[{"\[Mu]2", "=", "8"}], ",", 
     RowBox[{"N1", "=", "1000"}], ",", 
     RowBox[{"m", "=", 
      RowBox[{"m0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["N1", 
          RowBox[{"1000", "+", "N1"}]]}], ")"}]}]}], ",", 
     RowBox[{"N2", "=", 
      RowBox[{"N1", "*", "R"}]}], ",", 
     RowBox[{"\[Sigma]", "=", "1"}], ",", 
     RowBox[{"Z", "=", "0.5"}], ",", 
     RowBox[{"\[Beta]", "=", "0.001"}], ",", 
     RowBox[{"\[Tau]", "=", "1"}], ",", 
     RowBox[{"rmax", "=", "2"}], ",", 
     RowBox[{"\[Theta]1", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"R", ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "0.01", ",", "5", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"mvec", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"m0", ",", 
       RowBox[{"{", 
        RowBox[{"m0", ",", "0.01", ",", "0.5", ",", "0.01"}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"offset", "=", "0.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"VarMRMD", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m0", ",", "R", ",", 
           RowBox[{"Sqrt", "[", "ngvarsimple", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m0", ",", "mvec"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "Rvec"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"VarNorm", " ", "=", " ", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"P2m", "=", "\[IndentingNewLine]", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{"VarMRMD", ",", 
       RowBox[{"Contours", "\[Rule]", "20"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.0", ",", "5"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"BarLegend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "175"}]}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(m\), \(0\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(N\), \(j\)]\)/\!\(\*SubscriptBox[\(N\), \
\(i\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<\[CapitalDelta]\[Theta]=8\>\""}]}], 
      "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CPlot", "=", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P1", ",", "P2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"P1m", ",", "P2m"}], "}"}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.718846732029191*^9, 3.718846740615056*^9}, {
  3.718846786709051*^9, 3.718846792861332*^9}, {3.718846829172995*^9, 
  3.7188468871520033`*^9}, {3.719082903404612*^9, 3.719082947571541*^9}, {
  3.719082986698655*^9, 3.7190830482657127`*^9}, {3.719086349485395*^9, 
  3.719086370452154*^9}, {3.7190864061706038`*^9, 3.719086463982418*^9}, {
  3.719087237197548*^9, 3.719087241648562*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{GraphicsBox[
         GraphicsComplexBox[CompressedData["
1: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
ZQ5kebriOD/ecfpAlqdJ3o/3Pp6yhdXNbOsFTX80QPp+2rFcx0Z3N7N6XUfP
TSde92d5O1G9fusJzTazuuE0p1bOsv4sfymdBtUafGYTq5tOnet6qrkjy+OS
yHFRpWpvYrXjQV3moQX9WD67ZbX6knhhI6srC9OTW9/oy/LaaFVEqZT2G1ld
xmlW9jptX5bfmmUc96+I38DqgXHlDVtm9mF5DqoaOKnO7A2sbjbz0uvlj3qz
fLvVK3V5qv0GVlcuDt7u3bG39P0Kt8kVV09cz+r7xUMOjw7oxfJfvl6NgQeC
1rHaseiMl7FJL3Y/KOwpzB4hrGP14lZHFJ0CerL7g31q6qDay9eyerpNQfMZ
HXqy+0Wtkgcqz0xfw+qUsxVN1R/0YPePem3PNjo4bA2raV5aHxg651XSZ5aX
0/V7zq5e/ft//35+C6moHTVlVp2HZKMmZ0bH5jvYfkjz5Fs9+6FbyyyWp8J7
pU4FpPxgeWr57cjoqStyWJ6GnrQM/F06j+VpxOaoy7eu/mR52j7nkHPsECvL
U2rysox+P36xPOWPOWgdvq+Q5akouenwEg2KWZ6Km05ZPuL+b5anx+OePm1x
RcpTh7n3dlTeUILlyUedOzrT0ZblqeDZikC/8jKWp++jy05yypDydEjfPvz9
VSlPnw0VE+ZsUbA89XhWtfs7JzuWp7INnjdYdkQhVrkVPGmfuyu7f9B8ZedP
POBUWcnyZeNRe8rSuXbiCsfrHwZOPMDuLzRvo8bN+3Xli5Q3z4GpHVWiUtyq
K+67rZ8Lu//Q/H1N++SquSnlb8RBx71tBZVokdllFg7Zz+5PNI/tl651Grld
zfL4893X28Jblbi+X1DLO5+d2f2L5jNj7AKl1xANy+cvsUEpzyC1OOPYhKoJ
w/ay+xvNa3QzxwWvqtqzvM47MjL2+Tb6+wy2kNYLA15MXqcQ3zdIaql4t5vd
D2me97443aTMdynP+qIxfZ4Ntxf9PgcOXeiyi90vab7nBnd52idEyveayKw2
R+toxXvPGg/UjNjJ7qc07yN2n/+2fKeO5T3zjr9XbatWfHtaX25Fyx3sfkvz
/3H/wtfHhzmw/K9Z8qR4XbROPHRh8trMWtvZ/ZjeD0oVZ5eNrK5n94OJ604M
P+3uIDrHXQgrV28bu1/T+8OkgwU5rzOl+4O778fuvjP1YveQeU+tHbay+zm9
X7Q6JZ9cPE66X/TpVXpLSAXpfjHWucOXnXek+4XHq6Lu5i3S/eJb247XTQ2M
7H5RY09o8KgvBnG8PMPffnwPdv5YL0asbB6/mtUhfkPPre5vZvd32h+d+eOd
xwGpP795RhnjEKO4JsjdcP9nd3Z+sSjO1k4YsJrVov1xQ95NV7YfnOo2Qtmp
sSu7/9P5Px+tcqlmleYvTKuw9HqwUZw39XMnO7fu7DyU17lTf3XSKlY/dNt8
+oTfAbZf9D1Wxnt7gwNsf6DzU0IWJZ4eL82PiKn2yKm6IFb6dGb86lbd2fnK
w+Pzi3XjV7F63itnx0mBLmw/GRYzsdO1zi5s/6Dz5R873a1/V5p//7e3/uUu
QWy//Ezum2fd2HltfsDcS8+/rWT1B/FDkzKJ+9l+4zI6bki12fvZ/kLn75vX
Y41/AxObn11llf24H4J46LCudfGWbuz8V3vng6DETStZXXHGzOQ1dvvZfnR+
UU7ni333sf2Hzh81tY6mias0P7LCk62PR5rETmNGrHBt2o2dJ58tq9e+cvmV
rO7yy/tYoosz26+WzOi77f3LvdLn8/6bP3nKp42XrNL8lFJfmnYIN4mzpg0/
O/d1V3Y+ffXjZc9V11aw+kf5at86nz3M3s/9vb+YiWHFvm6XL4eS5o2Txsi3
u5J2fcp83rAnj0SXmvNYaHPgz7l1UJcFo/LJtCYp7oVGF9KxYeSQoqq/yHuv
8PN1dPtJ15oz7Ee8LSANpkx57tzTmTSscz95xoki0tihwdNTJ/aQdXWc978d
85vc/dUqYUmN3eTh4rnqhrvo75sxk7n1C6Jcx+aSV5+WZor3dpJ2D0q8ODql
hLj67c62M7ftID3js//J7mgrvpscXDq1zTHp/WC3+6OrjdtORjacdWbQPzKx
Zp/VXwzDPNh59si6H9refbeRZ4P7/nj2VSbu+zXWJefTYXa+fT1xowPpu5Xc
262qfjZKLq5+YvP1W9pBdt59+trm+2YHN3beVR3peTW8n5m4lBiz/IhMJV56
Gtf5ZoArcXLqkjb6uUrMdKxbqmJ1V1LRuvvrkkC12P2av13NIwfIxZGryufu
1ohXdQte9ibH2P07ctuNwzXKHCA9+r/MzJhkLx54KK7UffFk9+u+k0Zu3OTp
Qr4cXTd9fFutOLfj2qIvlz3Y/fnRuToxV2u5kF9tPCpN0OvYf8/Oy+O8XkUp
RTfzkPLBe4+w+/PbYYGzel3dT2ZVeLEr961OvJ1j3zJ+jTu7H2+Y2a3Hgz77
SeTpTZXq3HQQw7vOjvy+5jC7/zbRzssNubePDN7QavZvZ704cFvBs+Z7DrH7
7djakelDbfcRVdHIyuFNDeLF09bORWcOsvPz061nB0d1cyYH0/ePfeZhEM/E
O716n+DGzs8XR/Ydusp5L0mr8r1lgsIo9prpfmNus73sfurar82TYIUbO09H
1O/f7efLPaTmSr/6J+cbRbVxgGfR7j3sfllG97DT3ZZ/xic02D4y7c/9cGd9
dfPPu9n9bk7/+wlrDuwm3dMDxmR2EcTut+P6BQzYze5Xa4afH5RW6hi7X901
vGp5Z9hRdr9aXOvM4xs5u8jiT6UOzD4viNVuxnauf2MXux/tMTvPGn3ck92P
diYodcrvHux+tK572fE1xuwipHxoemwpkxjystHO/rV3sftNWn83hy7dPdj9
5tMA80RX7yPsftO/5vyiWfd3kh6J2oxS601iWNcWz5Ldd7L7iZNl7cy9siPs
fvKmgqdP7Cx3dj9JOf0mtUvbnaSytW6ZXh9N4sNi3dzNhp3sfjG/bt/4rn29
SIdD34aYvgX+9/3zY6TKD+sWx+RA4uf8VDbHdIwklG12cojNV7Jgw8nPl5Yd
IcGZv2p39ssk8ZVa3m7vdogcKrvNUOraD/Ks2+Lk8a3dSKeitXYjL+Ywr9Hu
8jOfDvhCgibLlqwd7sPez54u9u1f0OQY2bipc9QBjY3Ye13S53LrTpAeUXHj
J/l+IMWvs3wmXPckexynnHqQYyOOfbBtxdtCL/Z+t8qFG/9UGe9BVq1ru87l
+Z+8LDrS91mVIyQp+K1f+whb8duRCLsi62GyfqqQZDwlE+0urDqx98Mh8iY+
cOiAHXJxg6XFZOHDQeJnXBxZcyb9/v0xYsyYd+Lgst/kVHDSsSV5bmSE46H0
0F524pzAYZ7fTG4kyO5gnU61lWKqz6ZelxS+7Lzqu4qMD089wc6jx6LfP9Xf
92bnzV23Al21j7zYefLmlSbHWyQeZ+fFg6mTD9jZHyOr3fPe7NRpRa+h61q/
JEfJ5iEvklt+0ood7r/ptXGtJxnTq//7pnd14j83ite3i/QgI97Httvj7SCO
69D72nSDB0m39FzvtEYvBh9otuVbSV+W35DWveYun3KE2E38tqNHfYPotlyx
fc00H5bfPS+tZ96HupOM5N8Haxw2sP8eh2Y3LQoeYS8evZ07xSH8BMtzftlT
jUhld1K4qeGOe3KjGNW+w/q85MMszx3j7ziFVj/B8vzC61nTqL3e7Lx0Ycqs
n6W2HiYrOoXsar7QKMbMTh17vedhlu92U0ukLyj2YuehilU9ptZb6sXOQw6N
51jUmYdI3gHVrDkvjOLbInXQ3ZBDLP9fyyfPTXhznJ13RsV3WjDt3TF23klz
PL8jYvwhUnfFc/elvQXxZVYtx+ctD7H7w/nkMsO+PzlIWnt3EAcFCaJjpX6H
b1w5yPIfrYrx6NHvIDlb/lNHRVWTGHS1d6UazQ+yfBcem/J8y3030nRFTEuX
PSZRmLz617urbiy/kdMep86v6it9/+tIzX8sAT4svzVLLqsxp5cbkTWZ4Jr/
0yR2cHCYGdfRjeXX/p+r2vTxp8h9l4Vh+6tc+m+/9yVFATXvXc+/yGq/c68O
bavwjjh5ZgS4ffAhe6c2PKZslE/Wl8uSDV16gtw4HTVvaPtfpOa0sqrKjb2J
/1njh1ftCknR5zlJAStPse9PvcmY1GqU1otU7NPCdnjjYuY75+67kzfnJyk8
+83bOe0M219DohuuzLDzJatTDVs/v5SLV9eMmz1DdZrtt42Wjetf1NmHDNM4
t1kboxAb1ParvW32SfZ+0XFJ/duZO06QeY9uFjQPtBNXVS7pOv+pN1nTefbP
bp5K8dOQAQnDWnqT73HrTrzYpBIfPI9zOH/Yi2xMulix5gy1WCkqaOtBmRep
O+1jz4796PstXxK94VjpuFFy8eaFcmUCPh0jqi3XPLo2thff3e1XplvAGWl/
rjq+fINTp9l+/Dk/QeV+9hTbb4UzJT7tCT7J9teu6/r6jXjqK72fqZFi+6Cs
L6nf9F71wrkGMXuGtUpPHx/S4tPjFN8XBjGogfKUe28flpd2xk4bQpr4kCXZ
94TifkZxxavxY6e8OcHy8Oa5XFy66yz7+l898PHv13/y+Cmq1W5diFGssfT2
I+2f+yf9+n+Trr3WJvUM+/qn//+d9l7x6F/KIP5+PbHqmQZnWB78fmibLB12
gpw8mLowtZ4gPjVsfji5wgmWh9SEn6ubbz/N9ssvx4Zmj/xwiu2X3hPTnNt+
8yYT5CkbJrv/yYtQN7/jLW+Wl5PNEt+c7neK7Ze9klZUD7p6ku2XsrWrX/7c
4U18wuTqAKVJPBa/ZujiCd4sT6ofPT2r1zzJ9stzJUJUxw75sv1S087jwNpa
3qT7+RFFMUtN4qhVJ21fKbxZ3nqVbj/Q864XmeT2rdA/3SSO+7jozbgLXtLP
39uYx40xnSeKwhkbDy30+2/eWbIkdfK+JzX9SEePR1t/rDxDLg+aNLP03mw2
3vTua4ct9y2kZ4pvmylvT5LtvcuunpubS2yPJa0r/9APfu5wlmzunGQ/+sgP
UpDtvTph9Rniv261cYnVRvQ7+UMzrsVpcv1i+odZ1hJi07LVzO/tTpEVQufx
g3JtxVupo5IWeFxg59+Lal2o13dfcqnuxlIRf86/D+J8Rrkrz7HzL11vXPKD
taPr2IjeY489r9LGn+1Hrc6Ue9Pi9Hm2Hz3/JNZstuMs+bjkXqSTp1r0Mc01
ylucY/tTnvbXpJ4hZ8jEId87FezQiK3vfGlDnp5l591XMZPOHLKeJhsj0zc0
X2IvnogduL8zOU2UExaHVxynFbucDXy1bs8pMvpAqjW1h0686+i90stykiye
enjbhkYO4q1WNir79ifJ07G1LjQoRf894FliqZ1njtqhFl/mlGvZwsOXZBW+
12T/0ouevy9NKyrtz/av6GeC24tyF9j+9ERTa8uGOuel82RIZZ9Eco7tP7/S
l4ZljPdj+8v6wZ2mDFpyln29nFk6ZHZQO392f6bXc/V+alzxCpP4oPa5ep/N
F9j9WrW9YFjEgrNElx03K8bTJF6PVmuiSpyVvr5sv8S9jblE5E3yBmz789/h
7/7qTzrdf39zStdT5E2zP28+d58nAWcPhZTyz2Tjb19X9Vj26BnZVvtr+D9H
L8HnO/zJ0Qm3Pm+++4187rf2dwWZP4nyzQ15MruAlPKtX8Hl+TlSJfKwbuXl
ImJbbZ/zmx9nyfjui5uXffubbDs4f9zM8Zfg8x3+5Oq+kMV+13+Ra3fTc9/8
uEBGPfr1fdF1hfgxPj6i9u3zZP+BiMIhQXbi5twevSyqy+z8882yJ/CR5zny
rDB69/qLSrHuHpkiRn6JnYf0JaYsjtnpR3wa3KnX/TT9vMOf9Sytyw6pqBBv
9PSfc3zbZXZ//RXYKXN72iV2f630pZdbSotL7P769UL5yw0aX2TnmxnV3vxa
WcefVKzWvLvPQoNYaUSnvMuzLxCnIXl9o98bxB7da942Zp9n99t6tuKH7YHn
yTz3HQXrRhtFp/Ufv7wYcp7dbxu7OrXeZnuebPC6sDnukVGcvbDUes3Nc+z+
Sq8/5+HZVRHl/nx9lP7VvcvQc2Tf829tbnUVxPcD1/sMr3aO3T8NLl/Ot3G9
zO6f5Z+Mf7C66mV2/xxsk1969Hk/cm/OV/+h1wQxuNStUbv2+rH7Z6sqK/If
XLnE7p/WEXHr3/a4xO6fZ48eaLlC6UfSQ2WPjtYziXfqnLXOLjjL7p+241vk
6oIvsvvn3UmVTblf/Nn9c3H9LedLrAsgXi16VF4R7vPf8zAukyH1U3p5rZFq
24TuDn0up5CVlw5e/Do0gLS5MLexWZ9Mrr94NXL38kvEq5ey/JqP+ax/Tkxe
/ckNPrH654zWB99fzyND7g5dGtDvCjvPRwW3feM0+TIZnOs4M2+/rXizmupC
6LpLJLvzzVZNT8pE7/7fdzoPvUicWmqHtA+Ui9+/ZX0evT6AnSfSFgXvkNW/
ws4PdL2gbZ7HInNKiK7pIVH1fgew+1W3iycvelcIYPt9ycb9mnpsuEzexjQt
N7OqVhx6yjlwTo8rbP8/XW7t0Hb5l4ip/8X6iWV04lGD+y7LkktENi5decHB
QZxWIaF1+S8XicvgnrfLy/SirmzOteN5/iT9jENq1zz6fIzL5Lz1wNj9U+3F
UMWQBuWdAtn9qM38LV+W3ghg96M1jQ/mrq8VwPb72+9PNb196ArbzwNsFePu
aq+w/Xv/9Xp3u9W5SjZOXOY097T3f+ezQPJLfqhVlelSnbTM47HnoUSySpi+
fUpKEPv5ZsTlri+WLLpCNvYZsM8g5LH+020ubt91/T2ru49MMlluZJPgk8PX
3wkLZO/nem3T79LdDiAL9nSuf6WdjRjiaLdy6uIrJKPdxLXV55cQUzVC3Oz7
V9n+FBoztLG/bRA7L1L/3lT/okUNfhPL9HMnVnULJJlJ+002RpU4zG/l0T4b
A4i1YdHrB+XUf16frVXemq6y/at5lzUtJty7Qpzqu3+/XFUj7hzwoUazgkC2
fy2dU+ekZ6k/11OvSZp9Lfr7gwPJMoXX6JXRSjEmuNuzUwuvsv0k19Lg/ODA
ILaf9CTLmtQtCmT7yfDLQu/opYEs37qqY4anLgkkC1pkPxg+XRBD5v8eXrZk
oPR586Tfit0lAslhO0PPiFeCmKmp7n87IIDlk17Pl7isnw0nCmKfDltd3PcH
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
VaX6qcnppFe5O6RfrS9Dxl2KJMfKTej1KSiKjU+sHmMbmpdM0vavdY5+G0nG
3qmZcLZqMhuPHP/Dzyc5nRSHLJmxSf6nNs0rGtMun42PmlOi4OrI76TW6o+O
1UMj2fmIjnssXNBGlfuT9Gzb9Ya3MYJMbzyzcqOPMvFqql9Y9vgoth/S/hMz
5c1mHbEV328fNOB9wyi2/6X2XzvaeUqk9HmOI31+Tn0ZQXzWbP3e74NBfD9k
88kUc4T0PIs6K1WDe0WQvcP2iu5rjKLwcuTRlw0i2PmFrpc5PVG86GoQn6i7
+GoHR7Hzx89ybd1sX0Wy88fNdkum/J4eyc6rg0eVDSm/8Q5Rulrk1ZaY/zv/
RxGhRMZp15pSnX+0Vqz7n//u84O2ZIZWukNKD2xdIqtZJNHUjN9o1kWRaT7L
g7Uvv7J+jXZ6B+/hSazOWzj+ReGCN2ThvOEePdzukPiUPj+PlUpk44ntd8lU
lb+SAS1Mk4WfUcR78tV51wtfs/FqVttF1brnkcuxJz5vuBxJVpyq8mRpaVux
uOaWN+Hno9j5ZU7TC54LQu6w/ZHOF2c4ZFTqX0LM7d7Hw6C6I73fNDnOS28X
RUom6p81Ha0Xpx8dFN10cyRp7bYmZZojfb5IFClxLapgx1cH8fCdaV8/jLzD
zn+T5AeG9EuMYue/Afa6NV4P7pLdfpXna11c//t9/XfIlKH9qozqIdXnEvbc
jZ8VQYpsL0X/3nGXDCs1eFDLtHA2nvjLc3Pqsyek8qlPGS5j77L3h3S8Soer
h9q3es3qTI/Dvao0+Uzer18yrdbvu+TpyGXuN8pb2PgEjw7f6t7NIR3rzp20
7O1ddr6g4+mmig0/1bYRR7S9uSI4+y7bv+ZOu1PhyI877PzwoPyHHVd0d0hS
+ImjPhr6+/XvkFu36907kKcVdVG71s5aeZedt/J21kof8voOO2/9rNfDP7nU
fbKvwfnqm+8e+O/9wD1S3ev6gmHrpbreidXtGnQNJysHdr7w/Ps90ufZovYT
vcPY+Mewb9WOHn5Mmnbbm9680T2yyOibM2n9Y9KkUpdcq+UO6TZq7t57p3JY
/17V/h/zjBZW14jqV2v4rAxSHHasnF+le+w8Vu/C7YYvjt8lt4/Ibo77XMz6
ezb8MHzukmzSNX37N8Wf9exXvxpXQ8xg46Orax17dismjeart6/sd4+dJ6q9
GNbQU3+fnQ+2jel9d6T1DnHds6KPsx/9/dL3SFapwEZZrezFek08d1a6fo+d
Z7c/6+jtqLvHzrMVav0MixkfTVaUjrriYzjw3+9TvU8Kfm0KvBTrwurEL4FF
qS3CSOzsnQ4fB0eTSw1fLFthf5uN7ylWhTbdlkA+rTDNLBt0n7RbMPu2Y9cE
Nm4/zyvCodNLVo+KnrLLP/0D6VRt3vX2sffJpG+Lfs/zfMHG0776bFvd4we5
dNc9KdTlz3q5UweqV71n45snmqs1W1RICkdONOaUiWbnhZS0559f9ohm54OO
z7d07Gq4R3L21XKd35j+/tT75FaH6130Z9Tics2mKTUqRLPz5lS7/He68ffZ
edNtePzpbWdjiJ+yb67THBd2jqwxySNmaH2pfhvd3Zq5PJToVri/dQuKIY0f
txy+VnaLja+pakjeuCOelFrp0X9vqxgSm1TXb0E16bnw/Vf237ZrjfR7Gcqu
H1LNsPA96Z0WdOL1rhjiFr7o8aHe0u8FWtrD49zF5lnkVWTzxjN8otl5io7f
LmMdPjjuFxEMZ9P6HYth+3ulT3NO1p5/n6y6OUMxZDv9fYDRJLbCu5vTuqjE
a07Lftzyi2Hnx+1NLlVY9jyanc/L3z+5SMh+QNp3K85Xpez/7/dXxZAmPj3X
3D8s1bODvJ7F+oWQqJ3DenYtFUuWqTXtdv9530bHMwYmtFG2fUSGzlxz9/Ss
GPK91LrXPc2ZpHzK+kYLAx6QmrEtJt1r8pD1T/g4bsLwpKesDlwx1/5Zq3fk
yszKgTPePGDnUTo+JMP+QcN2mWRc82dd3Y8/II3dc+cf2fWWjW8/9KKX0wAr
mZke5rulyQN2Xpo2Z/O17+Vi2fnoY48+C4b2iiGXXBPcYw7Q34cVQ7KO+8w+
XGQnFjvbR1l3PmDn7wZdywcv6RBHLrb0v3m9//7/3k/FknLx92b9FvYTZ9vV
hoa949j7WjruPbFufIWim6wWNUu+zlkfx+oZ/5h3jHZKI0ev9tu1qkEcefnC
xr1V11jy9rzW9mC7WPJDUXvMis5prP/3LqX7PO1bVnveSbr19Oo3Yqpp59O5
ahz8vptY8mtYpF724yerW47qMuFtskL0fe+9d8OsOHaePhbZda3N4lh2nu6j
upd7ZetD8kL+8OBIn33E5cyNemMWxZHq7d/pmy+nvz8hjmQufxB2qMk+Vo+e
e7ZrhT/j6QmrZcdbx5FLaZdejBj9lY0LMxc11lgesLq4XVDzwfpUYiNmD+h4
4iGJ69fvwvRlMWx8SmgFda+fb4hpl1f3VvFxZH45vwW3glOIambK+NGjYsmn
71MLxIifrL9d8JwZB4WvJKdCcOl6B+LIXPlKl8mv3rDxN1eP2y25lkfMi2wv
PD4Tx84Dq8p/cjgyNI4o31gyrryQi8mxs/dvvRcHv18hjozZbjz04p5cjNy7
dJdl9UN2Xr7sUuZiwsNHxCvLd/+PEGfy8Lrb8Wv3/vz32+e44/TU6/+9v3tI
Br7Y/XRvf2dWF6xq1+7tFGm8e9VawrjhMaTcmWk9yo19BO9vHxLXMne69H2Z
zOoGYW6736neEPeRRaaUCY9Ii8Xio9/9pfFtDp/Lzfb6TDyrrfnm9MdbfTa6
fsDB12w8fILPjbCDuaTcj5M/Lpx+BP/+9yFpuyg5eugTmVh17u8DrscfsfcL
Fxonjfm0O578buEUkfphLymbNPirjUM8Oe+4YcuSmfT7WPGky7rxZbet3cvq
oaO8iyrPuEb2fq477uTuR+R6bJNGa0I+sfFM5c7mRzXRZEDy2uZuyngy7VmU
a1aJaDbeqFO5xN/BSax+OPBpyNvqr0mbcrdveiyLJwtcq/Xf8jORjb88O3Rl
CfETmVLJMHPY/njS2eNNzc0TLWxcjNA23bAjh0zuLladMSCenXfo+KMR79Iv
ZtmKR8rlX982J56dx73Dc86Mb5JADC6np9tV20tWnSlqcOFaPOlk2V+/xoar
/71/jSeWjiEtNgXvYfWU3d8qDV0njc/e96J+xfw/5xiboebsG/Gk3OSIR+Ne
3WPj69yup689lUhmdHZqcK97POl9tsTLUZVy2PhvV0+3Jz0sJHObh09BuwRy
/OYXj/pXnrBxl/kDPo0q/kjK9OzhGZcWz84vdHzFg5bhd1yyyZIuTVuPTYwn
OzYkX/916iNZdmnO5Hfp8ex8Qvv17wOfdK9qKyZ2f/AkrpT0fPXVHp8qxCQm
kBRtjc4RM/eQ8kbjr68TEoh/lWo3j54OIr3+d4NNIG+n/Fr+yG4Pq1NPVKw9
/aQ0/lVzImVQ7l2yIjcrcsnsBJKo6PfW9PAuG68hf/zF5PmE1Tuvdrk80eEV
6d5HcNDvSmDnXzq+tcPTa2LaB7K63vew+tMSiF2NpV1LP3rJxrMi8qbcuvCD
1A/6YLEkJJD6y1Z6eLx/z8a9Xl1J6DyhhDjt1vARZeKk58tXuzL9Q72Vj0mp
HeYsl1u7icsRkvxQ/Zg8IMu+lHwZyJ5PH1bo2tU6djerXW5cfbTtmTQ+PSQp
f4XNXTLj6egTzSo8/nM/ezzQPvYOG2/++Eivazcek5CssJ1lrH++3nKfyxee
e0z81lYu3n0jgZDzpWfv+OcH65+gnb/79eUXrO5TffiOujffk31N3g50afmY
eDv21mwrL42XPu7aOiIpi7TwjZo0oYL0vPMObUJbastJzy+n/Z+Xdv3mcd5G
/Bkz+nazF//3ee07Soybrd1kEuUl6mxfl/Tnv2fs4OtjT5vEnfNal5jkJT3P
vYJimW5zxSeEeK5s0LjCbqJIfXlh5JXHpCxplFRYNZA9r3zUq9YjQ2/vYrXb
5JqBNSpL471W57rblfnz38u0f33X2MdkQqfdSdtSoth43SszUn/lJJCLVb++
Tfnj/1i989nY+AQ2LgsJfbRiwnNWR2V/mm9/6x1xNxRWqSl7Qo5lhw2oteoZ
G6/YsHBZoTGLpHVc+7jC7cckpyjsH5/l78gbMbfr89V/rv+E+HJ8Gel56lfP
zc1+IrcRcwZ3/Oholp6/Lg4Z2v31COn53p6vHlzZ2uYxOfnrVLIgM4mD3y9X
55b9v8/77t3EIcxxhSC62k5b+CT8Cblu7q1bv2UXUU8dXP7QqCekYrzLkKKF
Aez51U3OvO+rqr+L1cMHzTj/fp40vipjzGvfP+9rlcc33ry5+gnRNVyplH2P
ZOPOmfrBQ9okkINP7y5emvOY7HjhPO6pZyaJaxwx2GP2E9Jy6NGvVX/Hs/7k
rmm6bWWesfrRmAm9lAlvSdeInEeNHz0h42YusFT9KD1PfGLEicSJwzLJt64n
Nzn7PiERQoO0o43fkqPTlFd3r/+/zwd/8Wlg1J6nxaSqXztf+8XS84fXPtgd
3Laq9Pzbdw1dLfVLPSGfPTs2HHfeKHa2reEtey49b72u51Hnayf+fL2ve9HD
cZQgPq4zYqjrEen563S96W1/L7y83igWmn3lzS9Kz9/9p+/U1ArTEsmXWwXl
dufuJDbBS4862yaSugVxhz/FXpGehxw86vDbYztZHVZPbH08Who3nbyYWmt6
JBk21008Wy+RnH92Y1RDYyQbn5m6bV/KpnjS0G/i3I3VE8nz7PuDd7eKZ+OT
xqhtnFOl501bVruTzI/p5PCZvDlvfv7f51GPK26109XpO7F8e3+k7kjp+bp0
fM4IQ3TtkCJS7FaxTI0p0vNrX6nab9/g8oSccfR/2SXfID5Mnjwxftr/ff5w
NdFti9dBg5h/r8uHq92l57OO/1DdctwqPc94ko/6+3hNEnlVf9SR1fN2Es+k
+5E9/BLJ2jmzW4Y2vcKej1sw9YtqfbmdrHbbsmpDj0bSeI3wLTc3eUYQvf5W
TsW0RCKzm1fyeYcIsmb16ZobjYnkTvTXZReefWP9EXanCyb/OefQOu/nzI2T
41OJakVCo5NPE8n84yeGl/n8kI2H+o71uWOfTrp3dpdPPpBIgtJmttnhn8rG
+7SM6W/SfyMll3/fVHNrImnT44vm5e83pIy6yjX9/+v5qrQ/5tR+5T9nC0ng
6R+fNpRNJEXVc9s+7yA9n3a/j6Lx/uV68U1BpOfAd9Lzb4v+KdH6s1l6/m2T
+yrHo/5J5NzPNh8PfNtBrizzG3THKelPTiNXuxy/zJ6X2qC2T6WKR3ewekDZ
7+dyPKTxbovKL45NCyeqFrtktbYnkXnfm99QLgxn49ZztYr6DXnI6pRf/cmO
Zylk5tKnhyu5JJFjXsHPZiyLk3zz0o7tB74h317UXR04KIlsrFqv6LZLChu/
9bJen/MPvpBxNbyG7BiZRH7+c75mdd0b8qbM+HEJ3n++3joL5iWzpee/xo1r
IxtypYBcdt1YvdJi6fmX0d1/ZSVcTCSuuYPH2WVJzzu9VFxm6bBnOrFvoU/p
687S8x9n/jq9u39b6fmPXbf1WpE0KJn4Nxhxsu7SHWRLh+oT9dYkMmP3useH
S11mz880jbnUu1ytHayedHpYtRfGy2SVe/kiQ+Ukopz+fInxgfQ8UN8Wk0s2
rRROnB/2qRPXIpncPJtz6s75MDZ+uMn4VJN9HKuto0sez/6STLo6mZvKeiaT
haLs5khdLBs3f2y6b++h10Tmfb5CAyGZlMtYUnLV2mQ2rh9cMjD7xmcSGDXh
eFiDZLKuToX0DlVes/GxzVJHdbr7i2zteKhX3xFJpHx2l3feTtLzL98UxfRu
Nkwrthp/rOvzLtLzATsnRrTY90F6nuamAzM+qH4mkyt+pXadK7GDqKd5Lqzr
lUz6nambVtmVfq4pmaR/SLv3NnA7q2PNs8732XeJDOy90avtP8lEV9+0fGW9
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
          "], {{{}, {}, {}, {
             EdgeForm[], 
             RGBColor[
             0.9897582470267416, 0.844395617566854, 0.5682505657828989], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwt01dszlEcxvGjdmvP2rVHdbxa1Kw9I3YQs2rvvROJkRgJoUqRSCRGESER
F+LCiD0uRCq4F24kbsxan3/6v3je7/M75znjf855285fPWlVUghhKVWm3skh
1MLlOISa8ptwEDXmN2A+NeLX40BqyK/DwdSE34gDqAG/FodSKr8Zx1Mavxd7
Yi4tpv7q+rgGR1Mrfge+qh1CQbUQPuJYdWvtO3EcteF3xfNEcyyhkeqWuB2H
UTN+SzTO+MIqISTwXUoIJyuF8A0n+NiFDmAxptUJIaN6CHlYrv7jQOrIj1IX
aZ+Dk9S/zVOIVepqq2mv+FlfOl+dP6+vvGoIt3GEtVvYwzYcTs35rdiP6vGr
8YjcE/mL2Ms886w1Brfaw3N7O4w35TLlb2BfskxYhd3J0JCOuWQLIQcXUjp/
AQuoK38Wp1EH/ihOpfb8Ifxg7WPOuRxnqDtqL47uzkLfTTodC9XdtJ/DmdSJ
L8GJ1Jbfh6X2mnBu93C2urP209iLUqI7wqVRzS/DrxpfuItm8pPV7bQfxI/q
Z+b5jddkFsm8x0x9thky4ntPit9Qbuwrxe846ovW6CmXHL0PP3fNtUDnm1oV
maQ4VznOutaQLef4Qxb2oBp8Il5rSZybklKx0AFMNdc/Pg8LnF2Wy1iPecZA
WIG3mEybfo191K42rMQ7zEMLvMUy+sF/wbn6usicwf3WyDH/daxtfLZNtsG1
NN9ae/C1XI78KyyOxpvnCubreyo/BUvVR7Xfx0X2WuLjt+FPfY/tra723dRd
pgQvR2/LnKXRd6h/ybTDTO/ggfcwAsuMP+HwPuE9uWz5O9Eb13dEJoHX1Bna
r+JtyuJv4S7rFtt/ER4y/q/9XMLe1IOfiKm++aX8VHxsTIJ/mFxxD9H//VT0
H7Cnny5sL2ab67jvHYxv4lwZvozukn+Os+Qeya/B/7cLito=
                "]], 
               PolygonBox[CompressedData["
1:eJwllFdI1mEUh4+Waa/f/7Od2dBsm9tSm2bDFlFaEtFU02yZtrUgqIQGGFqW
FQRBw4owiC7ECzOyZV5IKNV91E3QTcO08RzPxU+f711n/M854/P35ZQEikge
6o8q/SLdwSKxISKn4HInEsH6KLQYTkBsywAUD4dx5iU/fiMPjnO2F4Ri4SRP
pICHL6NEODdUpJ09CRBZB8c4s5uKdsJVaAIcjdbqfYQrfTYT4UNoBDwcLYDr
USw8HRXC93wifwkoqR978GHWRordyYQP4EMCzuWjMrhVbejbqAVuYq2HvXiC
aISPsTaGvdEoC67zW262olq4mDXCEP7JTP4cdZarcLQIPoHGwWPRcnhsmMiW
gSLVKAI+7yzW8SgbPu7srNpcCncRw3ZiuYI64Qpnvug3WQJn8cZz3vqJFsHp
nPlHbpPJQRp8kjORYj6shM84sxWFVsP70CCYqzIb/kEwV7n/Fn2Ha1mbxN5E
tB4+4iw2zelCeIez2DEvM4AL2GwLtG9QBX8mh3nk8hL6BN9Fr4Isx7fhSme+
qI+r4BpntrQGcuESZ76RapkF73XGXJV0+I6zbx+DCuB0rUGKZRtKhdtYSxb7
xi/h96y18u1+oU64Ah/rAs3ncvi0Z7VRi07CpZx5EWw9UQJf9GxPY6iGm53V
TgJqgr/57e3pJOQrnOlZ7b9GGfBHcloUYDn+AK/zbK8X5cDBYXZXa6S/1ora
DDYfNsGPuJMSYG80wKPQNbGeCoefcaYmxGJshjvxqVjsjJ7d5azXdK1Lvx8x
FwZaDorgaL/1suYwCs72WS3pmTXwQ+7EifXcfbiXtTfU5h/UA3ewliKW83a4
0Vlu4tET+DqaAk9GG+FzoTYLNKaz8G7WeKavp1LhAs9yoz2bB3/xWS+ozc9w
GWeGcHYwmgvfRNPgqWgrfMMZq83N8C1ntaJn8rR2nM0qnUE6i1Kc1bLOnGR4
j7NaU5/S4FJntrRn5ug8QcPgoWg+/M6z2aE13wE/8Nus0G9SD9c5i117aoPO
njCbBdrD8bDfs1wm4pAHH3Q269RGBrzfmS2NeR782Flu9Zs06OzxWe/qDAiH
W3w2C3WGPIUjPXtbZ/I4nXWe9abO8G54hd96R2tuGfwfBHmmUw==
                "]]}]}, {
            
             EdgeForm[], 
             RGBColor[
             0.27592008744810886`, 0.40067479111594884`, 0.6568712584969584], 
             
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNlUlvVFcQhV/bZnNfN2QJIQwWOxIIptvduLGZpwQSMS9YRkDb2G7jgcHA
BilSBAICUqQAtqEhGxIWIPIHAizBjiHywBQQo8k+ECmE8BV1LLw4OvXeq1u3
6lTd+yq/aVlfLIui6AIoB5PiKOqCB0IU9cG/g25xj+x+2fbuDDgLmsBC0AYW
RR7DfBvAt8RaBg/DF5JR9D8b/gxPBL0J9oT/AjdI4D/4hHx+gbcbsAtJ36tH
+3+UiqKqiiianvK9+rRfgnhliQ+5me8t8AcogduKsUP+lms7WAz+VQ5v4Eat
b1J9zbJbwHmwE5yTbe+K8inJPqf3Jb23GG+J+5b4E8j5b3Q+TZ6v4J/Q5Wu+
P4c78TlFvfvgY+Am9vdwKuVrx8N12n8BWMu3ND7rkv7cqj4c0Nrj8AZQwK5P
+p5doF469auP5bLt3Xu9QabMY2+X3S3drKfPgvd6MvnXqr+t8AmwCvs+fBSs
xL4HfweWY9+BS+Ar7KfwYbAC+y48I3Y9K+EentdgP4Z/BF9iP4RfBO/XJ6Yf
9mrsR3Ct9DZtRnjugKfgU4leW5mTdMp7UtIsPAmu1cex9978l2gWOjQPbXq2
GVmhHu3XujbpfIf1BTS7G3tPWtWXovKxvObr2ewFqrcdXqK69sB10qcNXgy+
wN4dfObyoEZzlNccLlXte017adUJ54PX0QLPU78axTn1bl7wmprl06j4LZor
03COdKtK+fcm+SxX7/bBNcF1KsKDwWPvUMyc9ixKc9PedDqt2Vuo2eiwXDQz
u+AfVPsD+CBYij0UvH+Wz1z4ClrniPErfJ2Z3sa5GIJ/A3Oxr8JTdT9MS/mZ
L+kMWi12/s+M0WX0+ZZ8jG/LziXtUFBT0vvYrJpe8HySvUbgYdkv4UvklCG3
y7HfSQndRdngc9EYPE5esXLB56gJzmiOC/Bn0nEWPDu49p/DF1XjNbghuM4z
4QHpMGjftUcarg7ez3q4m1wadP7nS9udwfO13lSDzbGfjy2x62D3QgXIJtw2
H3tv70yjjapzE3w/9j1ex97jrPy7tG/9mFg5fSvXPTQnuCZVwWekV+vGJTwf
2+tPnWs73xWKYd9N44ziZBS3TDH6FOdQ7H6HY187Tvm/Vs7/wBP175uk2vtV
/2Q0TTADNZoFsy1uWveiPVeoltHasqM16+5t0Nq0/C23SHGm6t6z+8/u2lO6
f2eqv5/CR2LP+Vjsa7pV13HdS/YPKUhjqz+f9NzWJz2PrL69A0u75v0=
                "]], 
               
               PolygonBox[CompressedData["
1:eJwtlllsllUQhk8LBPP9XwuXSKVQvVTBItKWnVKWgmUpZSmy2EKpuFAKdQFR
kU1BBEoBW0ARImsVjGgTKAkIQU1YEihLWdyFookGLzQqiD5vZi6e5P3nP3PO
nDkz53wZpRWFs5NDCA3QGi7FIZS1CqEWmtGPRiH0xt4HeqD3YvsPh+78X49+
Cltf/usHPdHHU0M4BkfgKMzDNoT/hkJ/dHlkc8nnMfTzMAydDwPRHRMhVKLn
wPf8foA57ocukAEXPT6tfxR9B056vC3o8ykhNMFZOAcLsNUR70yBPhabr+Y4
js5izp4wHEY40sMgH1YTT5skxsEn6BnMOR1KoBTGKEdKIGShx2Ir9DEa+w/8
De2Yqz10Zo5tDG+C8egM2B7Mpv9uxrYXxXchthgUy1SYBneY67bPqbkXkKMC
fEfCkMhyrtw3w2WYj+3xYGMGo1+ILNfDIRf9YmR6BAxCvxSZlk8e+mNi6sHe
k2AF+lls/flvAGSjH4ZsdA50Rf/k8cj/XfSNyGKT7X30cmJaBktgKdRBLWyA
jTCONc4wdjN0QFdgm+0+8s2BbD8znd05P+sWuAk34LrnSLla6mvV+loDsPWH
IhgHF7FdgFvwO6xM2F4VQxE6lzED3Ue+kxJ2dqqJVQlbs8XX1Nq/Mcev0LZd
CPfAFPRkmAOVqVbTqm2deXrC1rzlPvLthK2K/+ZBC2P3YNvtPXXcc6Rc1cOH
MJcxg4P1WL/Iaky1lgKpsAXbZngCJkNVZL2onhsQ2ZgU7zH12oGE1fosuIpO
g7nBevJHxt+XsNhku87vSsgLFkNf7Q0GBbP1QVdAbjBbb/Tn3n+6Q3bH1tNd
/ExzfE/1vmft/U/W20Qs5XA5YTXd7Gems5vNnAODrdEL/Uxkd5FqNAt9JWG+
quH96Ociq1355KC/9n5QPqrRmepbLsJMSEcP5QyHwCDIg1nEXJ5sd8rL6FP4
nIQv4SvYjc8u2AE7YY/fl6dgNboQeiTbHGNjm6PO/1+IXhOblm2+1ort7tId
Mxp92c9b+V3qa2rtE/AFnIOzcBrOOKc9RsVaB7VQDJNgra+nGKvRXVJs78pB
BroNe24NnSDda7qt2/TfJT9v5f9V9Hlo8hgUy4XIenkWXEQ3e73I53X0vax5
OsnO+I+E9cgc73n1/hV/P7TnN9DHVENwRHcd7IKdMB1mQHdiyoSu0A22Y9sG
0+DJyGxd/Ux1tjuwfQAlUOpzau5GOAzf+v2oGlnvOT7hMSiWdM9NR0iD7/z+
lM87kdWAaqERDsNWbO/BFJgK9XpTVTfqdd23sB8+gn3wg9/fmnMT+qr3r3Ky
Ev0pHHAf+TbAZ27Tf2kem3Ki3Ozzuff62ofgoPs0+J4b3XbIY1JsZTAzsh5Q
L0yEYijCNhbeglXyYY8H/Q3WW7wG22ofo7FLsC2GGlgPG7FtgAkw0efQXGOg
EJbpDncf+a7A9iaMgtHQDtvdVlaz7dFzodJ95NvZ61ljUtDroNp7VL2qmlXt
6s79Bl0D62AcjIdXYKFyDsMii7nG59BcOdRvUrL1dK/Y3pQi/wbQt8DTkdV+
lnoAfS2yu0Zn+LbX7HSvwR1egyVes9u9Zqd5zWz1MyjzmlftL4LXIF916jkb
4zlSrkr9W2UeVMFy5RQKYGRkNdnoZ6az+9e/p5Svu+hUz69st/n9Fz26Re8j
dIztDin2M9zoZzjBc1jjZzTK19TaVR5LpZ/VeM+1akS18rN//2i9X9CZ2HoF
+wbtjn4wslzqm+OhyL6Jpvobq7d2CbbF6kH1TWQxKladUVpsb6DeQt2Bugv1
xumt056uobNj+5bTndQhtjlGeI4XeY7zvSZUG90i+/ZRjI94Tgs8BsWiHlev
6w3WW/w/a256sg==
                "]], 
               
               PolygonBox[{{2632, 2631, 2683, 78, 2704}, {3378, 1124, 3376, 
                3393, 3394}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4829851487973008, 0.47344525996071274`, 0.5351461106111715], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
chP//wVbEYv7
                "]], 
               PolygonBox[CompressedData["
1:eJwtlllslkUUhqcrOPP/fxESL2SzLO5SAigCxniBGxLEsrWFCpRNiYFIEDdA
EISoIFsp0kAkImhLawSJEgJEKcoigiGsBZG4IBQEwQUspfi8OXPxJs83y5mZ
M2fO+XJLJuZPSHfOVaFM9Hlwbnyacw+iDfAS79xg2oegAvhDNBQehkrgTMaM
hEegDHg1bTPhp9FCeI23scVoNDwH5cMDUH84xZzR8CgU4AO0jYHHooPwPDQQ
HoQGwt96G6s5u+BZ6BlnNvvB7bFxCF6N2sALvM3VGQbDG73tVXv+Aj6DPoZf
Qifhad723h/1UZ+3vT+rPcErUCFcpDZ4hrex2kNfeDkqcDZmGFzmo+80B/7A
21z5cIT6ks59h+Ovo7HwtbiefLYHvpMzvOnMp/V8H2RMXrZzDVnObYbvCNY3
A12lvyPfb8DT0d983x6sT23/8n0P37PhWaiR7x0p52rQV+hrtDVptrXGNric
tuWoDC1DQ5lfHeMlDy5A6+BKdB/cwJylzC1Bp+Ehwfoq0L1wbcK5cRnYROfg
u4PtRWds8DZGY4/LB8HW1NpVqBqdom0CsbkK1cMdabvGWp2acFa4ffzehVLw
N6zRLcPW3An3SNlYjcmFm6dsrL5bwO8Fi/1sNE/xjzz8ENoI94zzR6Je8FMp
Y7V1hw/F+9H5Dydtz9p7BapEhcF8J591gs8kbazmHICLgq19UPEKF6Njehu0
LQhmoyLeme5ufbA+7VF7rUzoITr3PY96EXw2Yb4ei47Cp73Fg2JGb7Uba44h
9t5HD8AV3mJ9uPYIH0nY3K6oBv6Jtqn0TUPL4J+9xZriayX8RI5zj6Pe6FHU
FXVBeagzupk1bmCrC+s1h095syUb5XArxrSMczT3U2970Zv9zJuNvLiG1mqX
NFs6Qwf4V2970RlXwTfY894MW9MlbU/aWyEqQtPpX4Gv9qHF8FHmTGHoy2g2
fMwbv4LmKncx5n7GpqOe8POoHH5OSpgN2UpjvSXwEW+5RTZnwrXebL2K3oF/
RK8782kpfFs8j/bbTIyWxfN1Tdqb0X3qTOfhK9z5yjTL2SfgtrQdgDPZQy/4
BDZfc7bGIvi4t7XVNt+bTdnWmrnwPzE/KX/VyPfEWGmM9yfhEfF7JypRLDJn
d5bljEp4S8wfalsL3xIslyuntwiWY5RrjqFatJQxZXF8GdwuWDzIHxflj2Cs
/f/Bd/NgtpT/c4LZkK3D6AhqSdtH9K1BvzF+YcLegu5oKnw+1jPVhC/hq4zf
n2Y+lC8bguUW+bA147P5Lon1Iku5IFj9UVsT+NZgtUZr/oK9CzHfa41N8LlY
f1TDNsDpwWJZMe3gT6L/5IPF8GXOcAldQBfRf7F+ql7s9tamvqbE7k3oRnwf
erM/wNfj+1UN2Q9fifVad7oDvhzrl+rRNrgu1lfV4/XwWW+selrlzefyvXL+
Xey3VTDfrkW/0/dnrHc681Zvd3A4nkFnaR1srGqsau2mYLlUOfwkvNmbb+XP
Ld5iVrHbHT0MVyXsLSmHV8Pj9ebS7c2+AOcGy5Wq+ar9HYLlEsXQJey9hU9H
4dvOaBJ8PdYn5fxG+F3FkLMcq1zbN+ZzxXg/eHvCcp9y6jr4xZTFvvqL4Unx
ux5NTlkNVy3XeuPgszG/a806eH6w2qY1h8PNYv1Rfz39c1JmSzYn6q14841i
bjs8OWm2tUYJnE0MZKE2qG2O5SDlIuWoAfDouJ89aAD8drxf3Xk+nBPzsfJJ
Y8JstIk5WLl4SMLuQj6X7xVzTeOaWntQ0mwrRz0C7/X2NvVG9yn3xf3qDqZo
LzEfK4fVwb2TVnv0D/RY0mJOsad/lL/g0pgfNH+W/BPvU21z4R4Jy8V6wy3h
/wEnnnJO
                "]], 
               PolygonBox[{{3719, 2042, 3716, 3737, 3738}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6900502101464929, 0.5462157288054768, 0.4134209627253844], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
d/B/ADulfg==
                "]], 
               PolygonBox[CompressedData["
1:eJwtlllslkUUhuf/S0v7z/f9tS3gDQo1SEVF1hZEqQqUFGRJiGHTCBQoW2MT
AU1M9MJEFlFBurEZQ6IXIosgS1HAECmmREVjBAUKRNEEbAABlaW2Pq9nLt7k
+WY5c+bMmTNfYUX1pBeSzrnNqBNqSjtXk+3cUQl+yDu3l/Z9KAFPQWfgFtQX
fhLVwGvRcHgB+gXuknCuHr6Ycu4NvpehnfCDtO1xZrOd75xc5x7Oce4W611h
vZ58z+B7LSqEr6WtT/6chB/3tta7qCt8JPg7E22Bt6WN+6IGeGfEvjKcK0FH
4Y1p69OYTXA5NuqwVYvK4GG09evsXFuWc73hq/j4Jn2r0CH4D7QcXqGYwGOZ
U+/Mxhi4HJ+bgv/94THh+yYaC38UO3csE99QPXwHG6uZuwYdhy+lLFZaYxfc
G5u74E/RTb4b+a4mtsPRbrgB5cEj0X74Wsp8fQt9CRelbS/aUx8429t+DqBh
8F8pG/s2OgLv9Ga7FNXBWd5io/11hjtSFnudgeN7PnvoIHEGsp+F8EU0m/X6
oxPwA4zZ7ezM25ibCvFWzDzchn5grc3otnxjztwQnwZ4PD6PQxPQRFQXW98c
tByuZc7v2PoNVSk3vPEFtAgenGtnoTMohi/jw0pnMTgIt6bsLNXWmLI1tNZM
NAsNCvOVk93h02nLReXkGTgV8lf9Hl7Dmr86uwO6C7ew+Y6zMz4G/5OyWKut
WbH05qvmLIT7o/PwdtQH7hHug9bIgpMh/3XnMrQ/b7ZkM4bz8amZ2NejduLT
JXwrB7rBexlTQKzz0Tr4Ge7EUApAJiqFW8P5af5leI+3scox5dqokA9a/yl4
nHIwnOfTqg/YWJg0m7I9DQ2Dq9AieJ+32iAfNiifYltLPibw7wBtI+hbgs7B
z4d6oRwqgbtj40P6PkAdfHdD6+hbj+6GV6GIvhjN8DZGY0+ge5n7Y2y5+S/5
cwi+QP/ihNm8o3rGmOyk+Tw5spqn2qcadp3zmsycr8n39Wg03OLt7sln+X4y
2FcMf4LLYhurOeXwKWxuoBbNRz9HVpNUmxagZvh19D5rf49q4a0oSd9xvmsi
m6O5xegruCky1pht8OnIbG1CLfKfNb+FE6yfAefFVui/yVDCEIeU1R7d6e/g
HpHlgu7kPXARYwYzvhIVi2PjQagXPAW1h/0pNulQD5UTud7mVIZ4DYE7hfdC
OZQJ3xebLfmUDxfE5qvW7KraEpmvilkrPCrEUzZLYssp5ZZiVg1fjWzv/+9Z
+wv5pfO4BC+LrXYMQC/FVmNUT1ST18GPeouFYtIFHuTtbqlGRvAslE7YG/ic
t5xUbqoGzYO3h/dHb9IOuNjb3dcdvQteGtvaitk8eIi3tTQmz1vNVe1VDq+G
B3pbWzU9x1tOKDf0ptXDvWj7RG8rusH5DfA2VvVNtf5gbLmu/W2Bn6XtnLMa
o1ozPdfeJtXHMngabWedjekH9/RWi3agK9g/761W6w06C9/vbW29UX/Tfz28
16pXN+Cp3v4VZPMRnbc3W/L5T8ZXhPul/4HH4CJvb51iepv+U6HeKp6H4fxQ
b3TnC1RfvdUK3WHd5aWMWYJWoJU6i/D/ohoyFH45trdKb8wr8NRwn/WGTYcn
easlsj8R/iLET3f6MDwh1Bv5MF7vn7e39HM0Gi6MrNaohgyH59L2GX370Qj4
4/D+y+ZW1VraGp3FoFS55q12KceUa69i472k1dQqeI43W5rzBFzpbW2tMVLn
Ed571dOC8IbpLatAs9FrkdUS2ZTtxbS9GGK2NIypCG3q+w/061mi
                "]], 
               PolygonBox[{{3721, 3720, 3719, 2093, 3722}, {3645, 1839, 3643, 
                3660, 3661}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8971152714956848, 0.6189861976502407, 0.29169581483959744`], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
7eHTr6PkrxTx/AhgTLHoAvwXEprgNQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwtlm1MlmUUxy8eQKTrvm9qidkyU5eVa7V8QQxBKV/Q0DRaTas1RfOFUDRD
CinTXjU/9CYhgr1Y+kFL/VCtWipKKkq12ppuwVi10sqUQtfKqf3+O9eH//Z7
rpdzneucc537GVReVbYk5ZxrRBlor3fuujTnBqBt8C9oG1yNuuBOb7wC7YFf
RX3hq9Cj8GeoP3wNeg/ejP7CbjdaCRfEzi3ioE2oBO5JnPuvt3OHUAd8JWMp
5r5Jdy4d/pw916aZzffhj9FEeBJqhM9EnMHab1EPXMbYUc5qR/fCn3hbW4Ka
4AnoIHOH0ET4C2931Rlb4T74cKSXc2+iNHghPrhM577CpwfgFtbcxdo69Cvc
7O1uZ9ATcCE+dDLXgYbA41FMgMehmZHFTLGbgD6Fb+SMC73szL7wQNbsYG47
yoBns+Yktn9DY+DTjDVz1wrUCRexpzzLudtQIdwdWey0Rmv7o2PYOo5cZDZl
Wz4Ohl/iTvO53whUC4/Kce71bGKERsPnQn5u4fc/cJRjPBsl8KXYYjUPnY7t
zrp7ojtH5pN80x2Hwh95u7ty2AB3saYy3XKoXN7O2AFcbUW58EbdGf4TLfeW
Q+UyF9XDdZw5MtPusBaeylgba4+gafDYcP5cVAz/xNhU9pai/fAi9qRlmo1K
eB1qCPYUG9Wwanka2qd8MbaAWshDQ+Bd+JyF7wWoFX6bNT2c/Tda5c0n2dqI
1sO5ob4Uj35wA3u+T5kN2XrL2169mTp4k7faUgxWwD968101qFp8B511duYz
8CzO+DrD7vQQvIWxc87WPAvXxJZr1XRFbDWh2tiKzjM/iN/ZKauZAfCHKBPf
vmOsHn7FW+z15ivg1d5irZg/DS8M+ZLPJXAV+jLk8x54iTdWjmfAF9BKbNWi
E/BN4T0oZzfDy8J7lY2l8IzEclmPyuA3GOvH3qvRYviHyN5GPmqDRzC2l737
UAwPR3ucjUWaIwYXicVRtANei83z2D6MquEPGGtn7hLaCT/urXfIp8fg7bHt
Vc00xFYTqg31sFx4mHqMszOztVc+h37XBr8czruV3+vhKTn29vQG83Ishoql
bBTAz4f+ppivgZ8K9X4Y1apeErMlm+vgByPrPcvQYvg5tCVlNbcBnoiPjRlW
0/nwk95s6Y7V8H2RvWX1MPWyxthqWTFpiq2Hq5er5kpVT4n1A9V4OpyKrTdn
MJ8Jv+btW6GcVcKnYusdw9BxeA57NmRZT5ue2JvX29c36V1xWK8zuuEXvfV6
xeQFeGZsvVp3mgwX4/OYlNV0Edwe2VtVz+mAf/b2ttUTDqh+2DM89DOddXeo
b9mfLt9ju8sodENsNaxa1hurUW9PrHYU/xrVKmO/M/cHGgevUo9QLlAVfFno
p+qxZxOzKdv6Rg5Vbwv9WP12EHwstlipZlvgpZHlVjldrfeKjTm9rQaa4Pkh
fnqTk+B53nw5he6Ei8P7VD3fAe+PrdYVg1a4OdSTbG6GH/G2VzbHw7vCearp
3fDk8D5UQ1P0rQz1pBothfN1Rnj/feCR3t5mC7oczvPGWnMFPDDH7q4Yefii
t2+vesZJ5Suxt6TzD8Kd4bfi2QU/zJoTzr6ho+HdkfUG9TT1tsHBvmJ8Pbwm
sl6nHClXhaFfKUZFcLm3b7FyOlaxC+9ZMdiZWA9TL9M3PI39syLLtWrwfnh5
qA/V+NzEepZ6l3xcAM9PrLdpjWrpX2+9Wf/B9F/sf1LbUiU=
                "]], 
               PolygonBox[{{3916, 2502, 3914, 3931, 3932}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9326166665886384, 0.7015416664715961, 0.3911116664247791], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
1z5gfDn+P4fUQEg=
                "]], 
               PolygonBox[CompressedData["
1:eJwtlltsVUUUhmef9vQUZ+99NBEwPkFbC4gWvAGCQfCCD6DSxgtQNBEpioFS
CNpioYCUQgJqYiQFLC0Xb6ilYsAHjdFABVpaEBSNIm1EJd4QhCAiN7/lfx7+
5DuzZ9aaWWvNmtN3yqyS8oRz7hWUjXZ55wYGzl2P3oMXowuMX0QvwG+jEr71
QRvhiZFz+1nYgMbC20LnwiznRqJ2+MWYtSnnBuc69zLcmzlDmZtEV8OOsdU5
zpWhk/y+HzXx7QAqhdeaks49hVbCn3vtbQB6Bz7B2DTWrkGn4B8YW8C3GrQD
TsT61oGS8FGvbwvRTjjFmkPsNYW/XvDhSHu5BX0Lr2PNIPZ+gTOshPdwphHM
z0WtcAs6TAC/Q2vhnszZm6MzZcGX8LEFXy3oN/g4mgRPRF/B5fjI5mxDUDXc
ZT7wdx4dhVuZs4i5D6DP4P3oEXg5OuEVQ4vlQfaThA8wNohvRWgf/KPXWc2G
2WpHN8I3oDa4Ch/tKeWoGu70Wmtz9sK/okcD+TTfZcypT2nN0/CKWLFpQ5Xw
MuZcIq2X0XJ4c+b3YNa/C0+LNddsTIWHR6qdZ9AwuI4Ybk4opvXwIa+1dqaD
Xjm33JeiDvgPr1hOQF9a7WJjOLZmoNsj2TTbVnMD4PmRauk2NC9Sji3XDrVG
ypHlymromFdNWG2YzXx4LmPnmP4vehZeHaoWvma/q0Ll0HI5HdXAKyJxA3oJ
bozE+9AW+HevvVuMv4C7sdGEvZnoe7icsb/xdRYVw81esbWYWmw7Q921CtQF
JyLVgtk4ze9FqIq9VaK58ONoTEJjs+E+qAvf3SgH3sn6gFjcinbB75OjKbm6
A41wM2OdSd3JBrg21NlfR4vhT9lTcaAeYb3iEzQ+0NhbdpZYtV3UgxjCHzP2
YKA5b8JNsXrFk2gjPAmbvbDdE42B53nF/jx6Hn4N9WVtHqqC85mzHd6GesAF
6MNAY1fAs5nzj1MO58DrvNbmo2q40YsL0Hx4jVevMx/P2V7Tzu1m7+fQY8bs
cVWuYrQV3h5r7za2B74Hn6PZexrdCR+JFFvrWda7hmDjVWw9gQrgKK3Y2O+r
4KGZ7+ZzBDw249/GhsEfefUGi+EbcCE+rkwop3nwuLT2amtsbTlj9yVUA1YL
eWn5Mp8xvCPSXbAct8AnsVkbKIa5oWrEaqUZBaFq2GrZamYrvMArN/Zm1MBh
5jyW87PEo5Q1c/A9Ck2A1zPnOmwVWo+y/HvF3sYWwv2Z81OgGrg3VEz/jy1q
j/VG2FthPbQsUs4t98dQP7i/9eAc9eRr4CRjy/hWh05hv3est+EyuhbOz8TD
4luYVo+wXpFAM+COUHfT3gB7C+4K5etne5Nsf1691d7Q3fCfXr3Kev43XnfQ
7qL1uCWhepT1Knvz7o50h+0ub0LH4VqLQaAeUAmPDuXLYmKxSYV6C+xMp73e
IHuL7A3+wPoBWhooh5bLM6Fs25uXjb87QtWm1YzVzpnM/bT4dsNLvd5+6zd1
8JHM+2Q5aIMrQt19y+lMiwdjN1tvR8Xw+Fh8ExoFb8JGv0BnsrNt8Mq9jS3x
ehPqM+tL4Flevc/ubIW9/bFyZT6KYvmYmnlPHoIfDlVbdufs7mWFyrXF4C/W
j4y1F6uJgfD0SLm1/zCTI/UY6zV2RybDF71q3d7wX+D/AOdfOV0=
                "]]}]}, {
            
             EdgeForm[], 
             RGBColor[
             0.9656941524271676, 0.784235381067919, 0.4936518725242195], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNmXeU1dURx997uwu7+37vPcGCNOlNiahRjGID1CMiYIWEZkQ2oCgGbCSI
qDmidNRIUUFFRLGgxEqRqigiIqhoLKjgOREpS1nwxJrvN/PZA3/Mm99tc+fO
nfneufc1GXDDpUMzqVRqsn6KxBuUp1INRd+XpVKvJanUkapcK36u+K2i80Sd
86nUoJqp1GXiD6ktp7oXxL+QjIK+v8xEv/NFh4uuUb916v938Q+LU6kaJanU
R8VBNfX9sfjXGj9CfbeI58U7FoUsyz6nKOpc7iQ6rCjGlGrsJvGzRGeLEtER
RaHzFumwUeWSkpizIhflPuLNpUdG+rTNh34e800m9LOet+WjfARyTJa5Vfxd
6Xe2vl8W7+n1q/8g8Q6SfYaoTLQxm0oNSEvHbNSdKSovjnHnHLKmjqzrXOxa
G9t5fZszQbX0/VUmyO1fZ8IGnbFDR2xi28ySTt+q/aUk+h3Oujozh2WdKnv8
oSTsYn5aSeyH+eklsR9Pq9/nonmiJ0WfiuaKTpLcKq2rvfgclT+hvYz1uWye
LY4xF8nWc/TdQ/wplT8rCtmW9e+iqKslWasl80TxG9R3tuivojoqT1f9UeJH
aXypfQXu+TZp7AiVO0jfUbnYY/vT48UhyzJPSELWE6JhxTHnZ8zbB3/olou6
z9HtLZVLaqRSb+diT0bgx7XxZdu1Lf7TTvwezfGS6sYm4X+54pBnW1o3++jI
XNh9qPh20bWSvycXdkrQy7p4DY+xjo+xxafYai4+v4n1fMK+2P7FubDHfunQ
VdRM+vRIwi7WYTTtHjMHeQl6HoYv1cI21t+2mKj4nyBaJhovWkrZ329QXkad
v5fK3stEE9Lh+1eJ/im6opBKfaf2ToXov7wsZLtum+hV0XbRDtFCUXvZ5hrR
qaJxKo8VLYE87zj4eL4t4/9YBbes10WTmGsFfBLz3i+d/iy6UvSM4rOv+FvZ
qHPbA6KTtbe/F/2lZnybG++WqO0N0bh01LlPRc0Y+8Aha76K8iX5aO8kPljr
eZi1WYbtNT4ddY9Q/470WyOaKlqcjvnGih4sizbXPydd+6lutfh2yd1TKluK
34f+XtcZhZBzcSHK/dPRXiqfeE18t8YOJVYcc1s1/hfJ+a9420LsyTmF8K8s
/rkmG7LezR6Mc7ffKLoJHKpKAjMOiA+nzTh3s+gW/GwTeGEZxsPh9OlMH+NU
pfx1kOzxZS7wqJQzogb45PjoyLydGH8jOgxDpmWXgG2Oq07o4Xk2J9Fvnfiz
Ws+JWte8bMTAucR6wpnieLhH9lgkulc0Bj+9h/JifNT7/iC+f6Js+Zv2/VfR
3fjjGHx4LGPc92r67xA1UszuFL9FOt2l7xFJ6HEeuHM4OHQE676Ztdtmt6L3
Sczr+WtpL9fLhnXFh8gG14Hxt4JplmuffAi/7JcLbOkvfj04ZB+pkB6XSp8b
xQeKLtH3cPG/iT/nM1N0k8rPiN+RhN7W/27xf2UCG+/wuSk9pkqvd8Q/Ei3X
94Z84OT1YOUWldeofnM+8Ms4dpXlkGM41zgmEzo04pysxVn5o8b8rLEH8hEP
jott+VjzdZxtxuBrOfc2iDaKHhVNykX9ePFZ1HnMgkysYbToAtFIURfRi5lo
u130AuVR2ON5bGI+/5Axt4kuFD1LP9uvP3YcKv4PbGhbziwJPYagy2PYqLva
7zS2I8tzdhVdhI7daLP9L6Zs23en3+307aY5moj3S6Kf7Wm7Xsc8ttVz5Bxe
Rzk5jLGgQyHw6NQCskT1MgfzCcdblpzMMVStX110dvnozMGcw/HchbY6mdiH
IciyPb7EZh+wZ7ZLd+ndVHVXiq8viTbbrMB5Vj1mM7a+nfPX57BjrLHqdon3
TWJfz0+ibJtUpmNPt7Cv3sNv2Gfb4mvqamInY1MZuV85ucsw1u9cpQP5SjNy
F+cy85F3G3NsxZ9M3+Jz1fnuF+jk9e5OBzku9qRjr71/DdljlxuI3k8CK9aL
P0JOOIvYvZTYqfbRkdB89LkN3exbh2nMVM1TSOKsmM158Rhnh/FhRi78c2Yu
MOlpMKkLuZ9zwFvIJY09x+YCV9t6L8Bh4/GCXOzl/FzEtLHP/nd0LjC4bi4w
fi74tz0dPmvsHE4e5PbZ5Efeh5no9mgu5pnD2eD2OezTTeSD1v1xci/LqJGL
PKg0F3cSY+Ye8eXkh84TV4sy+l6Vi3XPY+1PYQfLPFJjVknH48QHgKXG1DPx
EcfKHPS3bmdgY7fPRZZ1PAt9z2Z9m1jDY+SN1fvzMe1nYoOz8MGh+OiT2NC2
6gzWn5aLeBtCTH6Fn1dj2Ujwbyv+uYAY7kpcv8I90ffFoejvua5nXs8/n/2d
lQsf7YHfNsSHj8EvbZ/GYMGFzDOEuDc+1QVP6oFXj4JZ9cCi+pnIxX3uzEii
3J24uBacsLzzif3e4i2FZQOEac3EhyUHsXk0+NkNLPkKPBkFlnYlXkah6xZs
5Jj+Aux6Blt+cwiWbCHGLGM06/E81vlO6hfQNpI5ujDPi7R/iU7GudPYx+Ny
Mf4u7DsaLLHsWlpbO60xJz6Nu/qYJHKAQeQBe7ib7MvFWeqc8F2fo/Lf79OR
O95PLvkm9BZ1g3XWTnc+nI9697HfLyS/WSSaQp3bKsEy58JrmGeaKJ9EbpQT
LxP9x3hH3modXk+HHznujPvd2F/v8yS1rRBNTkd7EX3Mi2vE+VEuWd+pvXkS
dY5l5wF3Se/+mv8pvwmobZr61E5C1kp0385aFrIenyXO0w/Irq3LU6k25eHD
9t+dnCdNwe+TJWuv+AVJrGE7ctzeDGxvz/36wiTeFWaI3qsZdwnb2Xfa96hf
WzPqHsD+a6n3HnyPfM/TChuWIdPj1yFzNfeVV713WvvafOi9i3XtYI2LODO9
Hrd5HftEy9NxDrnsu9+bzr9EP4jezsa94x3xY2WfvqJ+ZfHdhnJfvvuIPszG
fWhHNnJl59eXi644JNf+RG0TrZ/4B9m4h23PxryrmHsC97zevvuVRp65rzTK
f+K+6lh3DnO1qCP3Hd97+uI7vl9NRC+PW5+Ne9g28dbUW+/drH8pd7SpyFyp
+fajk+/Ge7gr28YV+PlU+EByYpdfyUddBfXNNKZ5WeSyu4iZJdi+Cl+/WnrX
ld/1LEQev070viitclPfqyWzqjR0sj0+ysYdfad4ST7iPiPeqhD6n16IvlWs
wbLWc0fdy73M97OHmcf1B1ir+zcA0+2D7ZLw0eOTg/hun1qs+Sar75J83Psb
Sf+d4vXL4/3Rd/ql9HHf9rwHOF7HYgPvfZX6tVT/VoxvLL6rLOJ4iui+0njL
PKY83gX8PtCQb78LePxK3gzcx7rszUZcliTxbuB928t7RX1028+4Kt4fGvBe
6nU0RpdxYJt9uhqDjD8eY30twxh1CjhlvZuovrIs8GQ/mNKsPPxnN37kcnPq
zK1bU8Y1obyMvi0ou5/HV9K3KXJdZ79bgy+6v+25z+OzgR9FSZT3Is/6tkdn
1+3jfaVeedjHdvL7gvE6k4S8Kvq1Zt1e/wQww/G8LxsYUzMJO9iGXsvvkjhL
2iaBR7vY+9/AMd+vn8hHvLycjzjcg9z6nPnb2IfdxOk6xlrGd/RzH2OkcwjX
TcnHXfrxfJydd3LGnJJE7HVJwsft08bZmdxBnKO0TiJ36ZhEDDSkT5skcplO
PlPyofvEfMzdgHj5Fd3W8tZUie4j81E3QnwVvrcfm1a/b41nfROwqbH5/+ch
/arw8Ub4+Spk2Nfsl8Wcgz3BkwGFwDnjoN/OjEe2id8WHuXu7Nx6OXhkLDqP
tdsGyzgXltNWxTlagRzLm8WdzvJm55GdjxzPe+E96Sc9ftT8PQrxjrKQt5SH
yVmMdzeQ6zrnbWn/Kgv8WsGcxvQqzgG3m/zdoiwwYgr45XH7wT7j7t7SwN79
tBn7axcC41sU4m3Hulwmej8b734bsoG5xt7fxCs5O3yGbODdY2M+3vuuBdcc
U4OJq73Mbd2OLoTsTCHOpMnkIX4/Msbswhcm4wdT+F7J90r2eQDn0gmsqQXr
b0eb6ych32eg1+u1GtfbwF0emI63Mr9b3YfNfPameQv1W+kOdPN7mfs5l/Md
cjBvnF6j+/v93OdKP3S2vsfLLinVH+v4Yy7P6bfPn8riTTODTeoU4vzx/nvM
z6zHOetC5nfeUC8ffeqI/5SPtR7G2DQ6tMMGv7CWFOs5ifkr0pGfTgcnL+Z9
9ZJCnFEr8aFW+JbzDOv8I3r3LIuz3LlMc757Qr2oe591eP7JnNUr2as/IrcX
flHtH71o83y98fve+Gkr6lvSZxU6Wqbt3Ze4bopezfiuzrnS7Kf3aQpxtIrc
yGXndo7H7cTkNeQC9un3eFf3+/oM3s+dl1ZjgX3NY3awT4PIXZ2fjkPfXuhx
L3a6nP103Vry1ffykV9Vn43zeMt9Phv+XYUd70Nf611MzDnvn45ufqP3Hjvn
939Ozgd9rr+GjVbgo/2wm7/70NaXfrbF3cSVY9xx5nWMZx8u578A/ycwgTq3
FRET1qv6P4zXscE4+ozl2zax74/BHvW49/jM8tnu92VjwnFgU91C5OLVcbyY
dvfzmf8z965l4LTPjUXEr/u+Qd9KYnkq8TAIu3nP7mUPq9/Be7JnrfHFPujd
k/Yf0MX3gFO4exobvIdLmbOSPfV3BXNOgwaix1r+s1kn/j+/JiGy
                "]], 
               PolygonBox[CompressedData["
1:eJwllllsVVUUhvft3N59zqUoQnkSiqJlnkJiTRCICmhFBjUx0EKhwSGtQaPg
EAcMTljgQQoICCovimOB4hwUKTNVQDROETERRDQtaCI4fX/+hz/57h7XWWvt
tW6f+rumNuWFEFpQAbosCaEaKEGVcHs2hJmZEGrRLrgmF8Lu0hBWoGr4DGvu
KAphLSpIQ2iLIVyYH8I16CDczNi/xSHsQw/Ca1i/rpA9aCm8mTU/YcBxtA4e
x5knOLsNjYVvQb3LPHYTvCTx3tHoYbgEfcNdCfb2gvdxRo982yBbvmVsdJFt
PAUfY2wBc6+gs3AeNj3P3DzUxfwT2oMtr6LH4VnoAXgCmgEvRovgx9AC+E/2
/10Swh70I9yK5sLD0EvwvazZxNr70Xz4qpy/bRsaBL+OT4fh2+HoDXg/e1ax
dy86Bv+H+rK2EoWcxzT3DzoONyX2RSG6E05YM6TUNp1j/q/Ua4cydh7eghpK
fEdbahtky2I0IOc7dFcn86eYP5mau9Av8CG0Hf4YHYbPYvP72P40+h1+ARs6
Ch1jxVp7tFd7juhufR+50ICmwzvZMyPjHHsNnsz950qdY8q171P7tkU+ga9g
rIW5PehKuCeaBk9H+frNmgNFjmlhahtl6zL0EdwtZ1/MQd3hvdxZx92z0L6s
Y6rYbkZPwhehVcytRBcot9En8FnFTPGPziXlYBHfW4uO6v3w/Y3wFubHKD9R
KzwCdbK3kvOvg6uwKRTb5t7w9YxdzNxUVA9/gU31rJ+DjsITGOvK+AydVZE4
98egKvhrNIqz8lA7/Gh0LisHlYtrUJrvHF8ZfabOVg5ugrem9rVyWLn8Fmcc
Un5x3nZ4nt6L7EW3w/dE2zoFzYV3JL5bOfA2XKP92LYBTYJ3JT5Lb1Jv881o
38gm2bY62vet6Cl9X865qRj3gscx1ou5ClQFN0W/Lb1RvdXZ0b7ti26IjoFi
UY0WwnXRc31QDTwzmuVz+X4g+hRf7EA94MFoZ8Zjg+BHEp/ViJrhsYz1zLNN
l6t+pc7tEWgMXIE6FA9+90s9pjnFfDA8KTqXzqBR8MRoVoxHwrdG156J6Fp4
LHtGsnceGg//oRjiu42oC67Gpvn4eiOaCHcytjDfNU+1bw66Mc817D54SGrb
dKbO/oocWJrxm9wPv8jY8BLXjJdT36G75qPTcD56h7XvymbWVxKj+lLXoHJ4
dM69QmOXwgOwqbHAPUa95lf2LGHvs+gIfAo9k/HYYfhzNDvjN3AIjtz3HNyO
yuGO6F6jb/wBPpl1LdIZn8GX5PzWVTP6q7ax5mfmTqCy6Jqh2qEam8m5hqqW
KmcbEuegclE9am10j1OvU0zLU+egclFn9ofXp6796nnL4N1Z907VmD3yrWp6
sX26XLUq2peqEXujY6xYK6euhg9kXZvkg4Pw0OhvV04OgeuxuaLMPVK98oPU
tW45+hD+jT3NGcdUsc3KR/A2VAI/lPotyybZ1j261rWgbnBhdGzfU46yPy96
r2Leye/ixP8VlIMFiXu4erl68FY4F33WCpTCU3Ku3edRHdwvOhaySbZ9l7gX
q4apliXRexVzxV5vTm9vA1oNT06c66q5M+HTWeeSvvnLrH0gX9SiRfDAxLVS
b0Rv5e7o2qU3obexMPV/FfWo2+D1ie9SDVQtLI72hXqeet+01G9RNfHm1DVO
tU45Ph4eEF1L1DPUO/4HBHQ7BQ==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9987716382656966, 0.8669290956642415, 0.5961920786236593], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNnHe4lNXVt2HO4cyc48wcQSyoqNgQ0WjUxNgLKgJKR7GgxpioMfaCSFeq
StEk7/tp1IiCHRtgxd5i7MYCilJEQBGwo3lTvnW77rngj9+1n93XXnXv/cwz
HU49t+85hRYtWkxuaNGiLtKbI/1HYFrgV4F9Ag2Bu6Lyo8DddVm2b6DYkPmP
A/cEHgx8GpgVWFDJ/i9Vsu1+gVLgoMDBgUrgn+UWLR6Nto2VrN8/0NiQYy0M
zAwcaJ9yQ467LDA70BT5DQLzWuW49Hsvnm8PfBC4Q3wYuLNV1tPn/Xj+MfBi
4IdWOQZjz4/ndvUtWmweWF6XZdDIWKTVhhyrHLR+HvWbV7LtFoEVdckj+PFO
tDmgIelm7B5Rf1R9jj3P+ZgLlB2/Ngfjvyet70s78y5wLazjksCttpseuCAw
I3Bh4CLXf7H52yyjfp55eHyAvLg/6P4k8EDgXfnIuPdFfkld1iODRYF767L/
fOf4R6tcM+uF1iZl8XQl6+6P9CV5/c9W2X9xXY5NH3jFnC8pC9pBx1L16DzX
eb5tS7bfJPi4aX22OyTyhwaaTbsENjQ9LNA6cFDgYPhr2eGBNoGZMca9gaGB
D+qz/sNILw3cHRgSGBy4y7JLAndatqA+5/zIdvcELgscGGseEWnPSA907nJg
WJTdFxgeGBR170faq5LzfGz/odJDW+hlbVXkhT7B38DC+qR9UX3OzVrpTz3z
bWC+tW1pt1E8L5Znm9WnfULrTOdkzczDmh4JmtbG85xIq6yRtUb7NoxTn3rw
cF3q/yN1Wda2PuWKTWI3cwIPBT6z7cb1KTP0jLbk0a3NnKNUyT4r7HdxlN0h
v1vX59z4gg3N42vm1ydfkdsFgRmBCwMXBW6vzzHm1Sc/5rsO+uO/4D28nGef
2+xX63+IKWMcGngm9O7bwLOBbpWcb79K6mXN/i7WPi8R2OngwDHFFi0mBo4N
XBW4OnBc4MHArMCowCstW7T4d+A/gQesGxmYGk75msBJpif73CfqxgT6FrOM
umsLmR8b6BcYEJhQzPkfjbrHAuMLOf/x0gAGStdnUbclco30rFjnTYE/BL5z
3ayfNVxpn+NdyyT7D7RuTmBF4KHAH6rhA2gb6ZwY96HAFYE9w+dvH+mR5VzP
oEKu9bDg6+HKmzWMC/QvZr+HA2MCZ0T+L4EzA+cEpgXONX9D4PeB9oGtAisb
Mn9j4KzAXjHfDjFGt0h/EdgxnruXUw7LArPlOfRMKaQcPlVOJ1pG3WzXebnj
3sRaA2cHbpYu6H0kMLaQvPiMMtczXvmQ/zzwiP3/6hjow9/ViY7Rf6fAd/E8
OepOkOfHm54gfdA02rFWIvNi6m4X9f4QdRk7ONh8VVs8Uvt83xgxQx/bTZ+B
jR+hnV+gnRxs/0PWs60u2iftujp2G2W6kXWHWdYsPfSbZ0whtuynfe1SSV9F
7CRuvmeMwd7aVzLm7lrJGEOs+WslY8N7xgz6EHOJz8Qa6m4JnGtKbGFt3fWJ
10X/c6Jskuk02zL2O+bnG6dr+4sPtfmF+kd8I2ULtP9ujr+pPO4mn7u7rs3k
05Hy6gjzbeXZEfJt50ryu10lfSRrx7d2kZ/wlT0Ra16uD2bdK9yLbWb9dHmI
fJfolz8xJrfVJy/Spy92XwC9S93ftdYPk2dNn7of3FCfTJxo1scSW4g9xLNp
lYzvt1aS9+8qo2nyljL0d7l2RR/iFfGy0biHz36XvUngVtP3A9MDQ2O+YYFu
psMD3QPbB44N7BAYFRgd6Bm4PHBFoHfgquj/RODJwFyfrwycEjg5cG1Dth0T
6FOXecqvYd/TkDTd0pBzjgj0kP8rjIPfhO3uGOm3kX5dSFooo/9zgefda7/j
fvuLwKrAY4G3rWM/Plq6ewXejPxb+ui3bPfXhpx/ZOCowJHyY5PASdIL3ZfV
Jb+ov9L1woOnAk8HJgUeCp/YNepfifSpQMd4fquc7eDT1Q15VqA9sXFqYIpx
YrJltfwU8+2r6Y83qGb5c/Y7RR7/URqudo5JPlN2vnK+wJjEWs8OjA26xgX6
sVdUL2j7oOcPZH6u8jnPPvDynMC2UTcgsF1gSF3ypav5Y9Sdc5TJua51snR9
Vch65NlNXds0cGNDyuYm1/NC4MVAY+h0UzH19RZ15lbbXGu7aerALa7vbWnt
pZ62x/6qOUd9dZ3saTshZPNp0HJdOduip1vVpR6tDjzuHNeqbw1BS7GY85GW
ikkTKbRiW33l6zZ1qTvP23+A/IFPyIQ1zVBmX8KbwBqfn2hYZ6u0fbKctvBm
OfV7lbQ9Hvm17FEi/VqZMw42g+59V8h2rGWuWOP4PdT3dnVZv8b6R2Os74nB
kR6t3W9Rl/qHHm4Z6ZeFXAfy7K7tbmZb+M5+aHXUdYh0TSFp+0Zd+Ea9flo6
vpQHtEO3GPtJ18F6VhWSl4y3spDy+SLS17U1bI781nXZ9hnnYN+1Z9C6JXua
au7P0AXGeNqxv9aertGmNtH2N1UP0AfG5ewxwthzsOfDn85P7nWJJ5wHhhmr
LnYv28WzxfmeZ/Y3Nh5gLLzD/S/9hhvfLnMsYtsBxlvG4Jwz0/raPvtQ9xMX
WgYtl0jPbc5xkTFjunTMcL9woTQO9mw33boLjCu3OvdBltXOVYzHeZHzFzQN
cc7BxlTSS43D9xqLhhnTFlvGOYPzxx2CcxTnww0883Hu4Gwx37Zlz6D04bwy
z/r3faasyTPcPOlaKL84g3Leu9s5FljGWXAjz4MVz4sfWv+RbTgjtvZcyJmV
PHWUtfGcWDsrMhdjNHse/Ni6e6SxtqbaHHfKgw/lwXzztzv/x9J8qDrSxbhf
24t1UX6HuV8apv4QP9nj1M6RnDc5S55jP3RwmbGWc2dt3zaykv2Hq+dd1TX0
8Fx1AX08Uv3sZjvsgv3iBeoUerKFvmBL/UIP/Qz+oH9d2vk2+skO2lhfyxaV
M668Uc4++KjN9eO9tcst9TOUra2kT2yspt12d076HK3vmqhvI24frn6yRzxf
3UbHj1CXu6pLB6hPG2h/ZXGQunhpJfdYZ1cyf7A6VLtLqtnKxdrLYdoadyhD
5G1XaRkiPV20pcPUpUPUp0blBl01GztcPTxMXWzj2Bspq/Olu3an07rVurse
ym5T12rn/jv0HzPUU3zK2a7xpEraw93Se4f6W7vXuUuaeoevvaKY5+y2pdgn
B5Zw1g6cFLiGM2U5/ewsYy+yWlbIuN2qmPs2Yl1H937UoQfLI/1l1O8dqA8c
EvL+RaS7VXPvUFfMuA6oZ7yR7mXQA9rSn3bb26ddNedrKK7bk5aM4/XO1Ur8
qpjttlD/OPfXOWb9ensCxvgy0m1j7duVUg/ps6KQ4za6n2E9m1v+fOC5QsZd
Yvs2xYzJzLePe47v3UsQr7YuZhvabqX9EAM3DJ6+HOfdNpGWAy/Fc6Wc8Y84
uIf3CSu8U3gjygpB45vFRF08v+X5n3sA9tRba5erjOfbGtOnxbgvRnpzOdtu
bfttI92uuG5Pw/P2xaSdNax1DexlvxPfW9ahmP3Zi/zg3mut/OggT6B9C/n/
om1ou7cyQlYvWvajPFtrO/i7Vn7vyt4p+POzcrbrHP12KWYbZMHe6VlT8qul
D9ouCz4NDRwZeCHK1gZ+KKYut1Ofnymk/jLGDsXca8CHtuW8k+hczr7P2/8b
9yO0/cq25J8u5LmH8ToVcy3wa6di8q5jpEeEXI/mnqaa+56O1vUqpk1yr8O4
OzoP9tlXmZH2U596a7tbqW/fOQ/oZFmHUur2msg/Wcg94FOF9L2sH5teox58
qT3t5/54rev9vph3POzFuGNDv/d1P839z+feAXFvxh3gleoQd3KU/ah8O8uP
nYvr8j+YH2D7mi5uJ1/R+8+8F+uiD8GXwIP+6ll/+2/r+KydMZ+TdtbAfdqZ
2v/jhdyfzg08UXAP69q+8A6R9e9fzPMMeezpcfussd8X2jZ23d5Yt9L7RfLw
pR0+pZRn/hWuhTVRtkUp7xCXa+PY+o7KnnvGp9EpdMD8ceoE91/cyaEvo8z3
LOZdKnl0a6sYe+vAF8XUL/oe7/Px6gi+f4w6dKI862TZWHWtk21PsJ52g8zv
5Fg7W4Y8v5LmpwKbxvyblfJukbvACcppnPn+tnvSfpdLU2/p7eh6v5YXtG1f
yrVx9/e3lukz/9ky7ye5W8T/ci95rvKr3Veirz28j+Ve9jv149li7lmOdg/C
WP/XMseGf9sEVhXzfpU58FnHVZPXXavpL77V73yt7eMDGPs79Y/71+MKecfJ
2C87/tnSir19ZX9skzmx29VR/ufI/y3wP4V8fsn8N86Ln9lLf3J4Netp96dC
8h79W6Y84Xs/ZXeist3WMy42sI98qtk3dGHjswupo3M8R27vWXJjzp6xjl3K
eS+Pn36hsM5PbaPc0N9nimkbX6xnZ6u0tW2kq4NzIjfsb6Ny3g9vUs6Y1sFz
5etR17KU8XCtczL3reVc/y2Rvh11raLNP4oZI+tLWfYrdYRYzR0Vexd4uYd+
Hn9Pn4Zo/04x17qDdyBnqgfELuZjzdcYb573ectS6ij33av1FXOVxx8LGYOx
e9pxV/6iMv2T/Fitn/lWntVsH5+AL93elDzzTXX+9toNseBL/fyTjvOdev6y
uv2vluv8Jj7zc307PnxbbRT/+5m+/WHX+oJroO4YaXnRMuqelWbmfEp9xhbY
y+Crau8r8DfoyBp97xP6vW/XuwvYUfvvaV/G4H0I7z6Qw1jpHVfI9yXQSNkU
bQK7vEJfS/3gcurx2HLSRJvJhXyn8Vf9xGmR/422RtnN+g7eq9yk/Z9m/f8W
kpYb1Yn/se+f5Qfy/HVhXYy5MnCq9bRjTZcrM+aZpi+oxZiJ9j/F8U5WBqc4
HrK9qpD8GS2PHlN3JhTSH4ySf+30bdjwCa6b9zzE6SeK+V7rSVPynwSWFvMd
HfF8bjHboje7FfJ9DTHiYf0KPpt3P5Tx3oh3XZ0Lub451u9iee3d3i62meAc
6NPujs0cx0sr74SghRhSe0+FP+NdEG0m2Q76iQ+8q+tkGWtc4nrut36Sbf7j
eyfmnBx+s0XY47Bq1tPuadvVeAO/0emrTZ927lOV9Z/Vx0fVyQfkITQTG6cE
phZTlqcoS95dPVbMWIgfZa3QThkx5/FitvnCdv/2fRlyoG61spmsPqP7N3hO
4650kHOepPzmKl98PzFgsphi2SPON065PaTsrnGMqZY9rKxPtu5aaZ2rLB8z
P8GxBzn+w86BzkySh5PV9bnayJXq91X6tana8lfK4UvX8KX5/bQbYgZ+HTve
V5xt/QTtYqKyOlXbGqe8xovHtB1ixFmOh6/Hvilj73imZZw9OsuXmk6wJnwU
8QnfcJV2Sv0fQ7c2Ch0bVU0+rXEdLytP5DrFtbLmTUq5f1qqrqKnPy/kvCfJ
e/bCZ0jXyGrq+tmRTveemfvmsfJ8nHaBTewcOCZwbCH3Q6QDC/nOmLhaMLZO
VB7H2n6iz8f7vvusasZK4uQ0+TBJ271SGTLubvK7xnfyP9MOfu0zNHG+g0Zi
dSvj9XHyjzG/00awlYGOT/392jg2N0AZQi9jNLgHOFaa6PdDy5xrZ+ftbNn3
zk8dvMZPn2b9jy2zDbTuKu2n+IxP+5d1u0nX1dLGGLu79t1MyXN+Z19ykylr
JeZwB4PsWc8c7164gzlJfcOWjqmm3PtVU56Ttf1dpGVX18n87D3xbcgVvRwv
f2p8miivRuqriBljtY1+ypPx8afQCC+JV+gHayD+/cz1s7d43Tr0/+eu9TfS
ggzZA/fX3qCBO4x67zH6OS/1Ozkn8litvWA3q/R7+JeOjknbJ2yDX+jqWR9e
7iAvdnTs8Y5/rb7ref0X6QvS/Ybrwt+xp2Ev/4Vz49tqNsPY4y3D1w1Sn5DJ
BGnEH15Szr3Ib8o55nPO3dn29DuqnOsfVE5arrHdjfIZPTm6nLSfHOl49zPs
a9hrrtTO2X/h04lfk0zJo7+d1ZFTnYs5KaeMc89p5dwrXRjpmdX0ZadX0x/U
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
GP+LgGzGOP5Y6XvIuS6XtivcU2JHa8vZ9hHbkz6qL5uqHx3k2DW/e55+Ff86
Qn8+0jnG+o6Bb3/43ftEx2Csa/QTZ+sr+unP+C0Uv2fmt8y131Bzb8LvqEcZ
67EhbP5Yf7N1tvqG3g2VH/jtc/Qf6OFoecu6R8nr0dL6oGVnSRM+rFk7Zm83
XP8/Qluaqa8+1/UTo2pxYrjx4x7bfmLM+q6S31gutK6TvhAZHSUd/Favu2Pw
rULte0jKjnTObsq3kz71RJ/RpQdcC2O9qv6yX25wTfwHQ1fpYrzh7h9+Oue4
PmjB/97nvqKXPOObB74Bm6H+8V3YdGV/i3l40Vud6uN64GtP82PUh57ynrGL
yr+kXqFT/I/ECPd+7A/HqYfEKL5pXVrTM/d/o9yvrXRPs8R2yOwNfQU+49VK
2t5rlRzjU/mFDS1RfvyHB/uCqrHrR2laoj1il3wfiyzvXs9OoLGkDvLfH3xL
Szt8QVl7ZewNtBXKmtQdyvh/Debaxf77W99QybG+L2ebXYyHvFMjfhwc2FJ/
T9zgnRx1BzXmXcIb7jW585upr+2j78UHj6rk9xqjK3m/zD3zps25lzvY/Vy1
nL/rbI60bdQdGGX/qWbKPGX9OH05a/XSZ7fXtxJntgjsEfh54DT70LdiOWW/
tW0v18T9DOduzt8tjaUFYxjjbu48fYyVnAv3bMy27Jdfd+1flvJswBlwK9f9
hXVvuG9u53jL3buvKa2743/CMTYzDnM/tYW0buk6GRf9q+0nFtmGevbQxGb6
cze9ibGae89af87YnGlbKLchyop9TO9Kfr/Wp7LurvZN18daKdvf/y3h/0s4
23EW5RxKO+51uevcWjmtcs1vejZgzaydO4U2zSmjDZtzHvY1tXvht2rti3l/
8NP/RFTz7mN2Nefj/Ms5mvvs+4276AS6AU/RwXuN9+wt2HfAs3MrfjNUybIj
5CM+mD0O97+zvJvljpazFevgfMXdOO+xXhMtfF/W2rG5i721mvo0LdKbq7mP
ml7NuxzucbjP4V3CLPcEb8gf+NSiOeX/X749reYzZciGPcvG6tPW8pb9HPtA
Ygj0rVanVqp/tF2hfqAbPdRpdIv9U3f1A76zV+U9RGu/o+F7GnSlvfp2vXqD
vmOvh2iz0LGNvD/ScdG7N6p51/tpNefpoV52UR6tpb2LvMdGD9ZOP1NfmZ/z
STt1AZ/LmpDJyZX8vvKUSurUFuoV9oA8F7veEa6ZfRh34fweDHAPxBmI9x68
76u99+Mdx2B5M1y6eaeBXxtiPXn2p/iJ09Vd+HGRa2ItF7ie5cqAuwDanSGv
AWeEvdXT2vsZfN356/HjQsf+v2rG2R+r6b/4zQPv5JfJZ/i9Sh1AFy53Tu5Y
qurIAvOct9nP1va7+DV8DHt1fCLv1G9zbvzc71wrfD5aXvNOhHchM9Wno6w/
T/pZR8fm9Lc7NOe47LOZc7pzwCPeFyMD9uwHNuc72p2bkyb24cSPv1UyTr5c
Sbpul9fMOVKabnXc882Pck23WAddv5Vnv/P5NPnYTd4jc/Yx8BnfhG/A9tpa
ThkxhL0aOouvgPfo7If6I+73OF8yz3XOtaf8a2m7qrKgP3aA39itnL+P272c
eoJ+YJfEJXwH98EL9fvo+C/VHWwWXYdG3nsB/ATvzD4xBuD/lxobiAufGmOI
L6CdegpNza5vD+lu4dr38Hkv9R2fjR1jK/hR3iPeoE6Tv1T+4ROGymN4eZll
8IZ3jNjPocq/i32G2Jb8Jc7DHSj3WxOl5bfS99v1eAxfsZVmx4Ym7O3/A4UC
T8Q=
                "]], 
               PolygonBox[CompressedData["
1:eJwllmeMVkUUhi/fwhacO5fejZKAdBAQFbMoFlQUVuoKUUARC4JAMBEwCiIQ
BBuWSIi0BVaC/rDQliL6hw5LTUiUKB0REiXCskRFnzfvjzff882cOXOmnXNb
jp44aEIuSZLVqCbqlCZJc6AZagH3Qm/CX6MBcIeQJFdrJEkVagi/imbjYA56
Hr4lJsnNBUlyMZ9feLXs6WuTlyRb4e9Ra/hJdBieiU2DwiQ5xZgZ8CH0Pv9/
QEfhedicY/w6NBfO0C7m3o3qwCXENL2mY1SsjWjbQ99e1BjugY8SfLdA3eHN
tF3DVxXaBJfLH7wTrYQno1k5r2kMfJAxPxPLGlQJz6fts5zHvAtXBPvSGrXW
UWgIPBSVwCPQ4Jzb+gfvqfa2H+oMH8bnB4Ves9a+FJvG7M1Z7BfDk7CpXytJ
+qC34M6Kn7VVoy5wU9p64yuiJvDM1LZT0IfwwNRndxKNgjsGn518dIJXM2cH
5h6B3oYXpB67Bi2HU2x21vCeR/gxdJvOE90JP5Pat2KcCFfRdpz4v0RX4EdR
K2xbozvgesFnpzOqD99gznuLkiSgf+EL0We/Df0G70WL4BfQBngV6gmPR2vh
xlmStGTsrSgHt0Zj4K6oHvwPNjXhu1CW2Ua2g1ATuE5m2xv4+xvbhpltx6K2
cEX0XEvRfrgMdYcTtABeyZp3sPadaBW8LjpW2ayEP0L5hY55ObwFPV3oM98G
F6Y+O+1ZPrwMHcFXGVoCDyGG/Nq8BeIZDP/HmD8Z+we6BG/EprqWY1gB9w3e
a51RD/gMbfN5i8PQKXijzoS5GqH18Gh8nsf3OVQKV2OzBdt5qCr1HdBdOI6+
g/9CS+gbhy5rvan7Iv93wQfwOQ3fj6BK3R3a7qYvH23X/SPmPN7iQf63gk9h
81Wex5wI9infGnMRDthcgjej2roPtLWB26J9cNNoX4qpbvQcmkt7+CPcD5Wz
v5NRX3h36lh7o1+U21AxtkVoqvIHezCpyHeyATwydd8xxo+Az0ff1Z/Y/3Pw
Btqu1fIZ6CxOpN7r4ehk6jPUWU5Ai+BfU889GV2Bn0jtWzEq1v2p19YOVWq/
UseuN94enpHal2JW7LKRrWKoSD2n5tYeHYCvpj5L3QHdhYN6v3nOwcrFTTO/
hdmoQ+Y7r7u/GPWEn2KN3yo3o+HwG9F3v5L/ryufRufGKWgTfDn47etMdban
g3N9KToCNyOG3+EL6Cb4U8b0YWx99An8SnQt+AaNj64pqi3KoaODx2isalRz
eE5wbViPpsJdUudW1YRi7S9tpTnnoMeDc5Zyl2pYt+A1aC2fo7FwEWM24b8C
XQ+OWbG/g87AX0SvVTGXw11QjwLfad3tvcF3X29Mb00+5Etrro3vRcG5XTVN
te09tDDnmqLaci14rrmqAfCh4NqpM9umWsIcLxV4zgfhtcFvWTVDtWNFcC3b
gcqCfciX1lQNLw/u246WBUusmrgKvj24tlxHXYMlVg2oC9/DnVhY5BzbBn6I
GIqJZSIaCo+LPjvdGd0d5RTllibksOcy5yzlLuXsGrp76IByN/0j4TP6Bih0
zq6OrgGqBcp5F+Gz0W9PNVm1WTlZuVljTsD7dAaFrhmqHQNVA/C1Bw3ILLHW
UAz3znz3Z6GO8ANofZFz4tDMbepT2/1wr8xvQzGXwFuja6dyunL7sOi9KEMv
w9eja4tiOg03R8eUy+jvFG0j26NoGvxx9FvQN5G+jaZH96mGqJb0Qf0L/E2j
b5uu0b50BjqL+zLXihXKYXC36G8ffZPp20xvRG9F3ziv6a5Gv235fFj3PzrX
qgaoFihHKVeVK4fT92L0W9EdLFX9iu7TmrS2FtHffsrZyt3tM8einNoOfjb4
20hvUm/zf3XRaYk=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[1., 0.95, 0.75], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
hqus8VzW+xb0pdiwEd4KiFWSrxlr/v8BoG9PPQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwllElsjWEUhr/09k7t//83oSw6SCyINql5gWhFQm1oqKHDgrI0tYlEWHSw
Modot6IzsTHU0EHYkGgNvYqEBaqtimGpgxrieZ3Fmzz3+88953xn+ObuqSo5
mOKcK0Wp6JbvXCLi3Luwc51wDirmQzbKgvcFztVGnatBFXCL59xPHEyjVnh2
wrmCuHNVKBeuweY1ti3oKLweZcGZaDmcj89NqRZDsWbxn738dwWaCX/C5krM
uctoAN7G2Uu+hdOc2w1PE/N7yLkeNAWXBRarGpXCxfi8ju8bqBC+y9kBfK1C
nXAT/5lKsTs0w8ewOcLdi1A93Ioa4QbUDJ/Bpg/bfnQWHkEniX0KvYLbPavF
L9QBfybGW2Klk/OfwO6ku4VRImE2spXP03AXNpdilqNy7eJsAb5zUTfcw9nh
mNXkOTzGWW/Ichj1LEfl+gi1wEux+Uo/v6A5gdVQtVROY/Ad32wfotvw78By
G+T7VGA9Uq82oiJ4CJv5+JqHkvA4KoV3oBHfaq7aF6DtcBR18O0QisD92PwI
m48BOMbZm4jZ/LdF62J2x+7AZlCzeBXd9K2H6mUdWg0/QxN8G0dP4Ul0HF/d
KI3/V/I7g2/D2O+C11Dz5rjN0FY4XTWOWI1y4EY0I2Y5tMPZgfmSjWwvoI/c
bQjVw098i6076W6qiWqjmgzDlcQIMatJ4u2EH9CjipD19B4cx8eJiOWs3OVT
vpVDA9zH2dqI7eRj33qoXmqHlsEv8FEeMp/yrRnULJahQTgvYbuoOxfC532r
pWb8nG89U++UwwS8yLfaaicXwhsC6712vly7g65FrQZ1cFtguxRFTXDSs9jK
6b7m1bPZzUO9nkmsnWuDC8jpYtx2fiUcJ+a3kO20drs2MN96Q/SWeHqTUs0m
Da72bVfV4yp4NLDZ1Q4NwR98mz3V8L1vM65Z18x0wSUJ641yKIYzfXvrFEOx
tvg2O3pDNsOL8ZketZnNh5cENus607e/ge263sCMhL2ReitVs/3wpGdvlXZW
u/sPhR/D3g==
                "]]}]}}, {{}, 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxTkvw3EAANCfxdXSQSxag81SxyhRk7mpJsJEYxKDWg2E1RF8An8Uu0rU
vTJIXDMS5RNIlBi84eV1TRXzs3UhhGnW4yGsscIqB+yzxy47RGxT4pwzTqlw
yAXXPHDFPZc88sw7T1T55JsPavzS1BLCj5sdp4MYSTpJk6KHXgYZIkuGHCNM
UqDIHEsss8EmEUeUOeaGW1545Yv61hAaaCRJmj76GWaUMcaZYZ4FFtkiokSZ
Eyrc8UaVGn8kEiG00U43A2TIkmeCAv9P1jzX
                "]], 
               
               LineBox[{3492, 3491, 3489, 3490, 3511, 3510, 3509, 3512, 3534, 
                3533, 3532, 3531, 3530, 3535, 3553, 3552, 3536, 3554, 3556, 
                3573, 3555, 3574, 3576, 3593, 3575, 3594, 3596, 3612, 3595, 
                3613, 3615, 3634, 3614, 3635, 3637, 3653, 3636, 3654, 3655, 
                3673, 3675, 3691, 3674, 3692, 3693, 3711, 3713, 3730, 3712, 
                3731, 3732, 3749, 3750, 3769, 3770, 3790, 3792, 3813, 3791, 
                3814, 3815, 3837, 3838, 3860, 3862, 3881, 3882, 3902, 3903, 
                3923, 3924, 3937}]}, "2.5300000000000002`"], 
             Annotation[#, 2.5300000000000002`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwN0TsrhQEAgOFPSQbOceeMihTH/TJgkcXhuJcNuSUDiuIkYhEGsp5ySf6A
clstMhB/wOAymkRKFs/w/IH3LR6fH5hLCYJgg8KMICgglxyyCBMikwyyqaWG
aqqoJEo+FeRRRxOdNBKjgQ7q6aKXMXoYpZth4owzxSKTLDDBEgk2WWaLHZJs
c8AR5xxyyTX3XPHIEy+88ckr3/yQlhkE6RQRoZwoLcSI08swI8ySYI11dkly
yDFn3HDLHc988MkXqSFNiVBClGraaGeQIaaZYYVV9tjnhFMuuOKeB15555c/
ssKeUkoZzbTSRz+j/ANVjT5I
                "]], 
               
               LineBox[{3751, 3714, 3773, 3772, 3771, 3774, 3795, 3794, 3793, 
                3796, 3818, 3817, 3816, 3819, 3840, 3839, 3820, 3841, 3843, 
                3863, 3842, 3864, 3865, 3883, 3885, 3904, 3884, 3905, 3906, 
                3925, 3927, 3938, 3926, 3939}]}, "2.3000000000000003`"], 
             Annotation[#, 2.3000000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwV0NsrHnAAxvHf2HJ4HXJj5U6vMCu3kgvNQiktcjWHpNRKvVpZKSWl3Ihd
Km9N7c7pFc1fIKd33h0c14qL3QkzhgtXPi4+fW+fnuKe/tbYkxDCJIlICIvM
Ms8hB+zyk2+k+EqSbbbYZIMF1pljh1/85YgL9jlnjzN+cMp3LrkhIyeE//pM
rzVdrzRN/2mmRighmyhZlFFBHS94RTn1NPKWBjroJkYX7/nACAOMMsYUcZaY
ZoUvJElxwsXjRm55mms7hUQp5yXVvKaJZtrppY8YQwwzziRxPpFgmTU2+M0x
l1yTlucjnlNEBZXUUkcLbfTyjkGGmOAjM3xmhVW2SHLCH+64Jzc/hAKilFJF
Dc28oZMH8alTWw==
                "]]}, "2.0700000000000003`"], 
             Annotation[#, 2.0700000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzctLE3AAAODfMru07GLYsUYOw3uIhAkJHdZBB4HSTiJB4Ku0mY+ylT3E
XYNlbT209BLNaxHpGlTgPyAWokFGIAohngq/w3f+Tnb2JXsjIYQcjw6H8JAH
3OcuGW5zixGGucEg17lGP3200UsrQ0wwwz1ecocXjPOcMQqMkucmT0nzhAFe
Mc8n5vjIGz7wmvfMskiZn3xmgxLrLPGLP/znN//YJBIN4RAnOEiMOGep5Rwt
XOI87Vymh34yTPCYHEXKfGWZ76yxzV8OHAmhkmpqiHOaBhq5QIIOUlylm2HG
mCTLNM94yztKlFlhlS12CFUhVHCM49RRTxPNtJKkiyukGWKKLHkKFFngC9/4
wRq77BE9qiLGKc7QQIKLpNgHC1JWHw==
                "]]}, "1.84`"], 
             Annotation[#, 1.84, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwN0c0rH3AAx/HvL5fN02g4afkdJEcPP2b85mmeZ4rSWMk8zOM4rLXaRTnh
ZBLCyXWLHEyrNTlQ/gIKuWw3acVFDrwOr96f+yfaN9k+EQkhbNCRFEI7bbyh
lde00EwTjdTximqqiFNBJmVkUEo6MdIoJoUikinkMQU84gUNDFPPB2oZpIYB
KunnJX2U08tzeihhiI8sMs4CY3xjlHlGWGKdXVb5yQo7LPOLP5zzmwv+cctf
7gjJIWRzbz/TKHGq6KSLMSaZYppFlthkm0OOOOWcK/4TSQkhgadkkkseMUqp
o5G3dDPMKF/4ygxzLLPCd36wxz7HnHDJFfdEUn1HFnnkU0GcVtp4Tz+f+Mws
c6yxziZbHHDIKWdcc0PikxCSyCFKMTGaaOYdDxfOTto=
                "]]}, "1.61`"], 
             Annotation[#, 1.61, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwV0jtLFnAUwOG/lxS1FA10MbyglrcSEoeEpowGcYjwNTVMh4IIBbG2GlMI
ERQT+ga96GAIuiiIRuiSi4YO0eot01Lz3vMOD7+znTOcgo6uh51xIYQoOWkh
ZHOVLDJIJ41UkkniEokkEE/gIjWEJc74xgmLHLHAIfPsM8ceM/xmml9MscUk
m3xmg3HWGeUPcfaVc24u01O9ocd6Xf9piR5osf7VIt3VQt3RfN3WUq2ihVs8
5iZNVBKhglba6aeN9zxhgGHGGWKCKX7wM3ZT7D6uXQ4hj1ru8ogIL3jJG94y
yBCjjPGFr6yyxiZbXBCuhJBJFoUUUU0N97hPIxGe8ZxXvOYdvQzzgU9EmWaG
ZVZYZ4MzzmO70v0HxZRwh1rqaeApHXTTQx+9fGSEMaLMM8sa39ljh5QMP0Ye
udymigfU0cx/ZLFfzw==
                "]]}, "1.3800000000000001`"], 
             Annotation[#, 1.3800000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzTtLFXAAxuF/gxBp2qxmHvwAgg2iU0hgWYQcS0wq4yCii2K4WZJoRwor
LTGMoii6mBGh4iAOohAO0SDS8Vpq5qVBcFKkoqfh4be9byTWEK0/EEIYZuZQ
CNN84TNTfGKCccYYZYRhPvKBAfqp4Q3VvCLGC67yjCs84RJ9VNJLBQ8p5z7n
6STKbUqJc442znKTEm5wii5ess5z1njKKo9Z5hHf6WGJbha5ywJ3mKeDOdqZ
pZUELXxjk6PJIWxopv7UDP2h6bqiWZpDhGOUU0kn9xhkiAUW2WWP9BRbFFBI
lDJqqaOZ63TRzTsGmGCSBLNs8Ys//CXtcAhHyCbCcfIo4gQXKKOaGE1c4xZt
9PCAt7xmjFFmmGaTdX6z//8rNYRUcohQQD5nOE0Vl2mkgTjt9NHLe/qZZJw5
vrLDNgfTQkgiiwzyyKWYk1zkH4TIa4g=
                "]]}, "1.1500000000000001`"],
              Annotation[#, 1.1500000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzTtIFGAAAOA/EIL0dFWhrMY083ro9VSz7CGSmlJSKiZlz/NZqQWBJWSB
kSEIQhCkXUUYRIM4+ABxCAeRi2oPW4KWgqihr+Gbv03n2mria0II85zOCKGM
cvKJks16UljL9/QQfpDkEzPMk+A1I4xylwHitHOWRo5ynEJibGQzETL4HQnh
D19ZZZkVpphmnBc85gn93KODLpppoYZaiimlgCgbyCFC+v8rLYS/rPKNJB+Z
ZY4ELxniEb30cYFWqqimiBiZZPEzNYRffOYLk7xlkAfUUkcmWSTXebnMJbaQ
Sx5byWcbBUTZzg520souLlLIFYq4Soxr7CbOHtrYSzv76GA/nRygi2K6KeE6
pdzgIDcpo4dD9HKYPsq5xRFuc4w7VNBPJQOc4D7VPOQkQ9QxzClGqGeUM4zR
wFOaeEYzz2lhgvMkeMUbJnnHe6aYZoY5FljkA0sss8I/+iZkTg==
                "]]}, 
              "0.92`"], 
             Annotation[#, 0.92, "Tooltip"]& ], {}, {}, {}, {}, {}}}], {
         DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
          Identity, Frame -> True, FrameLabel -> {{
             FormBox[
             "\"\\!\\(\\*SubscriptBox[\\(N\\), \
\\(j\\)]\\)/\\!\\(\\*SubscriptBox[\\(N\\), \\(i\\)]\\)\"", TraditionalForm], 
             None}, {
             FormBox["\"m\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotLabel -> 
          FormBox["\"\[CapitalDelta]\[Theta]=5\"", TraditionalForm], 
          PlotRange -> {{0., 0.5}, {0., 5.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{{}, {}, 
                  
                  RasterBox[{{{0.9897582470267416, 0.844395617566854, 
                   0.5682505657828989}}, {{0.27592008744810886`, 
                   0.40067479111594884`, 0.6568712584969584}}, {{
                   0.4829851487973008, 0.47344525996071274`, 
                   0.5351461106111715}}, {{0.6900502101464929, 
                   0.5462157288054768, 0.4134209627253844}}, {{
                   0.8971152714956848, 0.6189861976502407, 
                   0.29169581483959744`}}, {{0.9326166665886384, 
                   0.7015416664715961, 0.3911116664247791}}, {{
                   0.9656941524271676, 0.784235381067919, 
                   0.4936518725242195}}, {{0.9987716382656966, 
                   0.8669290956642415, 0.5961920786236593}}, {{1., 0.95, 
                   0.75}}}, {{
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[-175, 2]}}, {{7.5, -87.5}, {-7.5, -87.5}, {-7.5, 
                    87.5}, {7.5, 87.5}, {7.5, -87.5}}]]}, {
                   CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -68.05555555555556}, {
                    Rational[
                    15, 2], -68.05555555555556}}, {{-7.5, \
-68.05555555555556}, {7.5, -68.05555555555556}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -48.6111111111111}, {
                    Rational[
                    15, 2], -48.6111111111111}}, {{-7.5, -48.6111111111111}, {
                    7.5, -48.6111111111111}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -29.166666666666657`}, {
                    Rational[
                    15, 2], -29.166666666666657`}}, {{-7.5, \
-29.166666666666657`}, {7.5, -29.166666666666657`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -9.722222222222229}, {
                    Rational[
                    15, 2], -9.722222222222229}}, {{-7.5, \
-9.722222222222229}, {7.5, -9.722222222222229}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 9.722222222222229}, {
                    Rational[15, 2], 9.722222222222229}}, {{-7.5, 
                    9.722222222222229}, {7.5, 9.722222222222229}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 29.166666666666657`}, {
                    Rational[15, 2], 29.166666666666657`}}, {{-7.5, 
                    29.166666666666657`}, {7.5, 29.166666666666657`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 48.61111111111114}, {
                    Rational[15, 2], 48.61111111111114}}, {{-7.5, 
                    48.61111111111114}, {7.5, 48.61111111111114}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 68.05555555555557}, {
                    Rational[15, 2], 68.05555555555557}}, {{-7.5, 
                    68.05555555555557}, {7.5, 68.05555555555557}}]]}}}, {
                  Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.500000000000002, -87.5}, {7.500000000000002, 
                    87.5}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000002, -68.05555555555556}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -68.05555555555556}]}, {{
                    7.500000000000002, -48.61111111111111}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -48.61111111111111}]}, {{
                    7.500000000000002, -29.166666666666664`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -29.166666666666664`}]}, {{
                    7.500000000000002, -9.722222222222248}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -9.722222222222248}]}, {{
                    7.500000000000002, 9.722222222222216}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    9.722222222222216}]}, {{7.500000000000002, 
                    29.166666666666647`}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    29.166666666666647`}]}, {{7.500000000000002, 
                    48.61111111111111}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    48.61111111111111}]}, {{7.500000000000002, 
                    68.05555555555554}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    68.05555555555554}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.92\"", 0.92, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, -68.05555555555556}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.15\"", 1.1500000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, -48.61111111111111}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.38\"", 1.3800000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000002, -29.166666666666664`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.61\"", 1.61, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, -9.722222222222248}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.84\"", 1.84, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, 9.722222222222216}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.07\"", 2.0700000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000002, 
                    29.166666666666647`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.30\"", 2.3000000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, 48.61111111111111}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.53\"", 2.5300000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, 68.05555555555554}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 175}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.8590329881069664`", ",", "2.597375505452202`"}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.1500000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.3800000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.61`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.84`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.0700000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.3000000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.5300000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.7600000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.99`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.22`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.45`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.68`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.91`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.140000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.37`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.6000000000000005`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "175"}], ",", 
                RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
                
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {192., -192.}, {Center, Center}, {360., 360.}],
      InsetBox[
      TemplateBox[{GraphicsBox[
         GraphicsComplexBox[CompressedData["
1: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
OfFZEJ+Y+CTEJyE+KfHJiE9OfAriUxCfkvhUxGeJDH0A88+HK8E+gKEPYP75
cCXYB+9TE5+R+efDlWAfxSVlr3ymH2FXivpFm029jp3crmp82P36dWbTtP30
nEnO+Pn2n72yX2XQSVZRu3X/utees6y2Ts/1H4+T9bI1nU0v635sUxk79fZJ
V7GJI9t6pEm3E/Gvmets54LcYUexh/DN1fvjJx3GHsZtiBA/KzmAPUzL/PVo
1igN9uDfr81Zj2QX7KHA03OU5QZn7KFhpluz13+exB7G2IcNW2PvhD2YPhXN
K/d3xB4+3phR1PnXUeyhmf7Y5CdbHch62gOsaHhu4d8RJkJySrMRw387gn38
Pkhct+yyK3Lli5U7U7IPYS/9lged7nXbBbmNadNbGo+D2E/nwX1tDCYuyFe/
PW7pfuAA9lRY+tt3s6HOyOP77zi0zPUk9pWUcDy+ffEJ7Mt3w+MOdgFO2JdL
/Kfnyw4dx77qzzNdYmPniH155KlP39p4DPuSVN1qt+2RK3K9B0sH2O4+ir2t
s7f8tXGoK3Lpi8HXUk45YH/mPg92r4xwQXZoa7bBL/II9limTzjn19EFueOq
8fczXhzGPqMbeOw7EOyMDPv/QPDMwGlrlUKDG9n9xzc8jP2u/b3Jws1dnZHr
lrbKtvvrEPb8WBaoLY85iWzbvK25k89B7HvKPFXY2dEnkR+4nX5YVXYAe4/t
1EdaduME8qhMs95rPjth/2tfNOwqbu+E/YsOmZt1mKVB7uBWMajd6uN4PNhl
mODp9dYVuU69C2kTdI54fDjW+g9h3h5X5Ly9X/ebmDni8eJL5dvltvVckR88
zXyla3KeHQ11XZxZ2/9/f66GbRUmdT6yMYD5OO+x36c4wpwzZU1/nHjPQs80
2qj5cYC9cR6Y3LtxGdP87Tem3jANW9dqYXL5zc9shNuaBCs3F5bq8/zoWf+v
6Ht4YMpm3YwS1vfxyvPf2zqz9YHDFy7b/p09uRLp28rhLI6P9X+ta7Oh8AT7
1bPWQZdhP9iK008Cc5w07DpbNy1sdAnbmXoxY3fwcfbp/G+qK7JKFvF84Yvd
+zU4nmZJHQ+1jz/GuvUpbPPq5k/mHnpkRW+zoyyl9vW8Bof1+H5KV5e67tJ8
Zo/a7jn1c+MR9nx1aaefzMBetutRFmJxmC1/ujhMWl7NXvzY1aO+tysT//l9
yKIwAxt1KPrVl8iDbJ3h3q+HebWEy4sutY+v+bw+f7bFs7R3LcHN8fP2DQcP
sF/akoKgyyZCYi/ZGNVjZ9ZjRFzbI7+ZCLuHrjhzIek8Hr+eDT4gnlPXmakc
n99++NlEGHpw/OjXt93weCaZfnX/3/NqPn+XfnmYZ5sKTWUnU2fNOo3Ht+B7
PaoVK06wCysbdujobyZsHhq0UNrOiZl4W9iut4f19Br2zGZDs8Y9frH7yz7f
WeXvgce/MWfqeoyudmQubfZOfj3DXLg1uE09vz3ueDzM7VFt4fXyGOvzpkfe
pS4Wwmk7P++/z5zD4+Pa71sKmz8+ynYbMrZni8VC87n2czzzXFm0X+Wax4ct
hNTrhV6vnrrh8bOqb11x7+cO7IJL9uE5j8XCOZ8BUY69XVnHoPNXyuaLhb3W
je+9mnEGj695AR0+rP9xhP3mcMF6pU4iZE8ZXtDB14UpM6sqp/SVCBr2unTz
l1N4/O13uMfwM3WOsG7isrnVDlJBLdrRM6SOC2u71f5SA2up0GdgnFoRpMHj
89b0HdYpmzyQR90//uC0cJh9nfZ7lzbzZMIWw6WNM52d2dINB+tOfi0VgvvZ
OL4wuYDHa3PF2M27Nh9iFy7F/vzQXS7o9wrTjqud2Qffow/EN2SCKKGB/dHg
83j8trvRqald2EG21D+j/kyJQvARBuyNOXuS3Q+rEg87Jcd/L8/M3q29/lmf
t/v43TfrzuHx/UBAnOFG+QH2+5MPP9cXKYQWZaLIJa1OsnfP7Y/UXqUQliwN
tHo24iwe7yNf2g3qvf4E27qtceM9glI43bFTzMMebnj8X3S2b+Jndyc2yvuj
j+NvKuFzyNTpnl3P4Hhwo69c+efd4+zegNT6Q9+qhHdff1o0nqlhFjaxmw/s
UgmX9i4umDLgNI4XB0zchtt5eBifv3jMcsUpy+Ns/ZPK/EvxloJyY3ztBi9d
WeVZu5NjJ1sK7jvMwhdPO4XjS9rEl/qNrheM3y9LzP45aoojU3seTVs80koI
Wv9XWPAWV7beev/uObWthIDzUxZu2KHB8ajsN9Me1mfckb1rvy985nmMPVhz
qsvEq1bCvnfNUvYqXZn8ckeXN7uthE1N3/TOmX4Mz5+2+PktOKNzQf6jpJdr
sf95HM/2tr7U8XTKORy/6pT0Xv7681E2ZGYPe1tba+H+osCn4/1dWNzdhe/G
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
yjQLb2YtiN/MfVzHEIDHs6zIgLl9Y4LwePahlY2985tAPF/1ir6Ssr3m/Mbq
2pONI8OsBfnHLi+qdgfg8W2a3qVq54IANvkvfbBnM7WQcWVF2R3TALIeNpDF
9vaUWrezFpwqPo3szELw+PVueGSDzvsv4/Hr9YKkm+ML/dktZffzga4157uH
3lovd/DH45fp+uuD52QF4/Fr4bd9pRPqB+Pxq29fjy4hU/zZvD+13qtFNsKM
n5G1nNX+xvXpGRM3Bq2+ZFyvUjo0TJ0chMevljnLv82458eaP4wP/bDZRgg+
vyG+mYcfHr9mmRU3u5Eaxh5OaGCY1+Lk/7oOYQ1kfXdt9XJGVre5WVGwOZV9
iFxrtjEylCkvXV/x0CaF5a5o3KHBpGDWtc4xh3MeH/H1F2tXzNiW84CteOyZ
5L4zjMz/CmEnZyauf/f4KXs5+fRdtfMlNiOj1Z8WX77jdvsQT1lm9TvW7Ovi
d04eYXi+t947+Vum5DLbb/Fko9mzKuZ3+E3z6i9BrENG7JrVzQ349RMfXR75
54GvbIG5XecQh1A8n0t/vLBzdMBlFuw9vMuBAhPhtwuifj2aB7O4NoPfdXwK
86tCWL3XZ59Wdv/JYh5Hjm4cHcT+vLXx15JXZsIZReynpXdDjeshxwaViMtD
8Hwu8sETv9oRYXh8WT304d2JfULYmbQjo0udLNDfvu7fMavamgiyzkU7OnmE
4vmb7O/QlitsLjPfBos3bXQQC2/tJw/L638Fz98cml/b7VdzfJliPiLo4l6J
MO5W467Tvgext+N7mN3YIhXal408Z1IZyL4dchFXrpIJdQ4rm7btGIbHm2XO
uvrd5oWS+WchbJXdsGdBLS2EHku/7J/7xxU8H/t4b2dSebsQ5py26/2cHwqh
flEL8/oTL7O6k0p69XypFFymr5wpPRqGx5e34ZGzy3YHs8nmhoMF91TCgLXz
5214EYrHl6GP3dZkXr3EZt1qvXxRgqUglYwsk48IxfMr16YLNOJPQeyO30b2
Y6qVcMJ679SmC6/g+dX5qwfn23YJYre7vvz85y0roeaEK7ivbRCZ7xXCBoUs
ama7QCHMv/N2WJ91YXj82PZqX9SZT6F4fEhZsWt7yaZQPD60HzXg0aofV/D8
pqn0kr+D8gqe3wTfLq2qMy8EjwfvOmbmek2u+fPeN7m8d6ta+LjN61Np1mUy
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
SwSXl1ebdO4UiePlKoe7AeNr/n2bPzuo7zpaKsyy853Tp0THei69Y9XrL5nQ
zKnp38MVUTj+mTdp1vWBSSSOf/Dn29U6I1SFiQWnU+d+2mprjtepc96cWWYp
3NBnrB9veo21knp4be9uJYyb6LfdTh6F493d8J0Tri6OYPX/slq9N9xKqLfn
ptu3PhE43nnZbZkn6ReJ453ZX+LMJeuv43g3pU+udfZNHfPVDcr62sVa8Ogb
f7h3rA7HO3h/EadGvxFuqoTaTqZ/nm8ahePRk8m7njjaR+J4VJA/0M786XUc
j/pHyG4GDLuO49GD9xMnKl9FsdQGs0+tbxbF/r28PRvFyhWPR507dRA5verv
9uvaGbfbupiEx2+4ybrcURcJV6NY2eJrC8wW3MTt6lHbM6u/3Uc+m774Unmf
EvbeqsVfWfoYvB6E7cXlkvXrPF+yju2kmx7G17x+yGS7Wc1LWK8p1+O3bYli
TReUD32WX4mvX7RS17jVko8s9VyjlAf5UWxw8dy/D658idtXPgo43en1V3by
cv2giZcimbbF+zbx7U0E2B6hcU2+FFrJrt/f6V3oEY3ng56ff20VDY3G87lV
Dsr+/TMiWazCNmDvJ3P8+qjBP9uGbasljHswZ8/IC9fZ/sSS8dG/i4VHbdbF
NGoQg+NJM8uFQutNMThewNf3DDq0orKVuXC8eWmm0DUax4vSd6/PNqmMZHOf
dwrzGq4Q9rQruP21RSQ7+6HJrpipSuF00YTsNdOvsxumke2SFqoEN1dN/RHP
YnA8yLq3IIw9i8bxwLL2Y0nXd1E4HsCfP92pjYtij1wY9KDW4sm1Y/H4r8xW
Xew9LgaP9483Jj4MORZtXP92u3PXdllReD7UKvZw8tKa4xkcn0d2u/79Wu0o
pjdT+GfXXM8c/2Ohxd1rkXg8hj9/Xu34G292qIWL07+3i9gbyRx1TaZ2WGEj
/DXWYk8EizQ+73v0wbfSkFg2XfytW4fya0xYWlha9QnezwE8T9qYP/qLSc24
CfzHo+1fbaQZzC33WBPnnFgW2aNVwcCL6bg9LTtEWuf6PfZ2b+HmTX1j2d/D
rlffvmz8OV+q8vbeEyYa10X3bPxnn4zlz5ldfLdH3XfEs5c/tVn9Hhif26Qu
WmWbvvgdC7vZeX/O6Djy/IxYVqe7zc67Hz8zzdfOY1ckR7P3iyZ+ube2Grdv
m7Hn0MS2P9h7j3uzXp6JM/784Ucf1r2NiGFOM8d6eK8yEwprdXjtsjwWz39k
dabfNW8YzQxDZhYdjITnTcSyPUGfz8Re/cVyItpHviyIJc/TqPn6Vmu3NFeb
Cc4rtBM6zIzH42fu31vDLeSx7LhPg0U+byXCiLRH05V5sXj+s1D013Zdzf5v
6LuhtKLmeuOTX61XbUtqjgeXR+m9usqFm3Xc7FO7xBuvJ+oGfBlmEkeenxHL
QqrM2l/Iqjlf/7vtC+2nGDw+tqrq8vTmkzg8HmpNirVfimOYfm/t6KSnVkK8
jVejFXNi8HhYbTN8alR5rPHneZW87jiwSQzbp7SenL3UWnCvY9c351a0cT39
0msPTi+JZj+n1X0y523N8XWkq6fDH9Hk+ROx7LT426azV6yEjbeEl0svRzF/
W6vkY2vUQuaN7JsTA6Pw/OXMz4KKQM94PJ5K/b4FDyiLw/OTD14XTmoGxeH5
x7iejbsPco3F84+5zz/VFq++wUJ8F7V42jzif/Nn4tlqB72yVw8j14ua2/n2
j1S2f/gwQXvvBvtwdbJF8IxU3D5y6/qdd8zusodnm0f6am8ws/XP4wYcuYPb
J48KHtjB+SFy2bjrT30cn7I1K3ftC1HcwPN92O6h+e3CgGev2a9uXZsVNkpg
myYNGLnUo5S1Obqu47PsONZbcbJDyMcqfH3Tjs36eY8qQ85r4lw9RvqdzZxw
+MN7jwS2ed2Y7udTaq7POxxMPxgdx+YOaTp88S8TAV7fu57OJuTXT/bMaWju
us/xeD7hkb3+8sLjCXg8Xp68ZGbbu/F4vgBf365Z+z1zppkI16zrDn64JI7N
GLZm26aa8dsh9Zh+ijgBzx/cPEf3EG1MwOOterls+/BdN/B8AHwxf67vsOC4
hXDhWEL+z1PxbPO+R7vcD6qEE5YXRjTSxjHzpYt6Gy5YCg63lxxvuCMBj6+f
avW1G3M9loXHNB69dJaVMLus7YRDJTfw/ODwDCeHVrnxOP7Dnxc06XtqxlyV
sO5Vl7ND9yfgeB57K6VhYYMEHM+D+h39fnjFDRzP/ztOJLIT5kFZWX/bCCta
/j3yuHUiu92/6d3I01f/97lPYPpPfzz0DjTyXdO2J7q2S2GLA1qEVy9KZMvH
KhqHzUvG7bcTOl0sOJCLvPrA2DXLFhSwkT1j/hi1JZENPfvjlGbVbRbVaWtC
acANVj5waNDyed/w9Y82jnP+/r2EXW82ctCDNoms9IT7yc3afNy+p/rC0gGx
L1nc6xdb+3dPxPNV2G7Y9+bzpTsfkBefE4d1YV/Z5uJL2VP9EozruUrYL2XP
BLajzVKHyJm1BHj9voaxriuvVrBbjtUtfH4lGOeHBSw5eOlJovF+vVXgqKGz
E9jg3neWmKnM8esnCQ7fN8dWs9XtH8s3l8Sz/YLLhWlrLYTvG4Pf7qtMwPEd
Xp+Rqb/X218kjFsduNisbyKO92b7m04ctSmBnW1WmXe3m0JYtzq+rP71G2zJ
PBZoN1cppH/doLwXkYjjd6vCbN2h2ok4foN/6JntE+belwtHp4c2GPEqEcfn
2PDvz86tTcTxuUoUHTy9PAHHZ1O/0J3zVyaxv2+2WXWXhTP4vBh6XxBdmWJk
K83EdZYuSextY6l3dH4Sq1j7/nQX/0Tcrtjl83vk3BzkX6t3/LKxe8Dkm7eY
J1kms11fVmy5OiQLtyft7Jff548nrO4OJ6/Sr0lsRf+A+j4293H7iNNPizt9
f84+ejYu8p+VxNze9pnedutj3N5K79rGedM75NW+eT93RXxmFw/mXkuXJ5Of
T57ItDab7edHl7OWPXpcPnE/CcfP5hM3Htlhn8jSvJeqNUfNsJfn3qe8a/X+
xaKtGzTKlCaRnzde8+dVv+jw0txMeHlbtmpbdZJxfPy5LT/NMgnHQ6l0+G/a
54msf0RGkwXhUmHbxs23GrRIZM3tIxvs/yETDgzabdq2aTKOh21mZl6+sDQJ
x0P482xT6j+r7y8Vet7fdmS4PgnHs0G+XUoXbkjC8zPd53PLFmckGn+e75rw
PZLEZNYzzyNjdO0w1uPfn2eazM6btdMEtjOy7Z+nDpbXvK9T63ZWzR+ewlSN
+zza1TQBt2dtqHsyrPwWi2zWdHLdu8l4faobMzPbtk0SGxn7ZG/u35/x9fWu
VjZ5dy0PeVLRaNGD10XszQrdwX7Pk/H8HraPG3Ly/OCZz5B/teh32b7menX1
YO3rWRNSmEMLyR4r9SPWULmyReqEZJZ8c0Rx137Paq4j/UPca/7+yV/WN2g5
To9fP/DnrAe2C8uQWwV2uN7Q/DuztBd1fx2WzNKtO3omhLxmE1LCvM9Kav68
DnftdBkmArz+r/KYDyckVWzSd7fi6DXJON48k2SZbWfJOL7A6xt/71Vge95E
6PTsQ+NEaQqOJ7VPei/8dCeJSXQ+Q4ZNlAhXHV/fH/w5GccT+Ppza6d+EVLF
wmdhilV+1xQ8/u9f/nY1c03G8532vVd4mj1NwvOLjk5j7dzjkpiZycIvC0+p
hfCIxl07H0jC823wm146+PPxb2qh5EPe0Q69k9i+31WTslraCMGZF3t9bpaE
59/umuGxH35LZa4zL/rp5XDfI4Xt2agb4dD8/3F6bJzs2g3kaZtWTY40ZLLw
tWsbfAtNZfveNL1TxyGOyfe9sE91TWFC97cb5rzOxNfX130TTvW/x97PXn/6
nWcKu9j34tUHtvdwu+PR1e/NMx4iLyy8397C9CmrkxEVM/ReCvn+Ywp7/uTA
coXrK+SqJVYFmzd/ZINa9LveYEsqqzt0g7ejqhS3/xp+x0l+5Csbc1/j0LhJ
KlkPmcLed839uL1JJXs4W7rXb3gqjg+r9qVcyfZJIT8fNIXdaZ+0a+S8WsKh
drnf77xNZrq0godv8yyEs9atYk93TcXx4EbEitpLE1KNz2NMyKttfzuF/LzP
FNa5991OextZCGsldfdEnUjF8wc3+/3dxEUpeL6wa/KodoUNU4w/v3Jv6sXy
N8msY+S68qiV1kKPdaV7IkOT8fy2/+vuVSeGJbMtHs032ovUQvLy0XPLaj7P
cH4Lf36vT5+2JZZaCVNW9Z+wdm8qnp92e9NnQIA41Xh+Gu6qn7cijXUQNmye
NCjkf5/7VNa9btsuEzeGMKGe929H7NLIz+9LZUd7edtPmx2H/Dkhs8ppWQab
Fyr4PRWnscwurTMtOmTg9kXSrP5rze4in1Su/f7QrJDpp95uGdY1jUUndRm7
4NId3D50dq0Oy5JLWOj6exc/2KQxD9993c/6FeD24C8nwlN/vkCe0vrD40uL
3rO7EfOsXw1IIz8vMJU9lMc6POjzhd3+8cmt/sg05n7W9d73ZS/Y7vEZR3pF
p7KlLp263jprwNfvsm+4JnP9D+Zh77RncI2P//mAqaxr40t3Hh8zMEOur2zX
+FRWFCZu2r2tuWD10Gdp911pON48mmo2W5KdRn7eXyp73trz9dcAkeAr+nLQ
bXKa8fketpXxu6alsuM3kz6bdrASXI7aXx93IoWVPd4tC8i1Eg5Wv13Y4kgK
+fl1NdcJjwZ+SbxoKTjZdr524WQaXq8EDmnn3lGUhtcrSWlPRlyISWcRQxJj
Pp8LZkmhkbYv1Ons4cyP/Yt2xPzv50els5kP0ibuyg5GHn1318e6u2LY6K/D
p43akMbGHPMqeb7iHW7/9utZxM+vaSxpfYxp1pZ0FrmtTWXE2TTcXlQY96Hv
s1zk5/Ostm7blM/G1FeO3hybzlwmL6z88Zdxe+xI89NPFz5h2lrmlh0S09mA
Pz4fSw96gNsXJppIHJyfs3F+381bL05nkxZrG//59DFujzy43na401vkxNMN
iyuVn1nQ/O2bd8kzyM//SmcfpS/OnSv7ztY9XNl73t50PL/4Ijn0uH/9DPLz
vtLZOs/qeu/d9azvGou9a7+m43jy2T7hL8OXdPLzumr279i3R9rMNhNeVLW9
lmWSgecHdce1zFA3Scfzw9AH/Y4O65LGdLWv9G5oBj+PKp0tOLbMs2+SUnAs
bf7daUIGXj9YfPvcxy4qHa8fGtxt6JT/ezpeP0zo1NDtgSKT+Y44cLyL7SU2
2zTw+JDVGWyua2Ld3+pH/6+TDFZ6/Vlf8cRLyL9G7x0Sa2vcvvblgTfbPVJZ
zILlI7s/z2BZRd3NtrdLxe173y9J7x96Gzmy+u8FOw33Wb641W8bBmWyfR3c
HhZNysHtFec/TUjYVYxs1Xhuu+XDnrGU+/JaM5ZkMvGWngMmFeXh9oXr7m1t
9fE1+/rcz6ttl0y231lj7zWmCLdf8E1a8lP/iVWpOoxftjWDlbh0YW9aPMPt
Bcqjx8POfGMPkzM0a1SZrH7PEz9Y7dfsQMNqn4Hj0lnxfZOpHW3h59VksB7B
VpP+LPmJX99vxB8v2vUwFbQ+hcq2vTPx/CB1gMqtx/gMFvxzQ8+OdRSCu1Pz
lWlfM/B8cIDbpPCzrdLZJ1XenVnuSvTfvtbx/WW1Qqj7aFujjaaZeD5vP91Q
p/ucm2y1YsGHT4mBrPvwJbOrkjNZ55KLRycVRv5vvlkm2z5yXVRJeSDynsbz
81RPjNsTj+tney+sOQ/0z5l9cexNNvebiepuQTIbVuXbJ8U3g309OTFl7MFP
+PorSQ8jKuOykT1XeTmkeOWx1NsOdT0Tb7LqtntOFNtm4fZVU1OThYhHrPXk
Avna+TfxfNA07mz+Y+ea/bto8PK7S77i622+5+k2tHvK7Pyym/+IuEnmN9b8
e34bZLdy4yvkzNjILvaNPrKl4T7OsmU32ZGO/cYc2F+K2w1D9GX/V9aZx1P1
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
4hUqLMm/x72PSYKZD5bsWWpUqP45MZXTmA0d1cGSB3ipwE+ReCp3vOi/+xwF
NvRxYLV6gxAPHlEKvoVPQizrtdWCTM1GrDu9f8lJl9Veu5Z3jffFcsT2mbnm
+Zq1wK2icHvOkQqla9/g9evL4IX3MtZyKxU46BbvHNhqAT+l05PVSAH8Z4vC
NdPjqP1TGe4KzQ0tiBXfrBF4eYWAuINHXNmNsR/3tfYecnKhgrho1UCCWDMM
qpxsfcBJBWcrrdIN+iz/7xGRNult3fD25bEXCdJUMHMrUvUiUZDu4vpu+ZXN
AHzVdKjIXWGc3w8yPVXlusFbTZDIY884X7rvqN4QW0T+7w+9PumljIOqId89
UwMqfDJReKP3ux8iMB3fe45SUT0fwDPIa3CeAntLyzOmj3FimO3lkrVXPpYs
oP4CPmZ18UlzYDRTLPQeMD4vZt63OmJM4vQEY3/fjTgNCQqj9n+PshU8XCWM
KR+0TLmgT0V53vOjdkOj22hgGHPuluW9QNhsk8Vnz04DzXdpLlpdidDg+3PH
DIUKMf2X+mV1suFe3l79R5lUSOZo94oOZL6vRQXO5W/Xdv8JRHxJvjncTjgJ
MSXmc9Wmc9mIPXKJ+/nDWe0l+TR1fcPKEGM5Lz6Osa6Ba4ZfVeI30+DebjOe
a1xlYEJVpYqQGOevq05+79Ya5Be6fPGjCa0J8dZrNjj5PDziKYsSHpGtFLjS
9zlZZjcNojx8FFcyGuFh5lru/CIqGH0PWj3xieW34b3/Zb9WFxx0F3cKJVNh
eJav7TaOjPRSe3q2QlQ/vL8XJYSrpsKmNX/upo50Il0826lsJmoMRluvbEy6
QIX5u5UCd2wXQDt3QZmdcbzvhURynx7tYx2PV46ee68sIA7hPbtTbo4Nc5l9
07kQERrKb2xey+4Tj6f+8z4XFZ6a23T6JQhiHFUjLuYL0VA+53oz7dJwGhXl
uf+/zqJBPG7k5pOTYpiqZ19nVVtpULOeLBPv8wmwn67+iU6kQYHMzUY3+USg
Zy4ti7rRwPN8mkfQ9ywYbgzn8rjE6F/6S+zEeAG6rz5MjvB9KxGIWH7T8JDM
hUTEno5sVY9bsxA/pfOL3/hZAEr1atp+pVQwCZpZNXRrDOmxow5DW+pY3/u7
fqD5s1Z0NYRz8pxXxNNg48qXpR2vSmF4MlHGxYMGoV4Vt/SNqpHfQS+0Vyus
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
vyVvUj9ZQRTzfwCnxU2n
          "], {{{}, {}, {}, {
             EdgeForm[], 
             RGBColor[
             0.9991287702164952, 0.8678219255412378, 0.5972991876711349], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2561, 101, 2691}, {2501, 51, 2562}, {3075, 401, 
                3136}, {3181, 451, 3223}, {2956, 301, 3019}, {3018, 351, 
                3076}, {3134, 451, 3181}, {2690, 151, 2798}, {2797, 201, 
                2881}, {2880, 251, 2957}}], 
               
               PolygonBox[{{2502, 1, 51, 2501}, {2562, 51, 101, 2561}, {2798, 
                151, 201, 2797}, {2881, 201, 251, 2880}, {2691, 101, 151, 
                2690}, {3136, 401, 451, 3134}, {3076, 351, 401, 3075}, {2957, 
                251, 301, 2956}, {3019, 301, 351, 3018}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.20460896952609076`, 0.3614494275144949, 0.59301474923872], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNkk1IlFEUht/5d77PmdFFG2tjkD+b2uhM0MK0qEWGVKs2oSE6iOmiVRAI
RiX+5CKQcRHRYiAqhFatahGazYwGrlxFC0UYodKFu5Keyz2LYM489zv3/Lz3
3Nt6d/LmRFTSABbDKmmpAX6FPTnpflIagslGaTAiJeBwk9RN0CwsY8usK86X
ld7HpRtwM/TxLi8SSF3UjMI633M0DDPSAvaYpitwFf9t/Ptwl1p/qdnQLAXs
fcTfCV+gI52SPsNx4o6oX4KrxNeIr8MWek+hoQCf8D2K/w1cIq6dOmtwglq3
6LsI17E66z24i50kV+QWQR4bxZL0yzGHDlgwf9H23Lob+8TeBbTtwAznPI8v
hD2c4TmzHIQ/2LtHTAI9KYtxsRG+X+JvgyNW19U8YG8ZHsJ3aPuAzgrcpF7g
7ou/EqzKxyFRCXmNx8Rd5yynOMse9p2NNP0fYtsEvoIb1OGnGn8dxP9mPv2w
Fa1D+C7DdXLfkluH3/BxrYrTd57FH9YLob/bEdM8QNwOfcezXo/T4s7Zx9li
3EUR3qF3mc2pnH9zXZZ7yWo+g2Pkn6DvHKxaX9d/hu+r+F9nfW7U8gt29ry9
Y1cvbjNx/VOmsWTzLdnM3LpK8bO8pRqM2TuPw4uhn20vPI3uLYpcgdfcjGgy
mfE1/n8LCes7Hfh+j2CMOZ5DextcS3vNX+BPu79f8Ayz6EVsX85rz1udMud8
QNGqe8+B7/UULprmDfgPyR5q6Q==
                "]], 
               PolygonBox[CompressedData["
1:eJwtkz1ok2EQx//Jm6836fvh4KIuEax10cVSQTFNFB1URJ1cREW0iE0HJ0Eo
KFax1g6CtIOIQ0BUBCcnHaQlJm0HJydxaClE8GtwU/F3XiD/8Ms999zdc3ep
np842cxK2ody6F0ihUVpL3oLt0MJ1B5ULEuDqfQYwwe0FT64QTqHzwNUg+9i
Gy5Jl9AUPESMpCDV0TZ4EJ9dod+pwiX0p+S2wGLhcxXfFjoDjxEjKHnMC/Ch
1HObrQG/515JXqPV2kg8l8Wowc9Sr2UeteBO6ryEFuBe6mw1rMHrEbZA2kwz
1uAnxPhY8J48gnux9DwvfULrcEBP+IjUWubrJz/m4S5qVKSn+BzG9xpqwbc5
H5P7/IBvoovwbpSBl7mzMyOdRStwN/a7lrMN5/DB/D/nCvlCYEQec8rOyj4r
s9nZUj/eb37fg08Q4xVvW0XHY6/RarXzA/BR3vydhajSgyPwND4b8/6GO/D9
ivtazFn4SuyxzOcyXO/Hm0Nfyf+t7GxvvGH1hN4rm1kHmIg81ynUhHegN1mv
YQjeQsxjxJ9Em2DFPhuz/eV8MvFdsRldt91NfDa2cwU4z0zHi76zGbg2IO1H
46iJVhPfdfP5DGfLPgv7TyxS32zktd1CM/BI7LVYD4fhL8Q4jfM06sGLaHvW
bQvwHPqVcdtDuBK5r72xDNexjfZrstpm+v21Ho7CHXxeB76Tbfhl5LWY7QWc
G/BdsXl08f8Hnfh3Ww==
                "]], 
               
               PolygonBox[{{3182, 3181, 3223, 501, 3180}, {3077, 352, 3075, 
                3136, 3137}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.3045881509201444, 0.4107498293968559, 0.6400184671907139], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwtkktPFFEQhS8COt33NjODPBLiRlaAC9fjI4QhhAUQE5fuYKeSAf4Dj4UE
Q2OMtvNbWA2gsTu81RjiHnQBMdGVhq9StTg5Z6rPrbp15t6dW3jauOGcmwTt
YN87N9vmXCk495zfGfgAHoCXYN608EPwLXKuB67Gzt0Bj9Er8BH1MrqEXo21
VwQfUu9C30QPgEfoZbhiZ6XHm1j7p/CTxLlBLrYEf+VsP/Uf8KdI7/EZ/o2v
if5rc+S+L8A/kIsHHOOrwDGeV9Zf5kywbyH7w+fs/IwwLoLuWrM+eaS7tuPf
i7T+Ef4OetHdUrezP4P2k7n/wbjX+XX4VqxnpccBYCXXSe0L+ja6jD5Fd6O7
0CfoKjqg77dpP9nptVfegBuWzwK86dWTes2mZv9ZzLd17uYTzaZpey3Z2cVE
M5Vs+5g1yg4p88bgt+AP+h18Get7WJP8+N2i3oDrYAs9Dv8KOisk2kM88i01
lrdVt0yu6NPCP4R/J+g88XUGzS+z/y4zzy58xj37qPXEuktmWYsubLfCa165
13pu3+5xp0v6zCSaU255Ni0nySSyXWSnIXzb+IfhKTs7neg7lnfm4SLSN9yB
Tsw/Ai9abu/ha/GZa+E=
                "]], 
               PolygonBox[CompressedData["
1:eJwtlclvjWEUxt+2Onzfvbe3rRpiWKioloUVakobRReIYWmBNiQ6UIkt0QU1
FKUSQZCQELP/oBJKJzUTEQlJp7QsiISV4ffknMUveb73fc55z3mHe2fVNW/e
kxlC2AcTYDwZwhYGyqALnQe1GSGchQhdFIcwCV8xfIhCSPJdiC6AN3x38N2E
boR2dAoa0EsgFx3H5k3Da/x7yNlF7g6o1HqxzeXDq8hyKNcl+Km1Ylt7Irxn
vpjvycFq+sj3VL6XBauhDf00ab2op270YcZWMLccpqF/QD/6InxHX8DzK8Ni
LqLP+7dqbEIfii1Wa2itZq9fnr3oF9qTYGsUMJ8PRcH26C1zPZHtxVLoRdck
QhhA/4Uz6OeRxSpHH/pIbLXVQ6t6hSnBev7E/O/Y9kY5VhOfiM2rPdfep2Pb
K9XwDn+2zsTzq9Ynvj+q/xw6J7a9l+cl89VJO3v1qF5PscafYHtWje7H3Afd
0ANJAk+QrxNS6Coar4TtUAurYZWPaa48ZV7FxOjspN0F3bkc9Dyf/w7z0etS
pjVWhj4N7XASTqUsRrELYID6Slhjlq+ptWdz+UpgDdRANZdtJVRCFczFU+ox
ip1JTzNgGkyHZtYoybIa1qLXez0a24D+Qo7PkE3uHJjg90VnqrMdxTMCQzAM
N/Bch17ok581s7wG1TLM2BDkoaNC61G93ocHMM7cmHvkvcfYXeiFPke6G3o8
5r575H1CTJfnUC6tkec1qJav/nug8/mWtBp7PUaxw96LLk1Gvq3R7T2q1zt4
bnuP6lUeef8y9w8Sfl+0xljSxjSnPdfeb4QN0AS7oZS9neNnprMrhzIf01wF
nsWwEBbBs4TdBd3ZdnRHwt6axp4nzCPvJtjsd1h3eQzG4Qg1t3oP6uUGY9f9
zuvutzF23D3y7oQdPqa56X53VFOFr7HJe9roPam3Bmh0pNvghCN9FI7BLbjp
NaiW/sh+S/R79Axdz5q7vAbVcsxjb3psld/1WqiDa3AVLsOVtPWs3kdgNN88
8m6FbZALOb7n5T6muYPQkrYYxUboWGdEDSu9JtWmschzKFeNv0V55G3xXPvh
ADyEThiEobS9Kb2tDMgsMM9+7+Ga96BeHsFjvWc8pf7m9fYf+1yn5870XPLI
m+X/H3qzA5HdkQX+e/QiYTUM+hvXW/8P4X7lVA==
                "]], 
               PolygonBox[{{3440, 802, 3438, 3471, 3472}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4213643674685968, 0.4517893943180372, 0.5713704676861924], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwtlMtPU1EQh09VDD29t+KuUFooj6ggpppoMBpf+FqhQV25g7gytDX8Ay7U
+AKlGhOJ1b/A+Fi5cyXiI7QquvYBQQRSgwZWBr/JzGLy/fq7c87MmXtuM/35
vtwa59w5Yi1R8s4V4BLMO9X7iJnQuV8kzMI5onEd+XHn3pv/M9Q8yd9PuIhz
ZTBJrFp+hPwTMecqeL3wc9S5w+gN1PqCPoLeiL5BDKIT8CP+QbRHf0AfQNei
K1Gtsx5djmrtGnST132ycJQaq+hjcJ6cZnQn/i2ihC7Cb/j16CT6KzqBrve6
Ts4g/U/h98A4/kP4yGl/4zy/S7wiWrz2dhW+DpzbwlDHYTNnvsjZd8PjdnaZ
wR5+P8c/Bc8Q0+g8PG96EI4wt9PM9jb8Yz1L7ydtbR/cyrOX1OqCdabFW/ba
5z/YaX4HHLX3K+/5Dr+vsP9TWet1hjLLKfob4Eye/muo0UutNJzEz+IXYdL8
FJxg/Qv2eQt32Xm74TPz34V6BjlLAT62uk/gJ+odom5A/SHLKYY6C5lDLq59
SD9hoPOXeyVz/M3aFriDtX/RbehudJvXO3MNXgj0PQ3BLq/3bRgukd+K3ole
4NlZ5jMPO7y+65twk9fersNl8tvRe9FV0+JtZ+/+iPZXZf0w+8Tpv2yzkpkd
tR6kF7lX4su6QqB3Jw/H7Hur2t2T53L/ViK6VvKydrdH5N3F9Pm9mM6kZHNJ
2LdzyeseWesvDLW3AD6w+zkB39jZF222Fbvf05ytEWZsP/FyRDTQ/WrhD3KS
eGnpK6bfygp6LNC+78NZctL47V77K9l/woD1Jd/PIjkZvG3kfEc3oFPoOXQT
erPXGckMeuAMfgq/Fb/Ba1+X4X+b/JiH
                "]], 
               PolygonBox[CompressedData["
1:eJwtlVls1UUUh+e2FHqn939bFFAord2gpQYDJBoMRFq68UIlqE88CCWYQMIm
z5iaKGtLQiEGkSWBpIQtKk+8lQSohRIBRSMgm7S2tBAIGnky+P085+HL/c2Z
Ocuc/8zc8rb1S9flhBDaYQy8iCH8yO9B+AsdoR69EH5Oh/Av48Poa7CoIIRM
tLkGuMF8NppuhF8YP2e8Ab0e9qOfRtPrYB/6s8IQNsMROAqfQ7vbNLccPnab
5jo8vnJWo/OhLliNP5FvNBvCCAzBMEz1fO9BEXottgE2egaWoC9Bn/vI94Os
zWnNR+jCaHtpgl+JfwVbv/vIdyzzC4LVcJ35txiXo8tglPE0xqXoEhhkPIdx
RbA1TxjXJiH08AE6IUG30NOXwb5BE3ou66vQlfCc9W9Gi/0GPGK8mDVX0SEV
wh70fOanBfP5m/m8aHtXjdcY72V8CL0WdqI7fX/qaS36GHvq9j1qr7ui7V1r
ZqK7op0NxVCsy9R8NjeELXAafQKf4x5Dsd6OVrv2/Iz8O7Bt9zVa2wkdbtOc
zoTOhs7YP+iaaHtVD4fwL2Y8Gf063Gd8mDNxCM7DBagZz7mACqh0pJugGU4V
hXASuuEY9GZCmEHvX9C//egObDthK2yDT2CV2zT3Gvknwe/kvpO2NVs9pmKX
MzeV2orhIfO92C7CCIwKcizLsZw/oO+x5m7aYip2s9daB/WwBp/VXoNqycM2
xveovfZju+w5lKvefVdAG0wk5gS4RY7b8Cr6FfgNfRNKo9U6Bf5g/KX3X3dG
dyeT2NlUzY+pt5EcDV6Tavs6Y727CBvQVdgqoQUWFVmP1CvVoFq+iHb2lGNK
tDUtHlOxa6DaYyhWIzH3ErsXmtGbMqaV8xt0Lmty3KfGv2m390S9+RMGIU0v
IoxDj3WfXP8mI77m/7WcoQG4Dw8cafnIVz1UL9VD9bLM77/euN3okmi91Bl9
kLacaf9m+nYX/Kz2wDlohAaog3pI6c3i7RnhPg3S+3cZt/t7NQ+91N8n2d5B
1+IzA6ZDNVRGe2t0BgfIv9D71wZpdAIrU2ZTb79L7O7qDn+fWIzpXpNqy4dx
nkO5CiC6Ld/f7CN+B3UXV0Kbv9nLfU91btPcNn+v1TP1btjf6uixv/V6PoRd
6O3+/yOfCvQO/7+RrSpaD3v8m+nbdSXmqxh70Lnez1bIQz/x+6cz/RQ91/ur
+WJ0a4H9t+lN1dtamrU5rSlDl/hYMV8Sv4s1s1L2Zu9G9/t7qO93BT2UmJat
D32dNbNT9g1uoFuxLYb3YQn0+XukGi+hvyqwt10+8m3I2F3T99O3zfr91H9I
EXrY86m+Rx5TsTfCp4ndGd0d5TiAzs/Y2dAerhL/P+rn/MQ=
                "]], 
               
               PolygonBox[{{3442, 3441, 3440, 852, 3443}, {3373, 703, 3371, 
                3405, 3406}, {3694, 1252, 3691, 3724, 3725}, {2585, 24, 2519, 
                2526, 2527}, {2521, 2520, 2577, 69, 2591}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5381405840170492, 0.49282895923921854`, 0.5027224681816708], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxFlElsjVEUx2/bVHzf+/peEUTEUBWlVdUhkZAYO6JFE2wakSoLEVItkS4a
dGGIUqoPbVFjgy4QGzu7Gmpoa0HEbFFaGoJURPidnJNYnPz+99x7zx3OuTep
fFvp1ljnXB0WhzXFONeJRbH5vnNF+KKwKsG5ZAZsh0Hg3Eb6R8Bi+koY0wan
yjj0QRgXcu4COhcux3rRa+Bu+rLQtb6uIXEqzLKxLCw30H0kwMWMW8b4U/Bp
SPu74RzaBfgb4WSsEr0fTsLy0c895xail6JPwDxsOboFzsMK5ay+rhO19YuJ
GwNL4BT6tjPmAPxLrFT0Ml/3GGP7/Em7Df9JGGt+6W9l30OwBTZaTIndi+Wg
n8FfMTomNVa1MA1LIVY1MQ/BS6a/w/NO71PO2cT8OOY0w7qIc5eHObc3ov0X
ne67lTk74RVYa2P2wLmWL8lbIrk8zJphOBK7g86A1fTNljiwkfZq8n4M5tjd
NsAu2rfxP4C/uJ8U/Ivw3ws7VxNPP2zHCtFX4SfG9TN+AN7A9qGvwxee5nG0
5ITzdKP/oDsszkPYYHGuwZee5m4sY/6gZ6AL0EPoaegFUrNYMfoMfMycDuYO
hDVHcm+yRo/TmjxntSLnGsX4157W/DipT9vnTfgb/3T8S/BXYLPQ5fCW3cMj
uIp2Gv4V8CDrjWHdevjG0zoc72v+s63ud9rdHodP7H7knipt7pGwzhe9Nax7
lT1LLcSHNNf5Ic2x5HrI6rHHzvXO05qfiP+jxe+DW2hn4N/s/78LmffW07c2
Af9abCZ6Nfzgac0ko997erdJvp4h297OUXuDk+0tiD/H3qq8lWhI61vqvCxW
a1T2L//FcOryFWcMRXQ/kiPZ03ra1dTtBng20Pn3AzXRXfC3r3HkPjrtTcl7
qsGfiX8XXIelo8t8rW+p80wYJm4i8dNgoa1VAfMC/ROKAn3bcjeDsB3bgf4B
S+0/rIY7Al3zNCyh/ZX46XCTvTt5o5X2fuXcX8J63gB/s6+5+ubr/yj5bYAr
LY7Ea7H/pAqm2h7q5S3aPyn/ZYqdJRXeC/Se78J02ovx58N0q5PDcDDQPHyG
3wL9ByKs1WfvpR8usrm5Ec1pjr2ff1JvxPI=
                "]], 
               PolygonBox[CompressedData["
1:eJwtlVts1UUQh7c9beHsubUaNcaIVgq9URHEC6LG1l5FQZDqCzGm1JqgEW0L
MTyY+GQhoEhtjSi2WrREa6LGF98gUSuhXvHBxHgBpa0WClTAEkL0+2Xm4Ut+
5/x3Z2ZnZ2ZL2zatfTo/hLAbCqAxF0JdUQjd0IyuyYRwhgUHYBH6jmwIy2EF
3AkFkIBCKIKmEmxALdQ50m2wAa6K2MVPC/yWNBuy9RCsg1a+L+JbNaxBb8hZ
LIqpFj3FmpHCELbCIXQpax5g7Sr4E3tXR7N9H/yetJgV+0tQjL4m2reVcJTv
a/x88xMhrEWn8PFrofmYxP610dbeD8dYPy+als8/+L2N353oLihD3wxL4STf
pmEx+kaYQp+AJR6PfMr3RHEI4xDJTarEcqBctMLDjvQmeAa6MxZrK2xB78T2
ZnxvgRr0s+kQRvNC6ING9JPY3ggd8AS8mrG9L0I/elUqhDzW5sNqdCc2bsLW
YngKPZa1XDfDMPoENqY8ZsWuPdr7Peub0Yex+Znb/xh9HXvmwfW6K6j3+iqG
cnQDNuo9RsV6jhydhdvxvRzKyMl8rynVVqnbUg2qFk9yxvXksgoOpa0GC92n
fK/HRk2wmnoE/QI+3/P6fgzd7vWl/zrQk8Q8lbAzjKE/ythZlLNe9MvYvNLz
sQvdgs/+PMt5J/otr0fVSAO6Omdn1Zlr0GOsqc63mKfRXTDr+3V3H2TNtnI+
gm5T/QQ7w6Pobzy/ivE79G6/T9VEF/prvy/V77foSnJW4TlULldH660q+C9p
Mcv3BdiMLuAOElABlXAv6ytYWw4XWN/Cf81+Z7q7vWnbqzMNoAej9aJy0IJO
ez8pB1l0LmO9qB64DL2HmkmwfxkcQffD0jyryV70V2m7W+XoTfRQtF7bBxfR
tdFiWwizxNejHgjWkzegdxLjDuiBbfAc/y0JVuPd6LPQ7f0r20XkqNBzptz9
lLLYHoc0/jdG6w3dSXu0nupwH/I17fWoM86ge1nTpLkKy9D7WTMMh2EM5sIc
z7ly35iysw1BAj3DnrfR78Be9Dr++yFYzvrQH7JnxG3K9jg5Pg5H4Rh8AZ/D
ATgIIWW2jqhG0QuxuQCOk7vxpO3R3jke2ym+DQaLYU+0mBX7lzAKr/t81Ey9
B/2az1fN4LvR9Sk7i3zK90GPRTEq1j5/D5Sj29Bv+HyVzTp0v89zrVmhWPFZ
5jWoWvyXmM/rHeHbXdHuuMdzotxohmiWzLDmHzgDp5M2ozWr9Z++3YK+FT7x
flePfYq+FG22KQfn9Tapf+Av9vwNkzCRtBwqlyuj9VYlXOL/pmhaPXTR3wS9
DXoT9DboTdDbUO22O32+6314EP2+zwPNnO3oHV6vmvlV0WJQLBXyE61nKzxH
ytXl0WpP+f05aWu0dsJjz6TtrWiHiN7u/SUf5YrP31v18DR6H3c2BAMwCLPR
3h7FM4x+Xu9fsB7bij7n75PsvYvelbLaUw2rlq/w/tD9/pI0mwNes6rdUa81
vTl6e3RHuqvTfpd6M6P3rHq3JG29qpnckLaeUe1pJryiu/F5rPPMzVnNqHb0
5ujtUQ6UC82gH4kv6/NKPX2Kb/8DNJIfwQ==
                "]], 
               
               PolygonBox[{{3696, 3695, 3694, 1302, 3697}, {3564, 1003, 3561, 
                3587, 3588}, {2704, 70, 2591, 2608, 2609}, {3970, 1702, 3966, 
                4003, 4004}, {2534, 2533, 2595, 78, 2618}, {2609, 2608, 2702, 
                118, 2716}, {2623, 38, 2543, 2550, 2551}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6549168005655015, 0.5338685241603999, 0.4340744686771493], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxFlElIlVEUgO+zp+b//+9pEbSKMDIwgopMqWwkIxswTW2QolpUEJlJg02L
WkQtUiOnZis1Gw1twp2LwiAqmhetgkZEyJRMo/oO50SLw3feveedc/4z3OQN
2/KKY5xz5cgQ5LKHwH44HclB/5jgXFrEue8YLodlSCHG1fByonNevHMP4UDI
uUdIJ9Jh5w/ga3y8QRqRzKhzB8P4jqov8VkAnyLt+HwOE33nrmC7GA6aT/Ed
8LuZ80VwZ6BxSuEd8tzH+S/YiuxFH4CdxM4kh0/wOvGyY527Bhu5a8KmD8bx
exT5hGE1fsP4zIevuI8Pae6SYw8ylvwC4m3k/C02Rb5+VxUcTt4V2CTCBHzl
4HMMnIptekj97nb6XWVID37WYN8NL3lam17YHdF84vlvXEhzkFzClmcX97Eh
vXvJuedrv7J97ZP0axx+8iKacy58ZrV9AldztxKbEngf2Y/+G06I0VpLnV/4
mvcp+B2fBdhMw6aOs1rrx7lA7S/AM55+22Q4y3pRC9M8/dYTcIb1pQZmIHvQ
q+Fn/C9DT0X/ip6LPsHTGLWh/z0WZsMb1scWeD7QfM8GGltyqITf8JOPno4e
5W4TNiPgD85XcD6b8z70QvSZ6IX4aqO2+bCeWXkb51wDbOfuADZ/4GE7b4Qn
fe1Lva92cn4IzjY/K6N6JzbPYJ7NicxLmdVN6tdNDss5n4L/OdaLk/AddhnS
+0B7HGczkGs9nQy7+G8eZxOxX028D8QthbsiOqc7YIrt2syozkyGzc2gzZvM
XZGnfpqlbsRbi/9e+MR0OdvJ/0dS8+Oys/YmXIRZSewr+5UN64h3hLhtcJ2n
33UV5nva3wa4ytP+NsHbZt8a0VykPrKTR/GVPtS5Y3Cjp7N3E272tF+3ZFYt
7mLoI/Xo45N0n2QHJW/ZUZlX6X2H7a/s8T3bBXlvKixWeZLa1/77D7/DnG+B
X+hrMf4T0N/be/IxUWNJHNmbZttrmb+pFlN2vspmVWY2xfJMhcWezmEbnGcz
dhoOsXdnAay0mlfAGntvq+BSy20rTLZ3ZjR8bTMjs7PE17lxMCvQ7xoW6Lsm
71ClMEm/ayiMsfdW3t0REa3XpIi+EfJW3IUlViup2XpP9+s6bLFd/ulpPIk7
39d3TWr0ONCYUg+Zwe02qyVRrbnUSmq2MNDaLw3UNsPs+xM0h7n4v2a1kr38
C6hf3qE=
                "]], 
               PolygonBox[CompressedData["
1:eJwtlVtsVFUUhveUYdo5Z2Y6NSQ+GYOxJtUqGrFEBTFgb0BFaylFbVWgrRGo
iK2OeCX64IuhxpaCUQuJpa0KGuotvvGgVpTaeEES30wUNAUjlwgtgt+ftR6+
zH/2nL32Xtczd+3jjV1FIYQBSMKmPL8lIVTBZvRh+A6+hnF4NwrhHt5bCfeh
X8vbu9rTif6AtSb9Bw+jz8EwegRG0bvgOfTzsAR9BobQe2EIvRfuDXZGE3pP
JoSZRAiVXPJbdB1rtTCTDuGCI72UtbtgP6wKdodH0JmyEGJIQTEcjUPowN4t
8CP6Inv/S5tN2b4mMt90/nHWe3juhi3wJDwLW6EAz8AiaObd1fAv76/geXlk
NmX7RfQLvkd7jxOjY3m7k+7Wy9rT7C3AfPQ2eMn3aO+4x34KTsAy1urhHRiE
W91f3eEs51V5/LV2Om13LLgP8qVR8ZWPyqP7JN82wia4ObLcycY/aXtH715C
B34XR+ZrC5xjrcLrQTn7i+d1PK+FNngI3iZn08R6HHoy5sOUx0CxqPR8N8IU
+zfw/Bish3ZYSoyWwDpYD83y132QL3dDA+xWrcC8yGzJh5Np82mj25Ttbu7w
TcJqqqB6wmatn6Gz2v1s+SBfWuFB+QwtUM47V/se7X0ztlpKQn9sPrf5nlbf
s9rvrLsHj6VqRLVyLTYq3KZst+RCGKMRf4f70e2l3Ac6oBNG3D/FbA26JLbe
+UUxRPdksTWLs6CA7sua1tpT6Nexeflsagj60BXkYHdxCF2QRKfzprUWo8fY
8yp7v4DP0Af8WTZ3oI9xp4W+/0/0ImxuS5oPi9GVrF0H18MNUAo5X9N/ZeRg
IGE9mUHPgU70TqhDn43MP82Q4chsyFYN1EJ9xmpLNqrR87jTQWbFdrgM3ZAx
W8q5cl+Wtf/0zhx0FhsZv5PudhV3Xpk0H8rRG3we/oB/1egaYvwzdzkCs2ND
WjNsRr2ft3e1p0GzkzNbi2x+HUJv9/grv0+gl8U2G+VfhB7z/lI/P4ou5p0r
knanNHo574z6PM2gSzxfysFvikdsthQz1cZ5zSmfL/vQ/V4PyuFO9ETWcqvn
j9H1fn/lvxz9kc83zZMO9AXNMfRWOIC+6PNca5+onr2eZKMSfSmyWa93PteM
5k4/BYvhLPR0ZLZ0xw/Rf+PjyZzlRLmZQB+G72ESbvP6Ujzm5uybolhohr6F
7outF5STNeib8OmU51u1sTlnsVd9NqPfz1kvKCe96Bu9fk7DfPQgNlLUzgI4
Ets3SLlsgwl0k/er7rQQ/Z7PT/XoA5H1rHr3ZXgF9hOTfTACo/BGZLmR/wsi
+0alfCZoNuzx2aaZr9l/yM/XTB1E93t+FcPb/Ruob+F5Zsw07PD4Kj93oAc8
f8rHnf4N0bekGmoiu9OIf/P17Z/E5+KExUCx+BWqEtajOc4vzlhstKb/ThCD
Kc+hctmsHklYzleg64lBnc80zbYtng/Fvwd9pfefaj6FPpOxWKtn1bu13vuy
IVuTXhs6U2eXen+r506xt9vnoWqgMWs9oHirh4piqxHVinzchV6Vtdxrj2bp
V5wReX+No//weae1g+je2Ga/fJSvn0b2bVQPd6G/9P1HU+QRPVRqWmvD6P8B
XI8tzQ==
                "]], 
               
               PolygonBox[{{2630, 2629, 2715, 125, 2731}, {3563, 3562, 3564, 
                1053, 3566}, {4238, 2102, 4233, 4269, 4270}, {3538, 954, 3536,
                 3562, 3563}, {2722, 79, 2618, 2637, 2638}, {3759, 1353, 3756,
                 3789, 3790}, {2554, 2553, 2625, 88, 2650}, {3972, 3971, 3970,
                 1752, 3974}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7716930171139542, 0.5749080890815813, 0.3654264691726276], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwtlWtoVFcQgI/rI5t77+5mNWjxh2AxFbRREQUraKEVa6KWGF9JbMzLYFRs
QV1XidZnC/4RFYtmpahFRaNJ8EUr4vvtakgiik8ExaJYXygUJUa/YebH8J17
zsw5c+bMzO1b+UvhzyHn3F6kMzLZc24V3AVrkSrGK2BRxLmvUEjCR75zIzs5
5wfObcpyribsXBNcwvdV5hfBXeh4jNvg7JhziW7OVcPv485VZjo3Dn4Xde5I
F+eKYQlnFHPWB9YSjCsZL4XZ2B9gXAAzsOngrAC+xeZhV+fi7NnOOR+RNPIt
86vZcxSM4kcNc/ewvcce95F6xOP7DsyHzZzxO+Msxm/RLycY/we61zUkhewI
dP/dsBi9MOPN8Dm2s7B9Bn3OK+DcflGNgdjXIX+i58M9MMHav+gsgK+QBvx/
Aa9gv5Z9fF9t282+mvly5ufBiRbDGjgIiTP+Wsb4WxZSv+dgMxcZgVzCZia2
F2EO8RpCXAfE9W3kjImwkLVSdKbBQ57GuR0utrc4Bs+ZzlnRwddafG6F5Xz/
xvwBeN5yphv+X2C8mnGGr/fIDamPzWbbBLf76mMLnGF3r4chX9+ngfE+y6tG
+CPfK5n/Cy60GCZhPt8rmN8JxyK/Mt7uaSwkJhuRJeRrDnmbgHFkA3PvAl0T
Hfn+B5tGbD/B5+j8h34b7BFRvV6wJ741oDMJTrE77oHJQPNkGWwnxiXMj/P0
veXdb8ISy/MiWGf5I3kkuS5xHoP+Mc44zrmtsIP5GcxPYD5A7y7j8bDN8qHF
0z2kBjOR6/YWEXQqLJ8bPY2jxPM93G/xkThJPKSW34X0jeR9JL+Tnvp/3NM8
k3ybC3OtZvNgka91VAXno1fBeCHsYTk5GL7O0jqNoH/D8vwN3MrdpnPuH/CJ
9ZbHsAX9a+i/hKfNf6nLVovJTdhmtSk1etf6j/ShFGvr0Dlq7zzd7rYc+5/Y
5xRc5mk8T0heI2uk38Fh2JxlzyEw23JDciSfM7axfwEMc8Zt9PN8ra9tVmN1
1hukv9Rbb9kvbx/oWjbsHqhuL9jk6foHua/VgtREjvWNL+Fl8y3T17yX/F8P
+1tPGw0P8p1ivhmesbrogn5vpInxVF/9Ej/F36jNy/rwiL75FDhUejHvlQ9f
Ws5L7j+03vsAxmLaYyMx7ZeSz5KL0tdlLHMnrQY7+ZqLsibxSln/FD/y7Kwf
Yrrmme3f9naHIzKp71UAM7lnH+6bAUut3qXu04H2k52wDL0yyUP4OqL64ai+
50ar64TlxFT4ha81Phke9bSWO+SO1hsHxvUtUxa3tP1T5A4V9v/YAousr5bC
QssNyZEqq4utvtZTrvWXW9brpOcl7R9aC5vtLnKntN3lKpyAH5vxpxpetre+
Dm9brd3ydD/Jq29MpBbC9p+TO2Sw51OrqRdZmo9pu9tn0o8Nfw==
                "]], 
               PolygonBox[CompressedData["
1:eJwtln1o1lUUx++WuT2/+7zs0ZH9FRStQJ2JFFRQQQVtc5PltDbX2ppaWjhd
YRqzTDOlv9KY+RKVCy3zbdk0e7EiqznN2VooZoZBlBrNjIQolvX5cs4fX/Z5
7sv5nXvuPefs6tb5U9sKQwgvoxGovCSE8Wgyqkb/JCFsZ3wHehfeh95DbWg+
+hQ9wFwjWgLvR8/A3SgbQ/iI3zPgBvQkfAA1BdvzNPxxYnu1ZhH8H9rl+z+E
L6Gdwcbeh8fh01j3Ub62owXoRbQabWPNCtY+j1rgX3MhnEMp5hL0FGOtzM1E
HfDeTAgvXIaf6AO4x3/fj9bDX2dsTmP74MPsaWbvg+ggfIwzxgJso83wRNYc
IKCrUSk8xDePFIewEfXB6zJmW/Y2wkdLbE5rBuD6bAh7uIjl6A54HTa/51sn
UXM0ifXNV+H16FSwNQ/BWznrW6gXHUSD0XxLoS64ExX770b4TdZs8T3aWxct
1or5FfBczjgHvYN2ox2JxXalvgc/hlrEaJ7msLECrUSrcvZNfetWdBLu4MzX
eXwVi1W+Vj7Il25iMMfjtRte6/EqQ4vhAWzcjK1b0Ca4weP1C2qCx7BmTaHd
wSR4OLG3q/PshW/PWmy15064KM33sDUXncLej9FsP4pGMdfOngX+5vX2Z/r9
68yz4UP43IfOoLM5ywnlRg/ag67lG7V+n9fDMdr7fA71MZ9hz+nL8Q/9znyF
54ty4lKK+Tx/icVEOAcPcabfiMVV2LsAF2eN9Y0I/5E1W7L5J/x41mKj887Q
PGdqJjbl6Cg8C5ud2G5Fd8GVeWONVcN3J5a78mmYsW+w0eH+fgtvwca/xGoC
9vrhlxhbgzrRWtSUWK4oZs3wa6wZZv1htBh+IrG3o5xcCHelzTet0dpxeTu7
fCqHL6Ytt3QGneUv1FJodz6aeFS4/9pTljef5JvWDMK3+f0rXmVZu3Pdvd7U
ceUDPiz3+2mAa72+qWZNhUuxsaHA3kwWvoH7y48kdmgSXMvYK8wdQYvgIb8P
xWwATvt9Kt/P8r5r0hYL2ayAf/D6pJicgHOe/9tQIXze64lsXIDfYM2zzC1D
dfDmxFhnmAZvTewsenONcFXOfF2IauB7/LfOMCFnOaPcuYhugmfnbK3WVMIx
bbmsHFGu1GVsrfbcCI9JW+4oBlVwF99cGszHKfB9Xv/1JurhJWmLld7QprTV
rF7PKeVWtfcH3UGAR0SzJZufJJZzZ7zGq9YXRJtTD9rvOdjjNUy17N5otUA1
oRQuihYrxewL3Xe0OfW8UfAxr//KOeVeKlo8tedL1p9Ds7yf/JxYz1TvrEFT
0E+JzelOT8PH/b2rfgzCvZ4fisnncL/3A9XAt+Eiz299/7zqn9db5dNX8DVe
X7QmlbWarnp7Qu8VbsPGPO+R7e5TjY9pbmS0syumn2Hvde/fimFVYj1TvTOi
NPo7sbeo+HQn1qO7Pd7b4bzXM72n0fB4zw+N5XJWs/V21IM2wGM9v/Wei+Bp
/p7UI+rh6Rmr/RrTW1vq8VTMlyVWY1RrdqJdaLL3R+WMcqckWq9Sz+pXvY3G
yodD/J4ezX/1vCuj9Tj1uofRI8oXxr7z/puOFoPo/4PofxG9EcVCPbgeHvT6
rDej/x0qo92FbCTw/ypRQUc=
                "]], 
               
               PolygonBox[{{3758, 3757, 3759, 1403, 3762}, {2663, 2662, 2734, 
                134, 2752}, {4240, 4239, 4238, 2152, 4242}, {3703, 1254, 3701,
                 3729, 3730}, {3946, 1653, 3943, 3972, 3973}, {2745, 89, 2650,
                 2672, 2673}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8884692336624063, 0.6159476540027626, 0.2967784696681062], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJw1lVlslUUUx+eWTe983723xVKINQhCcRdMfDBCMcaEhBiggEJRtvuiYqHh
xYbYPhkDoqhpY4rQNqCyuEAsthICrkVZQq0WqoILS0JKjIpKwMQH8Hdy/j5M
fvPNnDlz5mzfuGL93FUlIYR3GUMYt8YQuuFieDkJocjmv/BiGsIfCFyCy1lr
KfG973Ih7B4Wwt9wFnIdmRDmw/LUZcbANXz3sd4E87DA+IU7rnDmDGfL8iF8
kg2hk7Wh3PsBPBf8uy76vANe0l1/wXvR24P+CjjI2Q3IVCLTXOLrBxkHsq4r
o/WDsvtz1vewPpz133nT2KH+Ntu/zLjC+AZbp8CBxNd7tLeYu7uRr4Wr0bMe
Pfvg63yPxrZmGHOu8zrYwN7LyHwMy7jvZ+Zz4CG+X2N+FLbyhoXc/xy8p8T9
O9nsZe9DZEYg/zTzdcy74AXGK8zHst7OSPDnUvgmtgbO7YA3R3/jAliP/IvM
98JG+epTmMt4PMymnPxuPmvF7pm8pRPeJz+bv4/z3cj6t3AF8meRb4NPMc4w
3xw9rhbf0/Bx+WoJrGZtOiNlfJ1xOy0n6jKeMysZy6Pvb5Sf8sqTHOdr0FMF
e1m7Jh0PS7/d0yz/N8Bn2GuXbvOjxdHOPMTe88hX5/x8n+R6E/f7NtHOXM34
XSbXJv+an1vhtIy/x74bEpebk3jcijq/JXEdjeI16bN3rmJMZRSV25bjTfi3
lhx4I3X5ybL5M+KxFpknYQ/jVeZfZT1HLR8ncaZJ+fAFXJj6+nw4oJwZif5T
jAfQtxWejh6LQXhC+kuZvxU9drvgT8rtCuajEre5MnGbLHbml1PKq/LofuxT
LNvkN1s7p/y/Mfr7zF7L9dHKmUdhaQG7RoRwNzxCL4jMD8EJ7HUh8wTcyffJ
4SFsh/2Kk8WtUrbNgHdJzx3wBeR2IL8Cjo/ut3HywUr5f1B+KCT+Znv7STgz
8TdUwNuVMw/C+1P3+2PwLO96CZ1j7B3Rcy4mXhMWU6ulVDlvdVYVvd4nWs9J
ve8MWN0r1603jMx7PyyFP6jfWt/dKrv74RHu/ch0M9/H3npkuuHb0d80EN0+
s3MRPIauafjkN3hb9LNLYC969lqtMp+Cv44jMxv+KvkLec/vatXsLMk8Am+J
3pcWwfPRZfKJ32+xsPooS9wn5ps96ie7c57flgftZrti+g5cq3hZ3EZF7x/z
zCep9+5/0Pdl1vPhetY3qWda7/xRvbRK/dz8dmCI11BR9V8n/evyrq9FfXa2
3lUDb1D/qoleb1YXnVnvI5YzFoObovvtTrg/9XtOwD8VU4vt4az/QyMyF7mv
Hv25gp+xs8vg+8rzo3nPNauV//tWh3qXxbZW9ZIUXE8WTlI/nAC71JP74bPK
yf3wvej98/voNWs+sLotU46VwzXqmS3wPy/YE2s=
                "]], 
               PolygonBox[CompressedData["
1:eJwtlVtsV0UQh7cttHr2/E//FaGARkTxigWR+GAUNMbEWIGAYqxEjdRIwEsb
fLAhtk8+gPVWaQxGgSgqCBqktYUQvERBEQXphUJLhEIrCohcbMDEB+P3c+bh
S35ndnZ2dnZ2z/jq2gdqCkMIr8IwqCwL4T6YATPhkSyEdgZegrvReWylMBFu
go/SECYT4N+CEN5D35WZr+bck5mPfCtgEgzhM7/Q5nShp7v/HLgOfQ42Dg+h
HrrRf+OzvNDmaG45rGStZ+ASdFlpCEeG25wh/GfxPRMWwiI4BdNKQqiFM+jO
zGJXQiv6R2yxxHx2oyflQ3gf3Q1T0Oux9RWbz6fosTGEo9RpE2ToLG+xNacM
vTGz2KPhrcz2XOE1VW0TbON8vxn6ZmJOhltgKmT45LzGqvWSHHUp4hygAX2G
NU7DWTgHs6nBngKrSWVqNo0phmJdm9laqvGN6LXkPA3fFFahB+BZ9O1wMFoO
yqUS7odlsK7YatDotkqv8f+19l55ChZAOzk2kmsVvIPuJJcOz1m5b0lCeJna
NcJidI41N6O3wB6+H/fvdrge/TC0olvgCvQT0XzlcwN6ZLR4y6CH+V8m1suv
QT16AeP96Dz7+wDd4uejHmhDv40tx1gGT6JXRKuNbPPR8+DzYDlciZ4Dh4PF
HIV+LFqubTABPSJaLkthH+tHH1e+u/i+OJqvbD/w3Q1d0AGdUOLryec7vot9
/7Lt4PswHIJe6IMDsN9jKNb38Aa+TbDTfXrdR76P+vqKdzV6DLzi5/EL4+XR
tGp6kO9rosVSzKvQx/0+6T7sQr+Ys7NWj9bpvOGLIuuBregZebtLuh8V6J1+
39RPH6Mv8vvwJ/5n8Z/o9093KkUPYTtdZD66O2v9Pqonl6J7cjZXa2rteXCh
0PLR3anz+3MeWxV6s/en/LehL4vWL6rBUfb7oPfLERiNng2Hgp35peiHoo3p
DdBbsJccf/YeV69fHq33FHMgsZ5V7w5ANTrx90I1PEn++7xe2mMvehw+r3v/
/s788dFqL9tx7xH1yk+wG1bl7G3QnrS337Adg0H4FVZHW1v5Po1e6e+X9rAQ
fQBKvf83KNfEelc9vAj9ru9XNdFd2pZYrbS/OnRbYr7ql9rEYijWndCvudj6
vWfVuz3Y7iiwN0hvUT413+lwjO++aHdVOX0S7U4qns6gCl2f2r9Gb14dehP1
/AxaoBXGYnuOsdUwCz03Z2e/HW5FD/r7VwOjGJ/g76P6K6JLU8tFPvKNqf1r
9EbqrWz1tXTmOvuuaG+n9vQh+i//f+mfdAH9bWJnpzPcjj4Ff8AJOAlbE7tv
qukL6K8TO3vNaXCfE36mOttm1lzue9beC6L9i9RjX/mZD3rNVfvmzP5FevNW
oO9Nbe+qkWrVA1OoTTWcRz9PzMXQBG9Cec5qp3/wCPQw72e9Sd8Qfwy2ZsZ2
wNScIa07eFvOYjR5zsp9bmpnsxeWoBtS0wH/Neh/UstFMUcyv5Y5NZ6TcluX
mq9y7kB3+f9cNd+P/g84uTrm
                "]], 
               
               PolygonBox[{{4177, 2003, 4174, 4206, 4207}, {3945, 3944, 3946, 
                1703, 3948}, {2764, 2763, 2762, 144, 2779}, {2767, 2766, 2832,
                 183, 2845}, {3861, 1504, 3859, 3887, 3888}, {2833, 135, 2752,
                 2766, 2767}, {3700, 3699, 3703, 1304, 3705}, {3678, 1205, 
                3677, 3699, 3700}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9168123722381564, 0.662030930595391, 0.3421183539382847], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNlllslUUUgOe2xeWf//97L120uEDdUhALpcWCIqIQfCghoZhASiWKuFSE
20Uaq/JA4oOKPmALxFRFC4Q1QREbFIv6oBjF1NYuUBWtLAWiKaJV1Af9Ts4x
8eHkO//cmTNnm5lbuCxduSrDOfcZkomURs59wkABvNM7t5GxmfBmZD36BLgg
27nGS5xbAecjc9ArYHPSufLLmAfvYN5HzF8Fp2BvOVKKdAbOHWA8xXgy5dw/
zI/hPtbUoL8F6xPONSB3Ifmhc2l4gvnXeF0rNjba/Hfgu0grejf8BfkSfRjW
JdTWLKTL5nTCXptzAV6LzRPYXAR7sPseeg76CPs+iL+9RvFf4ujnuwyehyNJ
9T+F/xkZOp6JJCxWGcsjjy3wL+Yfw34z9o8HGpvEeDdSROLHI39kqK/1Fvt8
1myGY+BXCbXXlVCRfbphW6j7rYFjQ11bYetk3htIk62/VxhqHNuNpf/5S/1G
U8fJMJd4Si53blJKfy+zWBJGsTXV6j4vW79lL9lzNjIHGY0UhhrjvFDrJ3XM
Rj+FXoueRH8MPQf9dXiUXHWQh55I/Zb43kQWM68NNoY6LmNpo4zXmohe97/f
ai2/4lPKfOy2nIyxHN0Tav3z0E/Cn7zOz2F8nNexKrjM+kT6pQofX0SWIF3W
D9IXUj+p40X4ROzcUJZzS+GaSGvcBK9j/cfYuRFORT5AfwTegJxGvw++wpqK
UfQ27JP16N2wg/WHsNMHe+mh98Vv5m8NtR92hVo/qWMeXB+pj62wGDnMnHK4
KFIfq2EhPg4zZxyc4rU/S+D1yCn0aphi74X8XhTr/lIjWXOU77349huszFJb
YmfE7IaMb0IKmNMca/ySh6pI7ckcWXc7e2xgr9sst0vsPAwR44eMj2X891DP
4N+h2bA5T4da07UwiHX/X7Efmy5jfyKD+JBLTs5i75zTe0RsrLNaDrJXB2NX
sdcA+kH0K9CLkZfRbxEfLN4L8NtAa1cgd5LVqAe2852PP4NwstcaLYdnAr0P
C9GbrDekR+Sulb751GojNZoRqU+SZ8n3fuuHt+GP2DmEnauxczBS/9sjrbHk
bXOktqS+Yqvd5rwGp3mNscar/XW2xwyveV4Jp3u1vwKWec3DQ/Bnr+c6L9Qz
ITFKf/RZTw5EGpPU+gw8HWhNz8Emr3nfAZ/ymv+dcLzkBf1++GSs656J9e6Q
veReSHPHjuKOXZDUM5pv5/TZLO0h6Z9Gs7MdPmB2xF69rRUbRwJ9v7pgqZ3B
OjhMT8y8lHMPV/M9xPg2iTXWPWbBb2yt2CiyOUthbkJ9knuhwO46ufP2YGuA
M7gT7kVC7H8Bp9vbKm/s4/aG1sDvvd77u+BC87khqX1x0XrjJbO5G06w83YT
TPO9g/Hn4T7z6TtYaXfmYnu/NtgbJmdAzsKVcK70K3aqY70fZ9u9LXWUHMpv
dZarWviC7fUcbLD7qg1u8br+YfgDOWph/CT8OtCz0x9o3BKHvIWr7X9CS1LX
yNpWuWutx6TX0tYn0i8ttlZimGRvU0lK8yV56/d6N0k/TISPeo3jVa/vVaa9
m/u91uu4V3uHzeYBuxPk7d9j51fOcbnXWG6V/rc+OQ+LzYeJsNPG5ffdXt/t
Y/CI1f3zbPVf9pE6/AtaZj2X
                "]], 
               PolygonBox[CompressedData["
1:eJwtlm1MllUYxw+gSc+5n/vmAR+KZSnVmhZhoGaWOU1WWxgVNd3UWpllpInB
ZKPiQ1sfevMDgTRnZVFNTZum1ijD6kNr62UKgSkri8IgYyMt7O1D/f5d58N/
+z33Oec617nOdV3nKV1VX7s+1zm3CU1ATyXO7TjHuSa0Dp6fdu5TJvyJlsF7
vXNFOc5VoSF4B/qZdSOoCd6APoY/QtfDb6Bh+CfUCL+ICnPMxkPwy8HeZLQO
3u7NltZshL9GCxlbhHbBx73xDegt+ATKhvX74OX4OD3PuT/wd2na5mhuBr0G
N6CT2C7m9254vTdfP0Tz4b7YuZaJzu1Bx+CHvY0dQvPg37A5jUCNsccYfDRy
bhZ7rUZn4S6+PcfYIdQNb0HL88ynFvhN5uQxdzbqgd9mj2r2KkEvwHejYey/
i1bAZ2LzRT4dhR/FxgxsrUCt8Gp8eh/f3kMzvZ1ZZ/8EzYM7vcVeZ9bZF2Hj
yWD/RnhlbDyC7oXvZ85BZzavgneiU87uuBn+G5/bsX0fGoc/I0eiSc4NkC+7
E4uJYtONjsHFaHOu5VA5/GtkZ1fMFLvWAufm5js3ETXAA2mLnWycTpvEpfg3
Dl+ND+340oYq4f0hfopPF7zW2111o2vgfyK7G/kgX15Cz+bZnehuesN9y8YB
uC9tvmvOQXirt9xRzj4I13mz/QGaA0ex+XYHysA7E4uFaugZeFva7ko5odx4
PLZY67474DXebCnms+G22MaUA83wKDYWTLIYf5HYmpLg7xadnW9V7FWIZsG/
h3wZRH8pn0L9qaZmwAnxqOcsG9BJft8V8kNzpsOD3mpDNXUAPsOdfMnd/IvG
4bWJ9Qadrx4uiMzWI2jYm8Sq2e9Uj2go5N8lcGmoN/WIi+FfQn02ohJs7WWP
unzLiTZ4ZahX+XgpfCV6Hm5FV3irEeWvcroK7o8sNyvREfie0E+Uv2XwnXw7
wl7bUA38echfxfgwfFNkY6+gKXALysm1Nc1wdca5m9EtqCZI/ABagyoSuwvd
yRy4PeS3ztQB96Kt+RbTfrixwHJfczbCZbJxrsW7AN4f4qE178Alaatt1WA2
bT1Tve9HzrcKviiy+Hei2sjOrLN3oQu9nUlnUw4Uw3XhPuVvDXwZMaydYD0u
houYszj0W91VNrLer2+j/C6LLfcVf/WWJSEfZfN2+Nvgn3q83o6hlNXvZt0p
PBbyS+frgZsi8/1VtBS+INSbavoH5s9kTjmqQJVoSqh39ejhlH3T2K3oNlSI
MmGN1h4O8VdM98FLIsu9BjQVrvDWW5Rj5XqrEqsl1dRZ9cu0vYXqwerFU8P7
oJweYf/qyGzpDnQXu0I/UI7tgZ/gW2+OvQGvwydStp9i8j28MPRn3cHlqvXQ
HxSDQcbPD/4ox5Rr2ZBv/39LLGaKnfZ4DD6Vslh3oFF4e2S1oZzuhK/1Nq79
58ILvM3Vt+u8vSl6W/QG1KsXZiw3laOT4aIwrveiH/sJMY1DzBX788J7ojN8
w3gc1uvOTzPek7JaVry/gp8O/z8Us01wxlvuao8+xrPhvZPNAX4v85b76jHT
9H8hZbYU0+Pwfwf3MSc=
                "]], 
               
               PolygonBox[{{4401, 2353, 4398, 4426, 4427}, {2858, 145, 2779, 
                2854, 2855}, {4176, 4175, 4177, 2053, 4179}, {2855, 2854, 
                2853, 193, 2867}, {4080, 1854, 4079, 4110, 4111}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9354667199296024, 0.708666799824006, 0.39994683178176743`], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwtlntMl2UUx58f19rzvu8PwwxBqewPSwlFuVXa5hpqQhmQtTZYKzMqFzov
gEqYpZY5cm1JsLXVBDK6eAkZdDFbV7Q5a6E0srZaa5llYNJE/qjP8Zw/zr6/
93nOc55z+Z7z/K5/eFVFbYJz7jSSiGSEzrWxMAWsjDtXn+JcLdjM5otIFXIo
zbknrnCuF9ye5Nw2pBfpsfVu8Cg2xpFjyP3YGgPngQsj1V8A7vDOnefOHrAr
cC4VnX1gX6j3vQYuiTlXikxG3kcvG/wYXIWc5ews8DbkK37fDq7B1y583gnm
8v0563le/RQf+5BL5pv4eAt7w+g8Cd5rsYhum8UisRawdw6dx8EC7KZjPy+u
MYmtfqSYvb/RWSm+Wd5WgvmcH0h1rgLMZ+8vdGq85lHyWY3kozcR/WJwPXop
3LsW3IBeFvF2WaxT+f0nWEGO2vmdDc6wmsxEXgr1eyO4zeI6CHai+wayDrmR
Mw1gObjVfN4P3sT3BtYrA41L7Elsz1lut4Nt1Cwz2bkW8C4wCykzkd+yN53z
9dhZCtZw/jGkEHnVzvSAz2NrBJvd4EfIFPR/B5PRK0JSRD/U3LweasxSd8nd
v9hdwf4pMMlsy7lKy/M9aRqnxLseeTRB/SiQGoXKx/mh5k5yWApei3TwuyzQ
XFZbPsXGXrMjuchJVN7M4Y493DULfMV41Ioc9lqjM+AF5E5+Z2Bz1CuPswLl
rsTyB7gT6SemF7z62Wq+TktSLt6AlE9wbveV5BF8KFIOV0VaZ/FRaiX5lpou
RO5Gbzn6pWCz9cIOcFmgsVQFyl/h2y/UYyDQnA8F2hti/wxSF1O7JTG1JTbz
wOuMJ8KXfotdcrDA+joHnGv6S8EPjcO/eeXlZb6GWkM5J3HnWU9lxDUOsb8I
mRBpLgJwnnGmFpxvc2M1uBk/BtHdanxrM85JbnKMw7nc1wJOAs9zx2pql0bt
GpBiem03mBBpvuNgi62/nKbn+s3XZdab68BDXn382Wvdjtnd57zOq4tebYnN
dPA9r/X5CTzgNa8/ghkx5YbMt1349gN5eBe8Kk39jKfpntjMRCYa92aD5eiV
oF9m+SuxumbaPJG5ctR8Ex+viRknkdle+2qF1/guWS038/0P633gIPn6hBye
Bmfy/RnrN4OjfA+zPhLq/JXZ9AhYhHzJ71u99ozwTXg0OdCePMv6GLk4AO8u
gIdtzsu8HzGbQ6HOCJkVH1j9JYcj7DUl67rMm3e8xrMG7It0rRsciOn8OCl9
6zV3e73anmZ2vovpzBiwnmkwvjXae7EJPJKouhJ/gc0ZmTdz2PsCnUJwU6C2
7gP3W+3ejusbJm/ZicDylKj2jls+Ja+LjOeLrSclVxsDvafIZtq3gd79VqDx
iM1T4BZ7j/YZj+otjmct/8945Y3wZ1h6ympXLzW32lwdaD2kLumB+iHckJw2
RTrPWyPtGemB8UBR+kB6V/ZlTsjMb7KcPOV1v9X6+lfzT/h+HD9C/Pkmrr1Z
bf3Zan0jvXvQdES3xd6aRjA30jf5DvCE6XwdV44KV3tt1i4xbh+xusn7Wmjz
QHJ60XpzKrEMGQ9HwfFIZ+GkuL4DkuNO41GqcanD3pstge4N2huTbO+VcOnB
SGfo8kjrVmO8WWt93gkuNh3RHQvUt/8C5bHkfo/Xd+nynTF95yTfw4G+Ldn2
H6DO6zx4E3wg1HepGpzO96fszwC/j7RnBqwvxGa78VV4WxdorIMWr7zDcof0
c7NxVnJ40nLSYXNW9NvBuXaX3NkYaj2fDjVPkhe54393e1V9
                "]], 
               PolygonBox[CompressedData["
1:eJwtlW1Ml2UUh+8/INae5/nzIFgEqVlrqRmSSVBpfWiaJaVArlr6ocysXGDJ
W0i+VJbktLWli+VW8yWzLDMrjXK1Xl2ttRKw0ctWay1LTVTcGB/q+u2cD7/t
es5zv5z73Oece/y9jXUNOSGETpSHKtIQto4MoQdNg9+KQjiB/ThaDV+YhNDF
hK9RNfwIttP8+xRdBW9F52dCKEHL4bvjEF6Fj6BVcBNr5p/DXNQG78aWz1pV
qCe2PbTXWMZ/ADdFtrb2WAX3ZkNYOSKEt1E/vBPbBYwtRS3wL2gmPAu9A0/y
+Z+hy+HH0Rfw56gDfg+dggfQOnhFZP80vg2ezB5rCcztaAL8WmR7laHH4F8j
2+sm9C58hDPcz1kq0fdwzJyLmXsyN4RB4lXE9yW+3kT4zYIQfsoPISHee+Fu
X38OOgHviCyWOmMzPLcwhEXnhrAJ1cJLsf2LryfRNZH5qLW1ZyFcwppFrP87
8SqGr/TzKQZT4QE0W2dBF+HvMNqM74vRWfiKyGKhOeXwEr8f5UQlvBgd8/yY
Bt+H/glmq4Af9PyRj9XwenzYlW9nfg4+r8B947sUXlJoZ9MZb4OriNmhHPOp
HP6mwGKl+XvgdnzcmbEcU64t8/tUvig3r0Vfwl+h6+D9nq8a0wnvjSx28u8p
eF9kuSDbWniPx1dnWKOxscVGd6y7nujxfhqVw2/4feqMG+AWxhzGtx50J/wf
eiDHaqiE8/THlvuyDcFPoD7GjuR7Fzwmtly4BQ2y/6bUauch1AWPJkbFaAqq
QGeyVhuqkR/hUdgKfYzGzkisdofRXfByr0fVez08nv12sFeTcg4+i20wtTW0
1uux5XYe2g6/whoLye2NqBvel5pv8nEz/DK2DfxbgF6C/46stsegg3C7ekrG
cqYRLopt72Z0jO/qAsuNmWieciey2tMczV2Y2Fkms34H3Ic+zrU9Dya2p/ae
hJ6HO4hJKbE5yn21wTdm7e4OoNniyHJFOfOk8gFbzQib0wU3eH4of2bAqxPb
WzHYAs9LLZbqoVPhBczZn2c9ZBZ8GNsPqBf1peaDfNGYe+BFWfNFtnb4Bb9v
3VGz1kvsLEOc+Q74NLZTfke6qynev5ehUanlnHJvG6pTfnk9qP5XRuZDr6+h
tfoT61WKoWI5Ora7aEHHGb+UO2j1+6iF58S29nY0Dp6emG+qWdXu+95f9Cbs
hq/3+B5CN6i3MefmjI1RL1IOKZc+Qd/CZbHlvsac4f+g57d6xjD8W2S9V/O1
16Wx+aqeMB9OU4uFYlIMt3o/05ugt+Vqfw8Uk6rIYq7Yl6mG4Dq/T8V/PlwT
21lVI6oVxUT76c35A/4uttrVm6a37WHvL8qZ6fBfnu/K4Q/hZyOLhWLyDHw0
strQmI/Uy4jBQK69GTn4sya22lNPWRFbTegudCf1cI1/q+dXwttie3vVU9Rb
fk4stlpTa8/F1ur3q9gVez9WjIfYrxvd6v1Eb++LWYuNbFvgP70e9Wbp7erx
91k1cwDu9H4v/xrhBs8f2R6Fa9mzLWM+XAbXx/YWyTYB/h8jXyzw
                "]], 
               
               PolygonBox[{{4279, 2154, 4277, 4306, 4307}, {4078, 4077, 4080, 
                1904, 4082}, {4400, 4399, 4401, 2403, 4403}, {4048, 1805, 
                4047, 4077, 4078}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9541210676210485, 0.7553026690526212, 0.45777530962525026`], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
yKlWe+Z1d7JGG/gPHinn/bHnX7K2nxc=
                "]], 
               PolygonBox[CompressedData["
1:eJwtllls1UUUh+d2gZKZu9TKEgsKlM0NCGBTXIKJcXlQsK21QS00woMGA27R
QktbLUoVFTFRQSsxkhgWqSlKagGXgltiiiZFqVCeTIxioqZ0hSp+P888/JLv
znLmzJlzzv9Oe3Bd2dos59zLKAcVZJx7bKxzu9AEuCrp3LXZzo2yaDn8JGNj
85z7kfkK+KB3rijh3Az0AnyGNcdY3y/BrcG5xezNQ3vgTMq5mRxUiYrg17Gx
OM9s1sAr8p3bNs6519BK+J6MnaX5SngoabZlQ7a+4Mxh/B5Cn8PzM+a77nAp
fCVn7sO3DWgq/AD6Gd6NKuCyaF97FsGrsXkI23+gWvhFbI5g+zzaAi9KOzd+
jHO/5Dp3GfwEWs/vvegleBM2x3HXHuw3wE34Ow9/q9FOuJ6x/cx9gKrhN+P9
16C34Uu4s+Pux/k9yO+F8T7ysRhego0u7P+L7oc7Mra3BZ2At+PzZHw7i//1
8FPxvXTGeng/PvZGf7fCxdh4B1st6HK4GZ9O41vg9z74WW+xVYyb4B/YswRf
UqgLvo81jbormgtXonp4I7pac6g1YXdeBS8PtlZrrglmQ7bkUxu8JW2+1aDH
4V3BckcxVWxv5U7NOfZGlfC5jMVK9/8J3hAs9npjvXV10mKlN2iAlwV7+z1o
tvIx5rvu1Md5B7G5NNdi2AJ/xp3vZu0VqAMeZexArr3/RNZPSBu3oQvMHY/3
uRl1wyPsmc3eWWgIfj7mq3JqMzwvZbWgO+lup/DpYfwtQSeCvYneRm9+A7yT
NVNyzcd2eB350km+HEWPwgWMVWBrBkqnbExzqqkq+EPOnIov09Am+CHG3mBu
NSqFD7GnIdpXLNpjPBrRYbgXH/qIZSc6mbQY6P6qiUK4zZvt6eg5+Bb2bM4x
n+bCH3mbU89ohpfl29kL0EJ4bdre/jZUDrdn7G2V4x/D8/NtrWpkPNyIDyuy
rUfVJa0GtF450QP3x/zQ+mF42Ftu3on+hN9lz9Zss9ECl6TtbN1Hta4YKpa6
cxZcxtjtY6zm74VbveWGYvqM3pY3u1FvhU7Dq1JWix1oJfxe0nrBNnQE3sie
wdi/6uGnUT88gGrgWm+sNXXebMiWYnoH3BrrWTl3AL7ImW9lWQ6NBKtB3Vc1
WAX/7a1XK/5fK7dj/JUD5fAoY3MSlrPn4SnsqYv1rNhNCtZLa1G/t56nepUP
r8KlwWprL5oTrIeqlypnX4FnMVbOXBlKiIOtVY9Wry6I/U9vPBEe9FY7M9E5
bz1TvfMMaoITxPCRLOthhfo2pK32VNP6lilHlat64y71AuVcwnrWVeyfzNh3
WRazSfDuYLZ79T2Dvw9Wi/qG6Vv2frA59cj/e2Wwt5YP/wTL0TWx3+6Apwfr
HzpTZxfxuzRhYxf5/Ru6C16KjsC/estNjR2Gf/c2p/2fwmej/9qv3lQY7C30
RgP8PhbrSzG+AH8Zv1/qOZ1wn7dYKge+8fbNVO7pzY8qN4K9jXx08Lfevn2y
8RV8U9L+CyhmJfAn0Z5ytgFuj/mlMc11B/uWeNQGn0xZL1EP7U1ZDagW9J+h
G/4r/p/QHXSXBbHelaPX5ZsN2VKN9cADKeu96lmn4OL4fVaNXg//B8HeME0=

                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9727754153124946, 0.8019385382812363, 0.5156037874687329], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNWGtwVeUVPSeXR5h7zr3nwihDrbEtGkIIVMKjFQWMHae2f2qpSciDAOHR
qVaxOHWmLyuPxCRAcCSAMx1iSGvbGW2lhhIwUaAmAfpDpbbF1oIWxF99OC0k
AaJ2ra6VNj/27PO99rffe3/n0/Ublj2UFwTBz8IgSAHfFgXBCnx/Hrh1UhDU
AnYAtgGqAC2AFZ7neg1gu/fUGNd6P+erAXMAswEr/U28yus13vNgLggOcQz8
lfFBcC+gYLzWqkxvue/nuALQBKgElAOe8FwzeK8ENIVaa/a5Jn9zbjHuaOA8
cMXoXsASKOJhwFJAF+SfAnwY+AFAN9afAC4nDnVuJD8IruVLNvI0w3dVWaYi
Yt/FO2utu1mAEn/XGZd4vhtwGNDIeZx5Evhh4BnjQBdQZLwNUA14CkbrA+xK
SQdN1kOjdVJunpqtu5W2Be+92XtvARR63wzzPtP832KdFXo8w/KNWO453ltt
W5aY9mzLU2x/qPU391RmwA94vzuj+yvH8FBpPk6C/lXAKcDROAh2Q77jwPdB
742h7BDCHluBCyPxNoS9g/nC5Gk4X/JXWFbOF5lf0iavtN8dOe37FHCY095P
Al/KF0+X8yU3zw76jv/NQY6ZgCHwdyP464TPTAdeAvgdvsti+fMm+zTvHbX/
zjH2P2TbN1jHl3330TToQ8ZjacXbTu+/LxsEX5oAXWWlV9K8Ytq8g9/F1gHl
/a19lXY76XXuG/b3CcB20HoONB8BLhwnn7sMuSZnJON1GdE5ZVo3WVehdTVq
w2veM8rHSdMvss/+V19JELzBPYlkpU77AN/G3c+Dh9asfOia7XTFvFKm5Y5X
xvrrmAsniVb/GPtz74C/LyTi78NE6/2+64T3DHtuyGMmxA2AxYDBlGzbn5Iu
Bh1v7bDrauAtwMsdk9TX7Ri/hnMFsc4MANpS8nX6/GeBezLyiW7g2PkmA8jS
XwCJx3d6brXjux7wIMbP5InHAvvUTYAW5wTy8S70MhnrfwV+B5DL09y5ULQ5
xzXmt/PAv4ok65uR/HSz6ZJf0qV8H2N9LgtESndUOxetSSk215o/ysq5A6Fp
A+7C2S/kiQ/ef5e//47z/wD0jpMO7rTczMHfsl5O5ymOOgBvmU/y+z3o7m84
tzajc2XWFc9tNC2u846ecbIn6S6xTYscs7Qp7ca5Jb6TNumzzan3h3w/aVD+
UkCYUm2gDv8UaTwPkJeSbJSXNugxD5TxDctD+72ep3E7oCaWfpfGumO/eX3B
dqIuvztBscnY+DCSH7wN/B7sdBHQBdiB8QXs/QVwcyRd/jySTQZsp50YXyTN
SLL122bnI9llhDQi8f9RJJvSnrT9dOe3RcBNkfT0U+A3Y9Wh3lg+SX+kzIX2
HeqXuphinyxwjCwErgekcPaxWHqbbF8ttT6p13brinq7FMtmZ4FbKT/2vhDJ
r3L27dX2xVvNd6n99hnrv8O+Rz7pf/T1r46Jo17H0qpIMfNY9H9atFOrfY8+
2GH/pM26Qun2IGBNJF4ejxQDtMuLBvLMvc9Zh9TlcscaY6vMMUKZ2mw32uCH
sfhYFev+Aut5fCyf/0Ss+O1yDFNn9MfT9qdOxwfH1Dn5np6RnRLgeybIz1hX
mh035Knb+ao9I9oHTX9TLBttjSV/p+95O5a/vRPLlrQ5fXkRcvr1oL0QeGpW
vjsCmputsy3ee94+Xx8px68GrkTu/uNE1D3ghlD9GPuAfOTrMxO1VpHouzqR
rTucJ0n316F6BdYL1or2fPkr/bYT+M+uR6xLi3FfHfbeAfwI6JUBNgL25es8
z/4I+xYB703ko9Qz9X0O8mWxNwH8ZKLOb/Q4a1oJZH8fsk8DfhFwFmd+CXyb
+accsyLprDJSnDPeh4GH0qp/V4AXYlyL7wXAJZF0VgU8xz5XHSn2ipzfLtj3
6IPPmjfy2GH/Ze65wXahffpc75gjsvZHxkOXcw79YEoi+S5ltW/IuWZlTj1+
XU62edZ3bbLv0+YLE83NA/5OIls+msj+F1w7FkXqt+uA73bPw95nWiKaCxLl
0tD6j92rsGfZj7W1oNmZqIdmL70BeD7m1gHWA/Zh7ZvAh8mL9/PcYuuDNWE9
7m4BD+siyT11guzHXEzb0eb77Bek1ZPo+wzwk+6p2Fvxvr2Ap43Jw5583bl7
zPcer11v3VLHv090xxHgQ/Z/xsFSxzTrXTlk2wsZ78+Jp7P2xfWmxzuP4Xwb
8PFEZza6dr7n3EXbPO9aw/P3R7qvMRLf7OvYA34jUkw1MP9ndc9rWeVZ2oI2
OZ+ozzoHfHukd9bKSLk/8J5trkesS4H7SPZru1yXmMdH9XXKsNc95WBWPnxd
orzC/EXbPOW6zTpwj/MZ5yuyGi/LSscnxvSme2wD9n9t7gcHvLbb0Oa5PT5H
PubbN+gja9wHlTofpJx7/5JRXj4D/IOMas7jwP2I4Vk4exL4635jPuCaTnku
ug/b7Po0nCj/XAL+OK0Ymo79W1ynWK/45jvid2C7ayZzR6PflaNvxJf8Jjzj
2GSMfg36X4e5e3N6l/CtwZjZlZU/HcjqfdLt9+XLk/Qu7/Xbstdjzr8ySe/7
7WPmeF+P965wfmOee9Q6oW7O2WfeBV4APuZhbynw1Jz6/Ck51WD6D/3ooHM7
czztUBUqP37OsiwDnp1Rvzo3o3rS4j1BpHM3A0/zXfOBb4iluzAW7UOuHfOw
r4a9SaQcylhhPnvLsckYfdXxxTjrcl2jnQ7bLtT/XJyvxtytrDPuf9gHzXWd
p/8krstDrvn17j++mFFv8uWM6L1ke+6wzo96rsf6nuk3N99NJaH8jf93ikPV
Do4/yCiXXwU+696PPWCJ99YZz/KZOvsF/yU0+n9IufMRx3yjH8nIZ1/O6K4a
n72alo1GgMsS5eKGRDKvdc+31Tonve+7zj6dKB7ed905kdY/mH8BF0eyw0dp
6ZV3zTQu9vc019wbszpHnpmPDmZVm08D/zutd+VgWmPO/yGrOODb+xjfo2nJ
9yrwActIWX/jdzrf66/YHqP/xY76fI97S/ZULbYRY+Z4Wnz2pRX3Ux37gfs6
9ncDaen4A+D9sXT141h8kJ9/piU/9fCZSLy2+u7/AAhBo6g=
                "]], 
               PolygonBox[CompressedData["
1:eJwtlW1MlmUUx6/7kZeHPff9PPeTC2dmlJqbqfnCi4lGo9Z6+VKRCoKgEqxs
paHLVmsmIhpa5Cpmy8nmS63NXgjJatQSQ6sv2mKllBqR9amVJQIRaL//zvPh
v/3u6+Vc5zrnXOe+qXpdydqIc64FpaF837kVnnMVKBeuiTv3BxOdaBXsBc61
suFJNMb8xZhzS1m7DH0Fj7LmQrpzh9Ew3MD61eOcm4tegM+hy3A36oWPsmcG
e29BXfAcbLbD9RqDI6gRXoL+Y/5rNBOehb6B/0Vl8HI0Ap9lvS50OzoD38EZ
V+GTaFFgd9BdmlBp3HyUr/XoLLwm6dzuLOdq0cPwm4zdkG4xaIbfwWYcWwm0
A16AtnH2x+hR+NrQuQ2Zzr2FJsKTE879zv4JGayFX2JNP2vHs/+w1mNzBrbL
0Wx4LWe+wtlHUR1cwJ7sDIvpJHg5e9rY/yG6Ff6ZO50glkNoEJ7LWHkqHrPh
QWJS6lmMhmLmg3y5D90Nb5YN5vpQDfwBugD/il6Gd3OHwqhzUfQsvDE0/oH7
lcKjMTtLZ47BJ7GZYO4c9tvhK9i4i7veifrlO2PnmQtZ0wFPZWwLexuQg6f5
xluR55tN2VaNHIPf8803xVCxnO9brWrNPHgTOu/ZnR6Bp/tmSzWkWpriW23p
zKvY6yXmW4htB7oIj/rmazHqg0vw8d4My0EhXKoYeZaDWfARYvBE1GK0B76N
sUrP3lCBakNr4I/QGt9ypFwp5wHnNfo214Eeg3/BxnFsvY6+hEuSVouqyaXw
p4ztjdqZOjs/tFo7jRbCb2MjiFiNNsFP4fNzGXaHZfA/MXurqolLcBtrfvMs
581wWcJqQ3vq4MWMVXl2p4VwH2d0R81H+VruWy3qzertVqHtnr0JvY1L2CjO
tDcxCC8JrXYOogJ4NWuaWPsiWgTXoh2ejVXDK32bk81CeCRuudKbCrHX49tb
L0LtiiW6JmI1d07+ELNVxG4lWpG0N6F61Rl5eiuhxU41/UxoOVAuFJOd8Dr2
7MqyN6m3mUb+6rC9H02G/07dTzXfA3fHrJepRx2H/4pZ71KPPAFvYM2hVHyV
myJsblNu0eKkxVxz76Kn4WHfeq16mnpbhDU3s3YAfx18AB9qqKcW9AVcGJhv
+9AUuBh9B49jvkq9GEXgXFQf2J2jqfp9Hn4j9d5VX3tDewN6C+v1k2B9r2+9
SzFWrN9P2FvXnXbBp+PWSx9AnXBr3Fg9VL1UOVKuVKOH4CFsTk+zf8JAYP8E
/RteRT26S2Csf0ir+ndg/xL19IrAepZ6l95kJXxj0mI5DeXA233rzXqDj8M5
7DkVsX/YpMB6uHq5ekYDPCdu/4YyNBPejP6Ec/B/Dzwvbr16J7oHLuOMxizL
oXL5YOq95qL8pOVAuVAOiuAKxo5k2Z5yeICYrc+0GlItbQ0sN8rpPvgAOagl
F3moGG5OWG2oh76WsJpWbatGK/W/COxfpzvqrtcFljvVrGr3c3x+KN16nnpf
V2C1o3/IT4HdUXfVmjb4+4T1avmnt/xJqt+1os7QYqRYKYdT4f2M1UTNZ/k+
FlqtXkZX4GrWfJZmMd0IX5+0XKmmVdvZyEvFbyKclzRWTBfA81PfWjMhaTZl
Wz2pHz6GWqLmw0G4K7ReqjHNjaBvo7ZfZ90ft1zKJ/k2wPypqPXYM+oNod1V
e36ENwX2lvSG9JbGp/zVnmHmc0PrbcppNvw/JzI8qg==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9914297630039406, 0.8485744075098515, 0.5734322653122158], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNmXeQ1dUVx98Wdt8zr2ZsuxQpGY0CBpSuQxJFjSxKBI0iHUdWRM04AhZw
UQSSCCygESkWEhTLCJIgqJSlzUiNmoKKDXUyKtJ1opQF8v16Pjvwx9nzfrec
e+6553zPuXdbDPt9n7uKE4nESv0pEU/qTzdRStS5PJHoJLpNtKgskdgpWlwW
3yPKo78gulz0U9q60N6F79tFZ+cTiTHilflod1tX0Ui4v3+j9R8QXS3aU5RI
NBPfK14p3li0S793ZBOJRxolEqvFL2Ndr78qnUgcUP9K8Unqnyy6XnSF5l0p
Ol30ifp6iC8Tn9goxvUV9dR+xomqRI+pb53kzEzHvKtEZ8DvLw4dv1DfKPHj
4i+Jvyy6TzQnl0hsl4x54s9on3clE4kV4l9rjV2i10ULpesLotGiUeXx7d8r
NKeR+ErxpplEYoHklYov1ffnkrksFzb3WVSLnlP/86J7RN1OsaX3N6Y49n1U
c25VW734Z+kYWy/+gviLjOuo/uHIvJJ9XEV7Nes11x6eED+RC7n3YtNurHmH
6LtcnMf2XMy3nc4UNdee+4haiJZk43ue+Ke5WOOjXKxhf/H+e2qtHeI35U/a
3XI+YvzH4l3zYbeO4qt1VvtE+4tiTfvOWcXR5r5VoqTGlmMjr1PGWmWn+OnZ
mtNTVMF8y3FbGf2e776q4vDHrrS5L4ls28N9vfBX++lE9n818i3zq6KQ9bV1
5Nx9/rXp2OsS8Wnp2P+r4lPT4b+LxL8sOinD/vqgqBdx6Tj4TPz1dOx/eTr0
aCL6pihipQdx6ramot1FEWv+7Xh7QDb9ify2Jh/7sz/bBo69xsjxGpZhv/R3
E+S8VxZzbI/dyLTsr4nhXYzZzrgz8RPb+6tGESfLRQdLE4lW4t+Kf6oY2CYc
+ky8WSqR+K3oHFET0bWipqIZ0nedaL2osb6voX+t5szT3A3iTQuyv9q6ireT
/w2W7IvEK9XWKxXzuqivWvz6QsjtnYo1D8sW/5Lso+K3Sd5c0QjI8m8XzVf/
s6J/itaiz3RRtfrmlMS8+fRb1of5GP+++HD1zS6JsU/ozNbLTn8Wf056j1Tb
QvGj4m2lc734cOnUUdRBtEnfm0VPijaWxPcsUZ3kviH5H4tPFa8TTRN9lIlx
68S3iG9Fvz8aq0R/Ek0RrU7GvGrW8prT2Zft7XnbsMVj+p4p2kDfer6t64XS
+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
Ew8J/O8dfl+An7eG7Ku2QzXvLo7Jc7GDbX8B+3POaYgTyxjBW45xZTB2GYSs
QXzfxruPseMvmcDNiZmw41BiYghn0nA2Q+gbzhtPR9YZCX61IVbaQn6b8rvJ
gnzE51/zsY7nG4O6g+03iV+djVirEv814z3P+vqtxe8xw5Jhc8eq77p+1zFO
+B2mFts14Kmx9JZT8KA9e7IMvxE5Z9inLk5HTd0xHTluIjFWzp6Mtx77KHZ/
lLX7YRfbcjA0hLZadB5IfFjH8zmzfrS1xh9tswnUF47vqeynP7q2w+ar86H3
fNswGzVAdTZqsPepQUrxEeeCTWCZa8w7ZN9XJLtfIWKrnrpzC/1Hoc3MeZd6
rAh/si86pzTEkvV+l37nhAryquutV6gBXAucTY71vfp8ZB0iDyTw+yPksjbY
xeN+oKY+Rv6o53sLtbvxZkg+6oPD1AJvcXfYSN3kfOc8vJX5x2hP0XcdNu8D
TST+x3JXd32witxUlw2/noFPu8ZvxB3ftk9xT/d3GW8F26l13uM+lKT+uZs3
nJvEf6B+cx3n+b6/uKYcx13B9Up/sM62P409uUa8lhqtNzl7PO/IvamRnTfG
cXfwHWIgGOh9PEwNMJT8MgHfM647BxnbfQd+mbdC1zeuZfzO2zYbOp2RjZzk
XLQPbFxBbDUjX1nWRjDWeHsNOjbhvfcIONkC7HQuag4G78fv/Sbrt6Fe7LMx
ZBnGZXO/cRuXq3g7qeT8qvC/Sub4LbYlWN0KvZuzVoMsy/G4xsi/i33Pxzbn
MM/50TKcIz2nKfZrC+bVg/etwfzTs9F+VjbWa8F+GzDFuHAA/Sy7DRh6lHp2
Nrg5BKzxW/NW6hC/X3v9ZugwFJsNA3umgif9wZYB6LyHM/uC+sR1Sn98rSFX
teYu0w/cu5n5teCb383nkUtmotsM7NqHs5zD+7pzziD6BzPfOOm22bzfV/MO
PxQ8nYkP+HcVdajPcz35d10+aqbVyZPv/XXs+RP+d+D/IdinV2HrMt4Mf3w7
pN52bbQC3zfeL+R/FnWZuJ+4XmpSiPNpxRmtJr87z9s39rGG8a4CPGyo22yP
DpxhR3y+L37fkX0bu8dRb3uvczlb27c3Me0z7kLe7Ur+HkHO64SN3baIe5nl
DSTu7VP/5X8K/t9CV3K368VDmfClI5mTOGKfmoX/OW/fiG3ss7OIafetSMc9
/s10fG/GX2vAJcftmkzMWZAJXQbj33Ooo+cyZwt+8A0+alxpXIgzP5EPbJuA
LQaQi+yj48FD674yH3j1Rj7+5+N61v9r8f3Yd94avt1ejL1r8K0bC+ETl4jf
wpuS35bOLMTYI5JZwW+3babes96VhVivUyG+69mb13Fd7Tmus9cSP/YPY5Xv
0g+B27a7/XcNsfp/uH5mkA==
                "]], 
               PolygonBox[CompressedData["
1:eJwllmlslFUUhm9nmE5Hv5n5hoBA2UpwSUw0LC3QsgQQYiwkJsgmJCDFQgTB
HwKJoiirJuygBEEEBDUSCSQCFtpCC4n+8Q8oKltBUJAYBTECQUCfN++PN3m+
u5x7zl3O+brVvDJqdiKEsA21Qr2iEFYUhbAS9Ybb5UJ4ko7JqAd8Jw4hkQnh
eEkIt+B7+RCmpUOoQC3wXVSbdpv6ejJnBXMnoifgf5lzgrlJbLQvhPAPY4Yx
dh7K0teF76upEEqLQ6iEt9PWi/FT0U54IHOeY+4SNAHugyrg6agffI8xxxh7
FF2CpxFDA7EsR+XwEdoO0vcuaoQD2pC2z/dZby86z9q70Xq4if4axq5Hx+A3
ieEasTSiefBdbL7KBs5BF+HD2RBmJkOYgT6BlzBnHHMfRYtj+yTf/kYBf3vl
vLdr0DPwEubUMrccLYQHYHM1vq9BA+F+aFWR2yrhWlRf5BgV63RsNGPrBnoL
3kNbW3x7CK2CL2DzW2zfQ7fhKbQdKrKNGrgLPo1gL0tRR3gte7CHvfgZ7YJ3
MGdD0j5uh99hzm/MvYpmwiNyjkU+1MKTaKuj7yCqgnejNgn7tBKeHLlPPvSH
h2CzFba/o38QvC32WWkPt8J7I8fSDq2GjzFmc9IxtcDv0XYUW81oHZyibWfC
ZxTgecSwoNgxKbZRxDiNWMtRX7htznf1cdQaLqLtBmt3p78rvAabTdj+C62H
x2BjZLFtzoLXRl5bYzT2FBrG2sNRHVyVdWzfo+5Z75n2Tns0HU7SNpK+Eegy
34msuRr9yvd59uAq/tShc7Ftyrb29Ev4bN5vsQ86B7cwZl2J38RFeDL2TjP2
FHoq6zeot6g3VAofYsxsxm5DDfCi2Hf3Mb1BuIk1Oibs4y/wUnQZ36+gl+Dx
jDnF2g8y/mW4lDV2JHwGOovygvdaOaQDnKbtNfp2oYfhVXm/vfloLvwjNrZi
axaqh/uiz9JeoxpeFnlt3cEZ8ATaMoz9if6x8iV2LMo5Z2LvifYmhRrhfcz5
g7ldWL8R3siY/iW28Qa8IHYsA9AmuJ4x1xl/TXdW7z3yXVBbA3wA/Vlkm7Kt
HKBcoDvaBH+Mjd4lzmnKbXWxY9OaW2Lfad1t7elyeBlzqpLOKTuz9kG+6Iw+
Ui6L7IvW/Ap+kTGZpOcshevzjrUYNeQt8Un2dxM8OOu9/xw9Ao/Pe++r0Wj4
Bda4yfhbaDC8VPm/xDEMgffnnRta038CbsbGN0nniCPwIvRA0j7JtwVZ57YK
VAOfZM5Q5hbQ8bzvpO6m5kzN+gx1lp+iSrgtmpP2nJuMv0TMcxN+Y+fgrvS/
n3ZOV24/j43bSft0Bp5YcO3Yj2YVvKbWVs7fB5cx5vWE76TuZiM5YDH1aBQ6
CI9nzuiMa5BqkfZIe9UeDddeRL5LndFRuBs25idsswS+j426lGtcJ9WayGM7
oebIZ6Cz0BsdCjfHrn2qQapF8kG+lKG9Oddg1WK9kdPwhdi1Sm9eb19nprP7
Gg2CzzBnWco+3IIPozEpt6mvc96xXOG7g3JJ7L3XnnfQe45dq/UG9RbPxs5F
qqmqraMLrsUfoLFwS+TYlDOUOyppq864xqjWKKcot+iOTYH/i117lOPuxs6R
ypXKIZ2zzsnKzTrTLPx2znuhmqzarBypXKk9L2Z8t9ix606UwVsY0z3lmA/A
/fFhfsY+VcE9Iv8r6B+oJ3w/cm3XHdNdu8Oc/SnfievwwpxrrWzKdlnBtUJ3
ZAD8PPoi4zXGFfxG9Fb0z/M7vDnvt/gD+lB3Ked/C/0zPZ3zGegstGac9z+R
/o1Uc57N+w3pLalmTlKuYY2NGde0MXCngv81VMNUyyoi/9vpH6KP4sn6X0D/
eG1Y738J6lgG
                "]]}]}, {
             EdgeForm[], 
             RGBColor[1., 0.9022691542252373, 0.66050466417232], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
O6L/pEjvjHR8pLcHJgTOlt45gXHyRdlZ8kUZPo+7GN6E/uh4N6OzcuafKicf
8+13bmBxY47zTtS9Eunacs5nnjy+3JjltHu6nPw8E+nSwMT4vaqcfN0mb4vl
GZqNTeETmnJ++zmPwc6NOf62nLwskJ8zlOUY6S2Wx7mWn2F/xh0ioDM08EQ5
53pbOeU9X5nfZvlj5Rxn4UbyW6QMz3E8xuoU6NyYNocOS00pg5+6bofrS4eb
P3SjskNcf7Q9WP9xiPZ0hOtyfWuu18bgZ138viB+ty+n35piv4Zaxipb1rJf
L9fwG7V863wr0kd9p+O9rmctzwVb1XLsi+Vtqr/hoVstY6HNIn2pmjHFK9Xk
rZf8rXTtsIa2dcxe8jVV3vC1+OcR+iDq4L1Qzrmsc285zHbIh3xPaY6U7gjr
D7O+7vNG2m4b24z093DbQGdVa87pndbMb2n9cH8jgxecI3N9sjV5f6s19wb4
fTPSUSGLd4gxIt2jlt+b7Rnpt9WUP3q4rprfWd0Q6bbl3PuL5eR1ujw+HTby
TOC6wG+bMn+tZb8LXG/6+8ANgeNte0JgWPilWZHuWsk8bU8MPCWt2YFV5mfZ
Hzo3Wv9FU9v4XzkOdX8I3GTdl9bv7Ni7SPMz6fYKv9i7uS3/ubR3Chxnv22b
s92n8fuUwC8DpwZOcryTN5rnDeJG66+Vj+vk61l5m+V4s+17g3Of7fjX2u6X
jsl4cwKnSesZ+822LbyeVMm5HVhJWjfIw3G2Yf7H2uc4ZfkHeZ1l+bG2vW4j
XV2vvuZWUhYXV7LfN84HOv+QFu9Sg5vznWrXyO8WaBcY0px1vNE9Xcmz1xOR
9o26PQKFwH72o3/nSurgH2Fv/yqnL+oaZX2ask+zNAdL9yrvPLnbhM54aZ3r
70GB3aPPj5vSN9P2au9I4ZG69uobG/muMfvtZ9+drPu2MeuZW0PgXe8kuZs8
WZ2don19vpFNfaFed9defqxsTrJsV/VP2af2X6VNfa2Md1EPtJ1S0R4rOeaz
2grjfKnNfa1e6vr5Rh0d7Xetk6qp+5vkqa/2hT76aHN95fUUy6D9VVPbmvta
Hl9yv2QvYT39oDnnvV2k2zdnv+O0qZ3t98Pm5OtY6zbIuJL5bpX8FnK5d3CM
tUNz9rvQuAofTLxRdPxRnlN+Vk26OzbnnI9XbrvIP/xA7wjv0HubjpLvUd6b
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
27/q79/wPY53uf8Hzpirlw==
                "]], 
               PolygonBox[CompressedData["
1:eJwllmtMlmUYx29e8AXW+xwYJuAhBKm+tFXqHIlYK09kZmuEmTEN88DE3KqJ
aUqiYLMPTTyUpGnpyrRWWxPGUeXQh7Y+FG4eQBCnRvap0HmAoN9/14ff9nvv
03M993Pd1/1mlWx49Z2Ic+4wJEBdzLlMGiZDPX4pdO6rJOc2QDM+1XduDwNX
wFP4OXh3jHPvQRvey5xFzH0ZzuFnYAr+b5xze/HXAvqjzk2AxfgYiOC/Mz8e
H+IZCcnOdfG8+3grc7IjtobWUpv6FFM33kRbVsTGNON7YvasQajB/yOmBtbe
BXfxNN9ifxLG4u/zzIqoxbQeX0PbIH1tsAqPeM59yNpb4Sbr9cXs3RZDG57D
nKnMjYNs/JHA3u0Wz5uIx3s2dxv8yfjG0PYyH77EN0MMv5zoXBm+0Ldna48L
8HzabtJ3GvLw7TCP8Q/DR/jjrL+btZtggPUfePZuI/HO3cNHiWElc/fB5NBi
UCz6Rtfx8bSdoK8c0vGLjB+PL4S7+FFieIJ3KYYzeLfeib7p0IvXwUDU5pzH
N8JPUdtT7W0ma76daDEoljXE9JdihdX4RPq30vcj5OJZocXaCbPxdmJ8JWI5
2YK/HtpeKeYX8R7WTEi0mBTbcGCxTYMhvIcxu9iramjF+6AeH4Dh0NrUp7Yr
+FXe8Wve9Rj0+4ZcOd6JT2DMTtauggesPxraWhnk7IQU557ldwd9d+AtPMKY
P5jbBTeYP4kx6YwtgJl4XGC5rzHX6V/GnBuJ9s317ZvoP89edkGj8iu0XFAM
k0L7RvpW2sM0fs/mdwljn4b8wGJUrIVwD/+GPT9MbpTBcfyqZ7nyG/Tiw5BI
/uRCOvFk8ft79v4HSMbvw0XGXoBr+GQ4FbExSfhz0I33wGN4JeQxdhaswn8m
hmtRy5GT+BZox2vgg8DW1NpJPH8I/xgy+J0O6z3LGeWO2tbh7Z7FfgjO4r/A
t/EWYz9e4NnZaIT5+HJ4iL4YzME/gfn4JjiBFxPD3qjt4TJ8nmdzG2CuZ8hv
wQK8DcqZuxG+8wy5YuhULLAg3p6hZ7V6Fqu+gb5FqWdr6UysxXd59q5p+kae
Idcau/E+vsmn5MpZGFVuwhw8Fap8O6M6qxpzBe9QjcNfgOO+5ZBySWemBV9N
Wy17fRAW4a2+1coiaMbfYEwh46ugHP8cBvE2+Az/Ao7jx+AgXsqcX/XtoBJ3
gcX6D2TiswLLTdVM1U7lhHJD32Sl8imwsdn05wW2ptbWGajFswKrtbozdHeo
Zql2zQUPP0BbfdRqkmrTiG+1WHeA7oLljBmXZGesOLR31LvmQB1e7dtejtWd
oVrg295pj7XX230bqzuiwrc90d7omTX4Dt/eXTXziG9nXmdfNeUavi202q+a
r9q/P7C91BnQWdgU2FlQDioXL8AUYs2BhsDOoM6i7qSoZ3ukvdI3WoJXe3a2
deaq8MuBnX2tcSmwnFfu64w+jx8lhqIkq5EtqsWh3S3aI+3VaeakJtqZ1dmd
GVqt7oel+J3A9l5j/sb3xezuvQ378UJq3Fpq3QzIxdt9+6+gnFRuPpNitVM1
UbVxKWzGT0EZnpditVJtS/B1UJtsaxbh/TG7i3VH6K5YEdrdoRqsWlwCt/FH
eZ8dodUk1SbVrBzPcl65r5xdi0+H0gQ7Ey/hGb7VQrVNw8f5VptUI1Urdcfo
rtEdNxLYN9K30hmp1++Y/ZfSf5RGfGdosWjPj+AVkIrPhUN4ZWh3h2JW7GpT
n+583f1vhrb3mrMFn5Fie6v/TOPxDs9qmWrSSfx/xYhXIQ==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[1., 0.95, 0.75], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
                "]], 
               PolygonBox[CompressedData["
1:eJwtlEtsTVEUhpfee3sR5+xDxKv1aDuWSBhQJRjQVmNQEak+oga0Fa+ZVjyi
1CMGJV6JQUskiomERAcGbmknJAykVOLR2w4IBowIUt+fZfAn395nr7X3ep2S
Hftq9xaYWSVKo9fB7Eeh2XfUDx9EzfB21ABfRP1wF7oA/0K1WbNOND8x+xuZ
leNoCvoNd8ZmizNmf1gfhzs4341tDl2BK7C5j+04aoTHsJnK2ZGU2Sh8iTPn
C91Gtr34aMq4zx54E3rO+WuoBm7DphjbLwRVCd9C7aw70Dl4feTfvqINke/p
WxU6C59BG+F5aDfciopS7lO+u7gjz12j6AT8ER3gLfvREHyaM9Up9yFfV4PH
qpw+hOvQFrgMbYWHURGxf2b9Cj6ceC7GUBO8E5/P0h6jYi1n7x7fjqDlyhd7
Pdz9EqWwf4tK+bYZ/YRbY8+9fLTAs9CKtNdItUpz5gW2xv2lcBmaYL2E9Sp4
V+S5UA5a4Dfs1WT9zXr7qchzp5j3wNuC94ZiVKzvua874zV7B+fQWngNegxX
Y/ONWjxCn6bhN/G3q6fUW1WR10pndPYJNusy7mMg9pwr99dRHjb1L5xDE7Hf
obtUo0G4InisilGxlgTPnXKgXNRz/4Os96R6c0Hiva29lXADyme9BnXwh9jv
UoyKdVnsvdiGlsZeQ9Vy5mSzY4nPlGZLNRqBb3BmBrbTFQM8QIx95PI2ugM/
jf4zugsfTdyX3nAInhv7XarpHLggeC560TjrScFZPaJeWR28tprp+uA9rF7W
G07G/ga9RTm+GfvMa/Y1g+2a98hnWzOqWS1OvBfVE7Phy8F7Wf8I/Sv0Zr1d
M9gHLwre+6rRQngo8llXzIPwP6BJoFw=
                "]]}]}}, {{}, 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwN0LlOFGAAhdEflA7FiiUKMkjCA0BBZIZOtiiFDYEZIKFAEIXSZUJUXAbF
yoxAYcJmIkjPUrEIPAHBJUEdwIQ3QFQipzj5ulvcSNfAzf6sEEKainMhHOaG
0KSN1FPHNRq4TS893KKbPl4yzF1S3OEVr/nACLPMs8FH1pljky0y7HPMHn85
If98CP+0UIuopIrrNNPNDXroZYinTDDJCrt85wf/CXkhXKaUGlpopY17vCHN
KAtss8MXjii4EMIlqrlKKwmSPOIdT3hMB4N00k6UODFqKKGYY7sX9Y/+5htf
WeIzyywyzhgPeUuSByS4TztxaolxhSjllHGWCDmcYd8fWXqg2fpL99jiJxk2
WWWNdT6xwXummGaG5zzjBSlOAZU0VfA=
                "]]}, "3.91`"], 
             Annotation[#, 3.91, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVy7krBXAAwPEfylHOUiTJK8wyODZhwaCEbMqRwbXIYCCK2XMsigmDFU94
nof/wCblKMdglivyMXz6Tt9I/0TneEoIYZK17BBWWSbKEiuckSDOCccccUiM
fU655IEL7jjnliSPvJCWE8KzpuqTpmsWETIpJ4MKqmikkiZa6KOZAYaYZ5AF
FtlihwTbJLnklns++KIwN4QiqqmhlXaGGGaWOTaIESfBDe/88EtpXghlNNBB
N2NMMkWUXfY44IpX3sjJD6GYEupoo5dRpplhnU2OiXPNDZ98//8Ffmqpp4se
RvgDuv9FAw==
                "]], 
               
               LineBox[{3996, 3995, 3993, 3994, 4028, 4027, 4026, 4029, 4061, 
                4060, 4059, 4062, 4093, 4092, 4091, 4094, 4096, 4127, 4095, 
                4128, 4129, 4158, 4160, 4192, 4159, 4193, 4195, 4226, 4194, 
                4227, 4228, 4255, 4256, 4285, 4287, 4316, 4286, 4317, 4319, 
                4348, 4351, 4379, 4382, 4409, 4381, 4410, 4411, 4439, 4441, 
                4460}]}, "3.68`"], Annotation[#, 3.68, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzLsrBHAAwPGfYvMuijJgvnJe510GKaOQDCdX3kUGLOiUx+A1WJQMMssV
6iTJn2CQkIh/QClKks/wGb/f8sR091RGCCFJa3YILTTSQD111FBNlCoi1DLC
MAmGaGaQJuLEGGWSdSZYY5xVxthghxTbnLDFMZuckuaBc5555483fnkl5ISQ
RSmZlFFJExW00U6cBEsMscwKhxxxzQ1PvPBFTm4IhRQRIUonXSSYY5Ek+6S4
4IoHPvghPy+EEsqI0UEP/cwwyza7pDjjljs++aIo34M6GuljgHkW2OOANJfc
88g3PxQX6KklRje9TPAPlbZDxw==
                "]], 
               
               LineBox[{4229, 4161, 4259, 4258, 4257, 4260, 4290, 4289, 4288, 
                4291, 4321, 4320, 4318, 4322, 4350, 4349, 4323, 4352, 4354, 
                4380, 4353, 4383, 4384, 4412, 4414, 4440, 4413, 4442, 4443, 
                4461}]}, "3.45`"], Annotation[#, 3.45, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVz80rJHAcx/HfuHoaqXVQ5CGHta0ic+Dg5C5kYlPTcnFBKSWFckGSm6Lm
4KCtLcWBRHnYXctlL6PQ8jfYZWI8ezm8eh++l8+37OtAa38khDDFcXYIR/zi
J/vsscsBzzzxwD133HLDNb/5xyFX/OCRrJwQqohQSaCCV7dyfdGPWkMXn+nk
E3Gq6aaXCXoYI8EkM3xjmhWm+M46KdY444IMf3l+35MbQjGlxCihkSa+kGCc
SZIss0OKcy5Jc0c0z09UU0MzcRL0MsociyTZZJtTLsjwRFG+TcRooJUOBhli
lnlWWecPKf6TpjAawgfqiNFOnGFGWGCJDbY44Yw0GQoLbKCWelpoo483VLhS
yg==
                "]], 
               LineBox[{4447, 4446, 4444, 4445, 4464, 4463, 4462, 4465}]}, 
              "3.22`"], Annotation[#, 3.22, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxbtLFAAcAOCfrpZ3PZSjB9ggdUsIOrg0tbRdetwQKYEuTReIoOj5TO1x
UFOgcEPgJNjFUaJe2X9wFJQK4hzVcNCpUTTUN3x8V4Ye9OebIuIZxZaIpzxi
iYfMM80UBSYZZ4xRZthikyds8Jg3LFJhgdfMUWaWbT7wgx2+855vvOMrVer8
5vKpiBNf9LFT/ukOp8lyjT6ukqGTHANMcJcZFlhlnjXKfGSdLxzwh3+kTkdc
opcb3GGQArOUeEmVGvsc0qC5NSLBOdJc5ya3uMcwE0yzTIkNquxywAl/aU9E
XKCHXm6TJc8IRZ7zigo1PlGnQTIZcZ4ueugnxyjjvGCFt2zymT2O+MXZMxFt
dNFNhj7u8x82ZFQg
                "]]}, "2.99`"], 
             Annotation[#, 2.99, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwN0M9LE3AAxuGv56ZrWVKXZCejtLWVzWoWXbpsSBpUh10MY4TkKtmw2cWj
hw6CDMRDEEU/QWkqXvoLOkRRUwSDoFsNprhAuvQcHj7Xlzd+pzgy0RZCqHLl
QAiXucRF0pwnRZLT9HGKk/Rwloc8YJAJMtznAuMMcI9+CpzjLmcYI0GRCm94
zGvKvKLESyZ5ziPes8ZPVvjBB7ZZ5hcNjkRC+KOd+luPaZwc3WQ5zgi3KXOT
aWZ4wVu+sEGTOn/5R1e7X0iT4RZ5KsyxyDPW+UidLXZoEekIIcYJernKNfKM
MsUTqixQY51vbLLHPoejIRwlST85hhmnyCxPeccSn/hMgybRgyEcIkGK69xg
khLzVKmxyle+s0uLWMwGEiTJMkSB/9vvT9o=
                "]]}, 
              "2.7600000000000002`"], 
             Annotation[#, 2.7600000000000002`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwV0b9LFGAYwPHX9bL7oWhoZ2nlYSGH4dTWIASFF4YUqB1xw2FxdBAuN7hH
WzhEpQ05hJWgES39B3Jwaf7MKM1SkYOjIoemPg0fvvBOz/O8Hbnitbt1IYQn
VCMhHLDLd7b4wgZrfGSRMpukjoTQySk62Pd2Uvc0qd/0uG5ri37WY/pJm3RF
G3VZE1rRNu3mFmfJ0sVNzjDCaYZo5wYnyFHgGXeYZJSn5Jlmlg1escZLvv6f
l3h9CD80pjvarEku0UqGQUqM85wXfGCFP/yl6ahd6eUC1xmixDiPmeId71lm
nRq/iURDiJLiHBfpY5gsY5SY4BHzvGWJVX5xSEPMLPTQyxUy3KbAfR4ww2sW
KFOlRjTuT0hznqsMUOQeD5lgjjdUWKTGT6IJN6WbNJfpJ88/rvhV+Q==
                "]]},
               "2.5300000000000002`"], 
             Annotation[#, 2.5300000000000002`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzk0oHnAAx/G/WmbP4/Eey2212kFaqV0ddvPE8rbiII2WlwNJeQ7juFyl
ZK2UFXIiImkvXrYxRDyitVpECotoB1efw6fv8fd70tRZ3ZESQhjlbXYI5ZRR
TBGZxLjJCuGaXXaYYZpBBuiig1eUU0wR6US4zAzhnA3WmWSCft7TTisVxCnh
Oblk8z8jhFv22WOWKYYYJEE3DdTzklKe8ZQoadzEQrjigD0Wmecjw7wjQR21
vKCEAnK5S/eFJNuMM0ovCSqJU0AOx1HbeqJ/+ESSMQ6YYIRGhnnDB5qpI4dK
8qginxoe85pCMvgSCSFFv+kDXdFU/aEP9ac+0l8a1Q2N6bZm6Y4u08IMbczR
yQJdLNLDZxJ8pZcl+ljlO2uss8kWuyQ55Dd/OeKUMy74xz2PfVuw
                "]]}, 
              "2.3000000000000003`"], 
             Annotation[#, 2.3000000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwV0L1LFHAcx/FfLXp6akL/gIKLiDi4RoOR51PImaF3RE8+BKKJeqA4RCCN
hWCQi6akpeZdJKn4B4QQqTi05K4SJoKLIunrhhfv5Td8vr+Spy/ifddCCPO8
ygvhJaOMkGKQXnro5BmPeEgbD4jTTKCR/5EQYnqhd/RcE9rPKn2s8JyvdJHm
CV94zCJJPtPOPPf5SAuz3GOGeqa5yxIbXLKe3cL37Ba+ZbeQ4YxlrueHUEQD
UerJo45c4iSZoJ1JPrDDNL/ZIycawh8t1JvEaGKIYaaY4SdbnHBKcYH3VFFN
C62kGOYd71lhjW12+cs/cgpDiFBKGbe4TRsJBkgxzgTLZNhihyOOKSjyD1RQ
SS11dNLNGK+Z4xM/2GSfQyI3QsinnAoaaKKXft7yhjQL/GKTIw6IFruFcsqI
UUMHVw4IWtc=
                "]]}, "2.0700000000000003`"], 
             Annotation[#, 2.0700000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzz9LFAAcx+GflFF5+ac3EEIJh4VIYWRWZp52VIRiukiDiUGFplhEg4hN
DdGB/1ArhYrSaoneQEMEoiW4NDdYyHGQFRYR9dzw8Fm/3/KuvtbegohYYHhn
xBC3ucUgA1zjCt10cZFOOrhAC+f5tyPijP7VZv2jp/S3ntRfekI39Zj+1CP6
XWv0mx7UnFZpVvfruib1q1bomtbqOeZI84gUMzQwRT2THGeCo4xzmFEOkaGa
B8znN/Isv42n/OBx/guFRRFNbKGR4CztZGhjnGlW+UQiEVFGijQD3OAhsyyy
RI4NSnZF7KaKalpoZZCbjDHBa97wgRXWybK1OGIbeyinljraaOc6/dwnwwte
ssxHsuRIlEQUU8kBmjhNNz3cYYQnzPGOt6zxme2ltpBkH2lSXOUy97jLK56z
xHuyfKGozA+S7KWZBi7xH15GW9o=
                "]]}, "1.84`"], 
             Annotation[#, 1.84, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzztLFQAcxuF/SKjHa4hEhLc0PHgjBEGxRTiISypKuyg4NCjmLripnBOk
UOIFhwZBGuobNEQkugQtIlLeSjnIERE3wcfh4be+b93o5NDEg4j4SK4w4oaX
iYhr7dQr7dBLbdcLbdOsNuu5JvW/PtdTrdcTrdNjrdYjrdJDfap/9Yn+0cd6
oJW6rxW6pzX6gne0kqGJNI0s0MA8z5ijlves329nhRzL3HBLX1HEAP28YokP
/OI3ieKIElL0MsU0q6zxk20uyFFaElFOC630M8hbpllkiS98ZYddzjgnrzTi
IdXU0kU3w7xmkgkyLLDFJrtsk+WMorKIAppoJEUPY4wwywyf2OA73zjlkPxy
W0jSQB8p3jBOmjk+s8kOP8jyj8QjP0hSTy89jHIHhKdR6g==
                "]]}, 
              "1.61`"], Annotation[#, 1.61, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxT1LFAAYAOD3xNS7zvsQEUkdNPDQ9nA8POQmSe4PREKDiF8/QGxIIi6y
pCUHBwchIvoJDqIdJ3ilqSEiDoqgbQ6N+QwPT//kXGU2ERFLnCQjzulKRZy5
06fu8B/nfeysj5zxb6d96JQP3OZfbvFPP3DDOfeyzCNe002VT6yywh3/GHsY
UeYjq+zToC0dkWSUEnPM85k1dvnBLX9Jt0e0M8wTxnnGAvN84D3f+UadGtdc
kchE/HefexjhKRUmmGGad7zlC5vsUeOGa1LZiFaGGKREkUme84pFNlhnmy0u
uaAlF9FEgceUKTHFS6q84Sub1NnhhiuS+YhmCgwwRpEX3APFQUNe
                "]]}, 
              "1.3800000000000001`"], 
             Annotation[#, 1.3800000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwN0U8rAwAYx/FnMWwzf65ymbLmBchxGblQ4gUIOUizvQHlhojd5OLgsJLk
JThomo15Cw60mhNvQD6HT996Tr96ctvV9UoiIvZppyLe6U9HdLRP3/SVFi80
GXTPkiHFEcf88EspE7HABTXe6DAwHJFkniIVylxxyTMNvumRyUakmaHACstU
qVDjnAfuadGkyxcxEvGnkzrBHLOssUqZPc444ZY6bZr06JIatZ0C05QossUG
hxxwwzVPPPLJB8mxiAR5pliixC47nHLEHXVaNOjxxdC4X5AnxyJFNvkHJpg6
kw==
                "]]}, "1.1500000000000001`"], 
             Annotation[#, 1.1500000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               
               LineBox[{2502, 2501, 2562, 2561, 2691, 2690, 2798, 2797, 2881, 
                2880, 2957, 2956, 3019, 3018, 3076, 3075, 3136, 3134, 3181, 
                3223}]}, "0.92`"], 
             Annotation[#, 0.92, "Tooltip"]& ], {}, {}, {}, {}, {}}}], {
         DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
          Identity, Frame -> True, FrameLabel -> {{
             FormBox[
             "\"\\!\\(\\*SubscriptBox[\\(N\\), \
\\(j\\)]\\)/\\!\\(\\*SubscriptBox[\\(N\\), \\(i\\)]\\)\"", TraditionalForm], 
             None}, {
             FormBox["\"m\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotLabel -> 
          FormBox["\"\[CapitalDelta]\[Theta]=8\"", TraditionalForm], 
          PlotRange -> {{0.01, 0.5}, {0.01, 4.91}}, PlotRangeClipping -> True,
           PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{{}, {}, 
                  RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgB2JGIAaxvYOEnt358d5+UuG8GqOjr+39jObrC8s+tr8z
06tggcEp+5leU4//Ubxu337FQfDXz0f20ff3+MTXXbavMWNbvtPzlv2/Ql0m
juon9k976hwWfb9lv2txoIDcqzv2X2YI71jl8cjeQlZhVpHFQ/sfAnMrm7ru
27/c/zPXV+yB/e/PDCIiX5/YS9uXFBaLPrQ/cHa/+4Pjt+2PnHrYu3XjC/vd
XyWXLU19ZL9cumezavJ1+7aFh9jD897YR63Zf+v61sf2UzMj5LP/XbLnnpH1
rC3srf1n+eraaP2n9qvWJSa6PL1qH8wk/Dz8/Vv7ZZoK/1PXPrNP51s5Y9eM
m/ZzcnY/1+h4Zx9tfLShQPuFvUbeh/MGPnftn1xLfvFT4b29gG0WU/XKl/Zf
ns1uvlz/wF7HkeflqZ3v7Y+68be0qr+2vzrNfn5f5CN7BjD4YF93YlN/8v03
9m/N89feUnoKF08Dg3dQ/gt7AJdhs5c=
                   "], {{
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[-175, 2]}}, {{7.5, -87.5}, {-7.5, -87.5}, {-7.5, 
                    87.5}, {7.5, 87.5}, {7.5, -87.5}}]]}, {
                   CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -75.83333333333334}, {
                    Rational[
                    15, 2], -75.83333333333334}}, {{-7.5, \
-75.83333333333334}, {7.5, -75.83333333333334}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -64.16666666666667}, {
                    Rational[
                    15, 2], -64.16666666666667}}, {{-7.5, \
-64.16666666666667}, {7.5, -64.16666666666667}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -52.5}, {
                    Rational[15, 2], -52.5}}, {{-7.5, -52.5}, {
                    7.5, -52.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -40.83333333333334}, {
                    Rational[
                    15, 2], -40.83333333333334}}, {{-7.5, \
-40.83333333333334}, {7.5, -40.83333333333334}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -29.166666666666686`}, {
                    Rational[
                    15, 2], -29.166666666666686`}}, {{-7.5, \
-29.166666666666686`}, {7.5, -29.166666666666686`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -17.50000000000003}, {
                    Rational[
                    15, 2], -17.50000000000003}}, {{-7.5, \
-17.50000000000003}, {7.5, -17.50000000000003}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -5.833333333333343}, {
                    Rational[
                    15, 2], -5.833333333333343}}, {{-7.5, \
-5.833333333333343}, {7.5, -5.833333333333343}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 5.833333333333343}, {
                    Rational[15, 2], 5.833333333333343}}, {{-7.5, 
                    5.833333333333343}, {7.5, 5.833333333333343}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 17.5}, {
                    Rational[15, 2], 17.5}}, {{-7.5, 17.5}, {7.5, 17.5}}]]}, {
                    
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 29.16666666666663}, {
                    Rational[15, 2], 29.16666666666663}}, {{-7.5, 
                    29.16666666666663}, {7.5, 29.16666666666663}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 40.833333333333314`}, {
                    Rational[15, 2], 40.833333333333314`}}, {{-7.5, 
                    40.833333333333314`}, {7.5, 40.833333333333314`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 52.5}, {
                    Rational[15, 2], 52.5}}, {{-7.5, 52.5}, {7.5, 52.5}}]]}, {
                    
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 64.16666666666663}, {
                    Rational[15, 2], 64.16666666666663}}, {{-7.5, 
                    64.16666666666663}, {7.5, 64.16666666666663}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 75.83333333333331}, {
                    Rational[15, 2], 75.83333333333331}}, {{-7.5, 
                    75.83333333333331}, {7.5, 75.83333333333331}}]]}}}, {
                  Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.500000000000001, -87.5}, {7.500000000000001, 
                    87.50000000000001}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -64.16666666666667}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -64.16666666666667}]}, {{
                    7.500000000000001, -40.833333333333336`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -40.833333333333336`}]}, {{
                    7.500000000000001, -17.500000000000025`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -17.500000000000025`}]}, {{
                    7.500000000000001, 5.833333333333342}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    5.833333333333342}]}, {{7.500000000000001, 
                    29.166666666666636`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    29.166666666666636`}]}, {{7.500000000000001, 52.5}, 
                    Offset[{4., 0}, {7.500000000000001, 52.5}]}, {{
                    7.500000000000001, 75.83333333333333}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    75.83333333333333}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.15\"", 1.1500000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -64.16666666666667}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.61\"", 1.61, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -40.833333333333336`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.07\"", 2.0700000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -17.500000000000025`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.53\"", 2.5300000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 5.833333333333342}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.99\"", 2.99, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    29.166666666666636`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.45\"", 3.45, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 52.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.91\"", 3.91, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 75.83333333333333}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 175}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.8965150808659806`", ",", "3.9789064327955135`"}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.1500000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.3800000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.61`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.84`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.0700000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.3000000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.5300000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.7600000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.99`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.22`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.45`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.68`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.91`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.140000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.37`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.6000000000000005`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "175"}], ",", 
                RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
                
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {576., -192.}, {
      Center, Center}, {360., 360.}]}, {InsetBox[
      TemplateBox[{GraphicsBox[
         GraphicsComplexBox[CompressedData["
1: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
E4Ypxf4Tl80xzTpIurpNqL66kUo8P2rX0PQXB8jTIy3yksytxPtbesfGrT3F
9peWJ0a9ntH/ADE7Et9td7KVeCfAvqw47wTbb7ICHUcGhe4njRPWmjxuqNnj
7bDkdtq09ZZibNcNV+vtd2f70ciZ1W527r+fPHMtaN9wu7U4tovBYeKA42x/
2lGVtJ3vtY9sq7NvUjMnjfg2/lHxiWrH2H71fK3j0UGhe8m2F0uX+re2Ea/9
fbz2TsVRtn/Vcn7TsfJ3F7JpenH7VKVWdL2btnSc/Ajbz7KNzf3y67qQDk1i
Zh5N1YozA1v38jW4sf3t7Yt59SpP3UO2uU2OK7xhK26ssfju2daH2X73rFPt
wmcXd5Orf5oCNvbUictm/bnDuXAXab5sV5LTVZ3os72FcePgXST3SscKFSvq
xfRuu1I+aHexPAphqlfTL+8kdeL9lFc36MU1D0esNFu+k+Wt5/NNe67a7CSD
ki4o62TpxU+H9nZLer2D5enPDkvTPv21g9w/sKr96hGCOG/wk836oTtYXrqE
KcYGvNtORunXbPX1F8QzTdruHBO6neVBNalPtbBx28nD7hr/pHoGMU7T4ezY
7tvZ63167cgylz2n2OvbLuZigc/zbaT4dvOVGS4G0WvLrS3PArax13elJ3U/
yNJOstd3/wudUuzbnmSv71bfvx7qOmwbuR+0qUNCgUF0/LDK3Zlsg5+vnSIn
O7WNzh8YSky9qs49se4M0b/0Lyh6HEx6vlXlGlacIt/beawZklhKEjwf73IP
PEE+Dd/y7uCdMrKnaOngUa3dSenccbEr+5qJq2PWzBgddYwI2/ts79rCXNzl
Utaj0raj5Ee1pObbKshE+6F75tZ0PEJOvFw11tskE1su1g4N6edGXjrPdyh7
ZcEeT0XfjEYTDpaSJ89chJL+h0mTEblPbgXIxczmDbZ3O3CWnb+dfJt9Y5D9
GXb+tvnxqiP5jT3Z+VtsSu1K6gYe7PytNC5kiGHXKfJrT82lMeY6see51KZv
Y0+SP0uSri9epBP93G98cap5knyuHDwqLLX8/OJpk/35B06w18+lidOm7B3k
xY7f6heHS/KWnyAN9xyMjx+gF1tUP+l4IN+dvZ7kVf70k3ufld5vVJzZbOof
Z9nxW2Z/IKtxnDtJqHmtpqevXlx++sbPwInu7PVG/z1CmxenLIixFa/aj3ia
t/MMO567Tu/drqbsDDueT5yufbunjXv5ecvAWy3qCmJRywqetaOPs9en/7gp
oaM3erLj+Sa3VE01uSc7nmtOuM245X6cbLrr6bllnyD6yoYVzBGPs9fv8dKB
iTIXD3Y8371q7szzVTzY8dz20SChq9VxMl894MLZEkG0q7Jg/iC/Y+z1XWNj
Q4vx406z43nM+dH3n685RjJtajbZP8sg9s9UbtrY9hh7fS+tf3Ltn7lHyZhL
3wYNfmEQv+T0ahLhc5S9fruvfUKEyxfZ+/Xfxz8vonPe1/vmzQfErfvVQmHY
WdLdNDM9LKSA1Agzv9kh0JOsS6rwq/erItJMZXWpxlQPsqxZs3lj3hSz+Qua
lIQecsonLkkHGg94dpG9v9A7iIdrPz3P3l8IsY0/L1KfY+8vPJuMH6Hp60Wm
Vhvdt4dKJTrPDVv7y+0scfq10W52tkqcdmxDT2POGfIydfYj80Qrsds9jxp3
R58hl9bGlrYNUIvD1sdWuxrsSS4/f/d3XQ9rcavtvGzzdp4k3PnMu0+bNOK3
xY++6697EMdTO1ufm06v3+NFeqyM9kgPVYqytztC+7fwIM3mVFo4p49WbPum
Yc7RfpfY8fdmz2nj+809TWYk7VTY17cVtce2ruw7/CI7/jqP3ppdOucCO94+
/rQuvcb+8+x86OqltDf9H51j5z86T8G/3y8v6f22eeiLTnUuseNPdsd+N3qE
XSLf17ZrOPy+37/OJbI9Q6m4eNeP9JtY7ZPc8SKpF7BY1/BnDqk95uTKDZPO
kQGq506OW/NYf8jul4f3qHPIpW9heRXbe7P3g0OruNQ61OMKez/42mvWT//2
l8gSc/cX53paiG8bdrN9q7tITiw55TShm1w0vplqXdX8Atk0zvKQR1tLceBK
x64H5edJ4ZAmQRkNFeKCO0cm5Pxxjmhvfbu+sQr9/YBL5Grd+WdG/ZCJilGl
GUs6e7P91L7LX8fNk6+y/fNhqnxoyv4rbL887vGkMHLiZbY/ep+rMsemwiXy
6q5bUINEndj48rzeSreL7Pji0d3GtdLqi2Ro4zOOl8qPJw4rc1tN015kx5Oy
h/dTjW8vkOMyR5Wfv14c8e62Ubb7AjtehL8nZuajLxCTeclnx2aCWN1sxGtP
6wvw/f5LpOLNi7HTnXVi1pv+Lis03ux4sP5XXXlRj2vS9+NktvMr//N675w/
58QpQXR/O3qcefnrgR4PYkY+y2i34So7HqxTB8YeDbnCjgcxlqm14nudJ+NO
dOm80dYgDvh5wuVDpfPseDDydJTjMe0Vdjw42n993cBJl9n+d/GPhgEZwedI
P/3GtTYbDWK88mbPmmfPseNDc9fK/Q/7XmL736sli8/87HWO3In9+GRAtkEs
Um8bt7LVOXa86BjhGRx+6Tqp0Uc9zz7D59/PR7xJrR+mLYNf+pD64y7MU7td
IwNm313badNXNt58d9U5KUO/kKTAFV9Mtt6k7qyUh4OrmIlTO0e9a9LjKllz
42bg3PL97q65bk1G/g3284vWU4uXhJ6+TGz7HfFZ1I1+nuJN9FkLz7j99Ys8
9v7bRe57k+1PsfWrfkoOucHO/wa1d+k8JvI6O9/Ltt/jk/3tGgk3urVcWVMj
uq7rG+JtcY2UHK44SKG3EQcsn3pvWt2rpIt8UdxrM624eUL6zUqDr5Ag+9kb
GnzXikvalvb/vuEyiTly9IQs1VY83Ln74Qb+l8iLnYFDwqfp2OM7Mq/VT/+x
1uL1Khmfzv11k+13jvfvD8j8coPtZweivBP+nHOD7WdxOzSKFwnX2f7kF3em
06xMb7Y/zam5eu2Ty7eI/0FldmGtW/9eX/ommR4dc/aKTqp/Ptzo07zNRxKW
NHpe/tGb5MuDYRbRM0tI5wndGo1ueYNMON8p7Ombn+Tux5lXS0fcZj9PovPV
nWbmLH9dTAa3sq0/UebDzg8uHK0wZELULXZ+0OLploXFY2+SeVV0DpHNVGJ1
94zXj7xvkG+HH26MaGElHjXOz5itvUHkzZbMv9VcLZ6Mitjl+9WbqJyHrX7V
mF4v+iYxpTa2iB6nFGsZPfc80vmw46f35qiid+Nvs+PnqsjFbf7wvsWOn/Pr
BucusbrFjp+H6zk3PX3iJsvX9TevH9/ef5M4hHlv+pkiiI/9RxUv632T5Yeu
39Fs5uiNywSxxtY6QmST8nH3xn0aDjeIv+ZenrLx2w2Wl7WRuyvvqOYjnS8e
yM2LuHibHa8Hd/HQlkXcIHWdqvu8DDOIdn/e9T1z/AbLz+Ko2UuaL7pDrOcO
KTpc/u/ye//xIT9v1w/3K7rO6stX0o9sq/aOtGkfGzbV/Tb5enmX7vruInJq
V2jskWW+7OeDtH9v/r7HBfMLSZ5dnPmZrNvkQqrnwZbFcvFh+34L9MW+bH8d
6BZYnq9bxCp4VKdGhvL333MzW5lm3GHng3vG+sblGW6ROnG9Bu3/k15fz4dE
bDxVKXq8XOxm1uj6tyO+7His2bbyeb2bd9j+qHYbv7VJog/bDxst3HIkWOVD
pn/8Mq5L+fHSWDDgUNG622TBktKGw/N0YokudMWojrfZ8TvdI+q0Y9Et0nvB
wgpHF+nF+V+fBH57eosdvxt/aDV648pbxNts3cNan/Sia/hgn+mTb7HjN328
w11uuQ+poBMbvllVTVlykygaBlUsniaI6Qn3tmwrusmO55eefi89EO3LjtdJ
LreHmTr6suNx6fXhunqX7rDj8WZZd6s71e+w4+3K9Q/jHdx82PG2ZViXT8YG
fsR+y6jbCzKu/nv9kbskpWt0pe0BUr1+V/3D+25nkKYTd2o93/iSsWOr72r+
Po/8mhRXJ7v0LpH1Xx3/wiKD9WsPn6x/JjCP/DX8V/1UR19SP/Ze9NsTMtE0
M8AmQnGHdNpW9WC/eAvxxM+6f89I8GPnV3T+tE5eM/UKmXilaEqnnCt+bL9N
mbfmetThu2y/nX8pqVejAF+iHRRVpc07jbg7N6fFt7I75FbLOKc6X23EXV0t
MicMvEOuu108OOFH+flR6LNij5M+pOIqyz/q5dPrhdwluRPT/rq1RiP6DVn5
7PnOe+z4tvlyM5fcZ37s+LalleZuQDU/dnzLGehUdmLRXbaflraNHOyUdJ/s
sx1ZM2vQZXaeujxp2r4X9aW6Vdgb7ZYnRrLZ88/8zpH34XOZe2RzjwRrx+M/
SMte1++N+HWXxCjDfsgGm4vJHd1uKc392fkp7Z/4MnKdY0Mz0b/Tp/V3Nt8j
+2dlv1nsYSXWXRjgNbeRP9tPTlftdfrHFj/yeIGna0r5+Wfi1DnntybdY+c3
1Wbduu/iepeULH31MSye/n7jPWJsUOAausNKfP/WyXa2EMCOX1s+bV3Qt5U/
2y92uUTd/jb2PtsvAs7HXeyy9B47HlHP90lSdJmzQbzf/fHZ/nPukehwmfin
p0EcF9Z4Sh2THzv+bDS8eZO2KZA4GWODdM0u/vv97AByxbPl5dVKqe7t1Pj2
0vmvSa1XnaaNbhFIDj8a/U23OI2NW3frfH1TcjYpefHzvLr6fbLZ0dMh+dov
kvO6uPVGt0B2Pkn7V2VsW32/10+ypVfvsc8VAeTj5bm9X3dTitv/Wh3czO8+
Cdk+ZmP3ZeXvB0c6BGe2fcD28we31flDjwXA98sDSPeqk5rPrKkUG9b0PfqX
8IDtDzXjt/bpqQlk+0OcmN7xkKc/Oz7YxTbtnb3an2TOePiqZVVBdOsv9l+g
82fHg47vW43f+Og+iTe782B2+fmaxa52Y8im+2w/oev72I7+vOeMXlxpsefX
a9v75NKIPo5+tQyis1y4+aLgHttfFmzY8/5T+f8P3S/2n19b0H17INsvllYc
lrHILoiEV6rYrcbs8/+eLz0g3Z+8vz+9l1S/fVPb/a9nr0i1uW5hxuNB8H2c
B+Tk5MDPm8O+kS6zF15fND6Q9JwRfNRoU0oOXu/jfsUxCL5v84D47gtYdtmv
mHRyvfX3F69AkjH9ysBL3y3FDe/mvvnTPIjt76zf2KHyqOqW4uqTA3scbh7E
ju/asfNTzjd5yPbr2d12tJlh+YC4Z9Wf5rhJJ965f6fayGqBZEHb6ieb2pSf
f586eWJhWgA73i9Qenw1dQkgiWWvf3i46cVHR3UOzToEwPc9HpC8mEurH1XR
ierxXY596BbEjsfDp3+pXnjjITseO793rv360wN2PG78qeHVOzOCSaf2s9/P
+ej17/2egkhHU9jigFCpvtiuZb+zu5PJxMk7OrpcCCKFn+rcUm9PZuMrftao
W2/QF1YfjtUlPz9QROx/rBo49cBDcn1greuFO+TizNrnT/+0CGbnS7S/3Y9K
sZFzLMS1B/5U+mwOZvvnt+HtfJ3igtj+qfxz+4dKuiBiNfqP1MBHWnHK+31z
z5k9JO6e9h9nZNH7LQWRPa1/7r510kZ8srvm6PB9wex46V530p7FlYPZftZk
6pq/K54PYvvZ73/3EHIhvKWp8jWDeHXK/sxTdx6RBoGLlzQ9ffbf879gMqpJ
Yn+PtWfJHoeCq5U6B5Ndu8vaNRn9mY3L4vpoB95MJEeiO845MfcR6dGiUv36
NRLZ+PynBU2mNf3E6sLZHdze+xWQoQ1ChmwY9Iid3xtnTDf1UAWTb8n3nRbn
yUTXK5PbJjR6xM5H6Pw7206cCskzF9dtXVyxcYUQtn+tGpb4KMIxmHz0mF85
YZxGbOu9sahW70dsPztzOG3w4PLnc82m0dcXHaH3GwkmV00HnfbPsBYvXxxi
26paCNufmi92qFp64BHbn8ZNaexw1vqR9H31C6RssTyU1C0RV+3++wyh/57G
FydP/TlZqlsEd22j1L4kDX2r5reuGkri1Laxx/UJbDysbfea4tiPrH4wTPN1
Y818kumxdV/b9qFk+vbI1hWFD6TsaP/qYcZHpMWCDcXDzMzFWZsKugetDmHn
c3R+x3y/U2E3yverEfvzxluHkHczHgZtvGUlWlZJ3JFa+xGpV5C+v6veWny6
cd3aSqUhbH+i86fs+dl0r7OVmNfgxW7foaFs//EOjRyTfCuE7T8d3o881e7T
I7affBjwo97kEY/JtJRdHpO3e/57PhpKiuVH2teaJdUJf7k/P3EknqzauNVp
b+BjcmHd9KYd7V+w8Qsdr2/f5fee1X3GJRiM93KJNn9pN6ugUPb+5ESZ1aht
Zo/Z+Q3tD5/h/XNp019kfWzjhfkNQsl69Y9ZL9qoxCYjwo5NLQpl+zXt/8vS
w3FVhFJMaro0sf+Vx2y/OO125etgUyjbjyNH10zfvSKU7Q9vl5y5bbMslLS3
urwlabYgaoqtGza2DWX7w6B+fT8PfB1CvnS9FuH/UxBTSpxnml8OYfsBXf9L
dE5hsymCOLuf8vPnwSFkwMgGRnLAIFZumt3xa58Qtr/X3LGpj+vpMHJ/VNvA
hZc9/r1e6mNyJ0kZP3C3VOuXfTdr0/cFObSiWdMKL+m/zws2Pqehtmml4e9Y
nVAQub/y+h+kV/0VX6asDCMXvl/46XDmLdk+qHnq7PAwdj5E+/1eLL8wsuNP
8rbe8Pxt+x6TH/2vnR+0TSEeT29Yd6U2jO3PtN8jv2a8i71CnLC1Qe1qC8LY
/tx+542Az2Mfs+N7B0fZ5YE1H5N3l/roT0fpRfXGt30d3oey/Zp6jk6pp1Z2
1YufGqz0qvgsjO2n/gElaTcGh7H9VPsgcEXTL+HEvt2QGJ/I0/+e/4aTlsUV
9+3fJ9VXj6qE1ObPyc1tHSue6RNO8kIHFXZRP2fjh4m5tpbNW1ZXevu4775p
OeSKJvKmS2E4e/9Fx4N3RZ+/uaaEtJhVfKtjr3B2/kLHz7f237uo/P3Yx6Fp
R5pUesL2z/bm97SPO4Wz/XNSl7AqQRfCiOZClwPNturETj86Dv8W/5gMaXtq
24pmerFvl4xuGdGP4fp64WRZ32WPN3bUibbKM/66j+FsP1zSasTyjmPD2X7o
HjKmT4+OESQ8PWPU8Xmn/r1+1RNy+myU89+tpLo0u61vYeu48n3Sb4/OOZwY
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
zw4mbLCXi9s2Lpi7ZJV0PZ8l2ppfAnulk3P1p2iitu4lQe3M2yuDXpNRZu0L
+szwY9cTGpa2O8VlyF5Wl6zu3PntdD/SxNmpaEmb12RyyqRxplbS9ZH61P5T
mOjwlNWH/njcc1D5eX/PZvNbVp2QTrx6jZNfOy5dv6lp0OHd71QZRLnT9lGI
PJ1sWtqqY4OTL4l3Z8/16vL/3w/bFE4byvJZ/zbt5yrzPD4Tm3PmVqd/via7
DoWevpn0ho0HTz57L8hN6u+09GXE6BcWorzJ41+fPqSTos67BohV9hLrtD69
K85KJ0P+qjB669u77Howy5sddbF+68LqpVeO+v7MvEv6Xvj0roplOrGsE/cx
3f4zG3ea4Cs/Xv7/Y33qxXy103+vt+PX7EPawkEvWV1j8JMmww+/IaFLxjrt
9ksn+4IfuAT/TCBdFl4YfKl9OvE4rcvZ3Tif9Rsi706s+f0TkXfw+f5HQDr5
8mX18M0j37Dx2tP9U4da55Pi/dsvr9Kkk+Y5XYfHuFmIB7+4Tx15/r/X0/lj
1KVZEZMsxOTkyk9uukvXr6Hvs3qun1R52zoX9r5r9HjPnzVn3yXTfO/WDUtI
J1etLD7cn/+JjWcrd7Y5qZaul9K8e5X4X/7SfYFjhqUEvK37htWvL41eZS5K
88VHmlYbd0jXL3k29l3m9RyZ+P8APjDXEA==
          "], {{{}, {}, {}, {
             EdgeForm[], 
             RGBColor[
             0.9942516773976509, 0.8556291934941271, 0.5821801999327176], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF00ts1UUUx/GhCpRLqS+0VR6KgNCWPihtrwWBoiIUeRZBUHm0tKBFC8gr
IAkklMjDRHkJ1MgCd7pR2cgKFyqvQnSpO2GDa2oEFPQz+U9icn/3e86ZOWfm
zMx/VNuGlq6CEMJmeiCyKIQ1D4awD/P8/sQN03MhlGIHNtGT7LX4Nr5DDVRY
HMLKQSEMw1eMPS32bi4by6c6s/mjsAtn0TPs9/D5tFacd3NICLcLQ7iD9SFb
I9Z42bwR2Ikv0fC4Ns6kkez1+CINizk4g55ir8OTat0ZGMJXOIHPDBV4XZ8X
Lfwn9tHf7EHmnGH/Y8Pf4M90XPwGnqc29i/YRJcd2mL8mqrFv8cBqZfY0zW6
SqFfCO3GatTcglXW1mKozGXnl089thi7p2YH/mofP5r0B3bzP5V7BA/TJfYX
Rdmd1afcyHXpvKapW4LteEn+EXV+w/n8ceJbctn8ePd16e4LUo26ZNtyuC2n
wp3m3OkcOaPFNmINCYdqbKZn2RtwAY1nb8WFVMbelsvqN6Q3MI//XHxrOJfG
st/Ht9I7eANfT3aMtVAFewcuonL2dqzU/wmFZ+B4+/vBhhpxsrHHzFmNE8kv
LPZXR9oJS3ESSQtL4jmQtLAc8/Qwe0V8t/QQ+824F3qEvRK/U2SV87yMtfzB
4q/FXEX+sodmbOQ/Kr4Kp9BQdit+Gd+f3HP4Av9x8TacSk+w18RvS/5hdcqL
/7+PeK+Fcqo8rlJ81bwxYpvSNxjHe6hEU+3OpKooi3+Wvs+P4p3hIfwkngv7
Y9wTz5G9G49RLftoPCdNTfIA8jhArYlqluIBa//k4zmFt4zd91AGiu+XUy33
w/ieja02Zyf25bJv4FYu28vV9E1086twL/6uzhV1+rBMzjE9TsYSamWXD8l6
6Un97JIzAT/AK3JOyr2Oy8yrtG4nzqa7cpdjg7G1elkQ58a7l3sCO/m94gew
0bwL5jfjfv6/4qcHZ+v1pH3vMHZU/YP4rbEO6/biqfQN9+D86MtdjxdT7/EM
PufXmn8W/wNNF5Bn
                "]], 
               PolygonBox[CompressedData["
1:eJwtlElsjlEUhg+ttu7/fzVrqXmsaktbVM2z1tDSmoVW1VQzRQwJCWJMzLSE
BTs2hg0rFmYiLNlhw7rEPDzHK/mfP0/O/e655557v6979frydU3NrAoSISsy
W5Jkdhr64RmpZoubm52ADvgdYtkpZpVwG89K1dh9yMTTieUmKUcafj6YrSLv
BXiEP4009yQ8wUvgEc9+h2J8WKS1PVaEz480lpNsNs9rI0dbcrWBYfilmNmf
Jmb5bOIiXkmsNWOtYCi+HDrg6TAaXxw01hIK8QrgZ5RvA4Nq9FpfwGN8FpD2
3zN5/O2ghipqOQXb8VpinRnrBOPxFdDRtOYY33vQWAaMw1dDF9OcCfjKoDGf
MxavCtqb76EInw1xUw35+KKg2lvAELwG0vD2MBJvDKrd6Ekqk2oj9c5rXoUX
peqsvkAhPofnCf9bowCvhnamHg/HlwX1ztcYhS8MWpupNhhfAEO9lzAPnx80
5jkH4UuDavOcI/BjkOe9hqP4RuiF94Qp+DbIwvvBDPwkhZ3lYj6BE/h+WJqo
2D68DgYmKrYZX8ec7sztBpPxscTOJXDvYAxeSE8K6M1yGIKnE8tjrAbS8E/E
nnGXfkMjnkMOrqrRPsvGk+Ma8zlJ+BpiXU1nOjGo5957XyPCn8Mynq+HZ+7M
+ZWgmmvwV1DdzOwMvMTvwYBmit3Fb8V0tz3HTTw3rlp9Tzl4RVx785zl+Pu4
cj2Gd/jnuPwHfMKvxNXLn3AZL4upFw1Qit+Ia8xruI6vjmnsOdTigcPt31zf
hBT8Xez/3uAt/ibSu/0AXuPX4FuyvhlX8UMx5fJ39iCeRc+STHdoLr4h6C70
gBJ8E/Q23ZGp+GboY4pNwwcEvbt+Rrn4duhvukMz8S2QifeFUnxt0N3wM5uE
1wWNec7pPjforL0mr20nZJtyluO7IccU2xV05/3u+zeuAV8fVLvfwWKvLVLv
/ZuYgjfAw2T1pB4/4Hvw2mEfvjfIfY09+OFI3xqfc8idWL7pHTqObw16V3yP
Zfg5KDA9cxr/xpyvKTqzr/iRoHfP1zyIf4x0Vv7MB/wvXz6e7g==
                "]]}]}, {
            
             EdgeForm[], 
             RGBColor[
             0.2637144598267028, 0.3942858110148349, 0.648367509996436], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
PV8=
                "]], 
               PolygonBox[CompressedData["
1:eJwtllmYjmUYx59BzDzf+7WdWOqksxjG0mSMLVsYYx1ZisSYZmIsFSVrlHVQ
kWHsIiVLiZSlEtdVYcbeQdRJ6LpaDg2iRb//dd8Hv+v7vc/7vM96P/fzPVI8
uWhSnRDCfqgHJTGEAn77QGd8AgzCi6AnPh4G4AOhBz4x2rvB0Asvj/ZO3zyJ
Pwvd8O6Qh7eEDnhHaIUfhDH4aPgCHwKd8SfgMXwEdA3WRlt8aLR3XSAXnwxP
4UOgAH862jt987jeQadgbbbBr0NGRghnea7F18DzeClU4c9ojng5jMS/hhJ8
LHyFvx3NVfYOXgy98N6ak95Fc61hJ/w56KG1gPxobartfBimvqOtdaHmjC9M
KGMjqmAR/gJl/XjXX2uA70+xLtow2Iifp2wej3PhE/xsNH8d9uBnovkc2IWv
9/3RHr6GV6gN1qMe7S3DN6Ws7dOULcaXpMzXwXh8S8rqtoXP8CuwFi+FavwM
jMPXw1V8g8eP+pwR7Rt9qzoH8MEwkbY3wwS8JmVtaY778FqV1bE+fsHLUzaW
MuiPb/T4Ux+z8c0eD4rHefgHMAwfCgvxHTA8WNkSfKdiJlhZBf5ttFhQTBzH
T8IMfDpswZdqzz0eluHvenyo/ip8kcez6izW2isGPL7n4utgQ7AYWxutTbW9
C87hm6KNXXOag78XLbY1pzei7Zn2Tnv+Pj4TRgXrYxa+Ldpc9c0C/Db8iEfW
6wHW6z64FKxM725F63sn/IBnR4vN9tAc/z0dwneZzBMu4bdFppX9hv/h71X2
J566l74gE7Lgp7R9qzo/45f9eTScxFsR42V1WQvohrfjmzwogD6QDc3gUWgK
p9L2bQs4iFf7s9qsSVsd1c2H9tAi2lyUc3KileV7H+rrcNraUhtH8Icpewga
QxOnsY8h2+eU6XVUtyPr2SHDYnggfj9cDrbGd+ivXcrWPgsexPMgN8NyUBq/
QZ2PqLsDLuA3o+2Fyi5GK9M7tfkXfkp7HiwmtyoWUnYW1GZbjYU5VNYP4QR0
xBuzprl1bY2b4JNSdtZ05nX2NSaNTXPIx2/qDHPWMqh/C99NG3ca2BrtSduZ
1tlWnWt4ZmJ11UcWPi5arlKMdserYVawMW/HT0fLRbM1R/wa36y+h1iAX/Fj
0AofC8fx84m5yo7i26Ga3Pgv7MM/TcxPwVb8RmJtqc0r+AX/Xs8X8aven8rO
4asSy7VqsxLPUf5lLm2gId5V7+taWQs8izX4x8dbq7rwH++qoQgfnJjrmy74
tsTGtgZWJBbjivUa6J7YHDR+zW8//o3PX2V78Tej5Q7llPnKFbpTg535Inya
7pRgZYPwV3VnBisbiL/o+UM5oY9yW7S7pq/uULwsmuuO6YpP8vyjfNNbuTSx
sd6FofhLnl+UPwvxKZ5PlUP7aazR7rqeyiHKhdFcd2QH/GXPx/qmb7Q7WHex
cuIJ/BXdwcHmMACf6vlZZf01tmj/HXSnt8aP+f2tHHwUX5nYWpfAfHxBYt4a
puAN4G4du1OuE7+NEttrldXHC9J2dnSG8vFsKPbn5nihv/8b+uKf+/4o/x7Q
/ez5WPtRqfvO87/KVuP7fP+0PyvxmmhnQWfkQ/zLaHeL7o8jmnva+lKfvfHD
fv8oHg7hH/t+a33ewnf7+mnNluN7PT5UZ4XiQ/OtZ/8xpuHtPV9ojk3x6PHd
kucUPhPGcP5XwSy8Im2usul4OeT48wT8kOdT5Yyd+NTE1l5npAQvTSyWNIYy
/KafV/V5C5/h/anNcfg6+L6Btbce3+X5SGVVym9pG6vG3wRv5vulsob4eB+f
1nA4PsLXU2Uj8bXevua0BG/k7Wk8mfhSn6/qLMNHRfsvq/907fD/AVpRZGQ=

                "]], 
               PolygonBox[{{3578, 2297, 3576, 3594, 3595}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4704530999116978, 0.4690410255280727, 0.5425131936621329], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
YCL8GGMMGeO8ZpvrC8be/wImnpvP
                "]], 
               PolygonBox[CompressedData["
1:eJwtlleMVlUUhc/MMANz7r2DRkAZQeOjUVqIEQXEROVBibFgSexIkCAM8UE0
KCSigJRBBIaOgFSV3nsVlDoCKijFxlAl6APFofmtrPuw8n+n7bvPPvvs89/V
pfczFYUhhJmoDhqThjAB6IYGwwuyEK7UDaF5vRAWwhtiCGOZNw5thNslIVQU
8IsegCcz5/u6XjMF7oe6wFWoP7yKOe34oD5aDe9LzNNQDdyWOWNLQngT3Qun
6HpxCK1oZ/BBfOpGezw6Af8d7Yt8Og1fxEY1tiaj43Bz1nRl7TjUEu7OmkL2
dh/qAQ9KvdfW6D24nsaLbOMS699PPbc76guv4hujFSe0Gq5lzgHmFrMmMn6G
b3xHrMagI/Bx+sbha1d0AD6ceewNtBt+Au0o8Z7bwesyx1rjG+Chqb89EY1N
HSPFSt+8ALfPvLedqANcmTnWOoMRcJ/Ue9PhvgXPYE0s9BmsgBszpyVrr+Ff
Ai9hT58xfSSqgpdG8+eKMbwAVcIj1Ad/jYbBw1ElvCh6TDZGwdPRYPhTNBCe
i4YGrxkKF+LDRngDOkl7J5oPL0Cz4BnRa4egQfAONC94zpdwHdZvCrZxhvbE
PP8Ug+Hw7Oi1+uYQrY25r9oDfDB6b9rjVnhTvv/N6A+4FTHrwdlOQa3havqW
MLYULYT3osXBffPhf9EEeDz6R/mIjsBH0Y/wBXQ4uO8AfCl67Bj6SbHMz093
5kP4EH2j8vh/C/+cn4d8lK+H83zUnF/gX9EqxQIVEZurtFcH92nsGloT3HcU
3hUd64VoDnwTa1Lucoau0D6X53MtOg8PY3wOY7PRO/BL9F0tcQ53gp/MnIvq
ewXelTmXldNr4b2J72YPtAd+Dr1bYJu94Ul8cwC+fIz6wk3KQnitlFqASuFn
mNORuY+hhxPbkK370XJ4TX5/VH/mw08nnvso6gBPRcXM3U97OHw++qxUQ85F
n4HOQjn2Q/QetddDqBJ+HB8u48s21AbeHR27Regr+AZaB69Ff8L1WZMUOKa1
tK9Hj+kMjsF7otcqh76BCxLfhfXoBO2QmGXzL9oViX2fhnrCvVCfAsdQsTya
1xed2TF4ZGLfdeenq17g8/ZS76ETfC3z2TajfQN+NrFt1fSn4M15fVWMtsDL
8vuifFsOb8vjp5zfDvfCRos8fytkO/PZ6RtX4CaZa7lq8h3wb9G1VDl8BL4n
c+1XTSqHG6v+Frkml8Kd0R54InoEbpmau6MWqWuwanEblMIv6M4Wuea/mNqH
2jw+Z+FuqWujbD6fOmeVu9rDq5ltyrZ8KIc3o1bUyuusWQrfopgW+IxvVq7I
P9Vb5syFt6r+FvvN2gYvVgyDc3wmHDPX3p3oEuOzUtvejWbCy1Lbko2Vqd8A
vQX6xni4aeq9qkapVv2HdhX7zaxNbUO29KZXwRdTf0tvUk3qN1RvqdacTH3n
dfdVoy7D+1O/XdrzFnha4rumO6S71Cbx268YKBZZmXPpdVQfbk/frYw1Qk0S
30HdReVsZ/jtPF8U85fhpmVeOxrdCbdNvLYhuh1+MDE3QOXwvPz/iWr+JL23
+FyVv8+/6y7mbf0/WK/al+eb+tbCp/L/M2rXwCvyeqt8XKl8xIdRpa5B5fC+
6NqvM9RZfpD/v9EeesJT6RsU/OYNgCdH17JPUD+4IT6f1N1GdeEp0WMDUX+4
EX2ngufUgxsknlujNFAs0engOaWKR5lrkXy8G74tce3XnAiXJH7L9EaexX7H
1G+Z7oTuxhfR35bPH0XHVLFVjX0Iblbms1DNaFFmH+SLzrSx6m9e31VzquH/
AbdUe6I=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6796814937688003, 0.5425717709730609, 0.4195163103723346], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNWGtwVeUVPffekJDznXMB+5JXIDwstpVHeBUxCQ1WLRAQCoPWwbbQFhsL
QYThIaDYf+1obW3BFCFCACk+QKajdaYPW7CIIAmIRpSH2Iq0aMFWkUBCulbX
cuiPPeuc8z32/vZee+/v3tKZtVPmZqMo2peJohywGngfZCJkQj6KWoqjqBz4
hxBF12NiE3Abxt6BbIc8BXkb8rTlREbjHTDvSuBngfOw7i5IBaQI713x/XPA
D6CvN57/BbwL74fx/FPgmTSKXuqIceD7GOuV0dzTkJKMvnXEvG54/jzwLOZd
xPxLwFLY+kvYPBDYVhRFrZBBGNuW6vlp4CHY8Rpkg/F1SIOxGbIRMgtrfgVZ
BWmFvpcheyBPQudxnzuG7h7AK4FPAI9lND4f6++GjMnKBuofDOkFm74L23rm
Nb4A8jXIVqw5mtEe/LYQUmWfca9KyDTo2ILxOcDfAI9ktG4M9rqAPavzsrEN
shfSJat4XQFJbUs+qxgxPssy+s5vb+F5M/Bx23SPY8k5M6BvJXAecB/2vQRp
h9Taf4ztPuvk2GKfYwlkPdYEjD/kPe6HTMroW5JVvJ+yrnusj7YtN273c631
lEM6gqTFOcWK595dLI4usj+on37imeinxqD1vwMutT7qegayA3Kv9fB9RUb+
YEw6QTpDxmblS/LiDcgm++hxx+kqrPki5KNIa6q8jvHd7LkDMH415Fx0mXMN
js1nssqfT/UdtR3P2LYnzKkl9h19eLPzc6W/Pelz8Xwvm/PkXd7nOGI/bvfe
W73vYu/1Y8hk+4tji6x7h2vBRp97vn1w2GerNSfJzcqgdZOBDziXmdPfcFzH
Oc9LgWeANzkOHL/RtvPbfyL5lP4cb3sneE0f4NlI77Sv2ufiHM6tCNqrW9C8
vnj+MJL0w/O/gWOCzj0lyN+M7THbt9z7JM651Ofe7HgG1zCOM9danW8fY6/1
+PZukN3kw8eR/NbsPdpdo9pSjQ/wnIveh7VlnPWzbjZi3kzMfyW9XJu4X/+M
/EM/sUbNdJ2i/kPOyS7mFutUg9exlhQib4pymhcner8Q9I15RV6+6dz5NIeO
mBf0XX/rXQub9oBfj6bi2x5zjnOPmkMPB/WIDUH+O+yc4Tlf8rnX295a+47v
B4Ji1d86ud8x83WT+cf9yIW+5sMG5xNrxGM4x3rI3Jz4usmxW+I8Ic/YQ9hT
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
TQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwtlmlslUUUhudyoYU739R9pYCVXaWFQkhcisgiuKcVFEWJggtIpAZF0bih
f1wCIipCUEzVAPpDkRiQhGhUEASEShCtCgoqoOwuEQqlPq9vf7zpc883y5kz
55xp2djamkmtQgizUWt0NAthQ5sQckUhNMEhhnCAPwfRzkIIz2CbwMD+6BH4
DL63z4VQigrwamz9mT8ebYEXYDuZDYag5fCj2C5k7kT0LHyMNfew9l60FW4q
mPehbfBSxuTbeM3l8HfYVvJtFWqA22u9fAhFKMu8p/aehxrgpsSZ2oawBh2A
66N9GYxWwLtZYw1rfYl+h6tKQjjSjnOgS+Cpmc+aR/fAy5hzSiufSWfbz5y/
mfsZ2g6XM+fllvl94BJUDt+OToK3FDz2cwn+Fa0O9uE3+ABaC69TzOHdmc+i
O9kDN0afdTP7H4brOdM4zjYbbYI/Qb3b2vYpfC5jGlnrCCqDt2J7hW9j0Ub4
I2y1rFWFlsJfJX+rQB/DrbAdYu6f6A/82czvKYxdiHbC3+LTXHy7G30D98LW
xNhj6Dz4eMF3uR/tgHPRuaQ1d/G7iN9/BcdQsZzHGvOJdT1aCA8ocSwb0cAS
2/RNOfEu3DraN62xR/eHz3PI3TtRbzhDzYxdjxoZf2JybvdFHeDR2DYrf1hz
Arw7+mwN6AgcUYecczQPj8+cC/XMGQUfb8kv3XHAvyrGXMH4K1EHuDzZl0rU
MXlP7X0XKoMPFXzX6xVj+Bps64p8hkuTY6rY9kOr4KGoLm+fR8LvMeZYMfmL
XodLk/fSmRNcjQ8P4ctUNBB+A9taxjahOsUH27/s3ZPv3eAzo2tZZ9bZT5UN
PgsVw6ejs3Ou+XbwadHfZGsLX545NvPREPhibMNzjkkpfDMaCY9AV8MXoWE5
j2kPz8SnV4vt4yw4tdSPYtzM7wcZs5ixO9CL8N6Ca1c1sw+ejO0pvk1Dt8Kv
JcdmNpoBVyTHfq7uBO6Hj7V5x1Sxlc/yfSLqCz/PGg2s9T26H74MPZyzzwPg
B9DTOe85Bh6FrodrlAPwLehJeAmaAg9I3ns9GgS/FV17EdXBHdHh4DvR3dRE
35321N7nRNeyxnSCb4zeq1oxhm+Kjq18uAq+Fy2C30E3wF3Q0eCe0Dm6x6m+
1LMq4DejY7sdzYKfwMc7in0n05LX0FrKqRHRPVy9XDX7Erw4ObfUg5bAL0Sf
/QPNUS1ljq16tnp3R1SV9x1Uwn3UM4J7SDncDzUH2yrVbwrunXoDVooz10YO
Lctcc6q9/3MW/jDztw34twh+Tv20td8wvWV6A/QWqKdtUmwz9wr1tF1wc8G9
S2/gLwX3CPUKvWFT4JnRd6ccmQ7PiD6rclS5uiK5l6pG34d/KPjt+gL9qN6Y
/DapJ2+Dtyf3ctn2J9+B7kJvztvwfdG5rZxSbl2XnEvNqBruGd17dcdddf96
D1TvfB8D35Y8thLb2OQ9tJfq6yD8U8G+6U36GS7hjDHvOyrVfZX4LVO+lMHT
k2trHHocHsyeXfGtC+ohX6J7qdaIup+W+arpE+Bh0b2nB+qt/hHN3VEFPDSa
u6ELot88vX116B/462jWG7YRvjb5rOqh6qXdsXXOuecMhwdF+yabvvVqea/l
Uyd4cnJslPPKfdW8al81VKv/HaJ90RnPj6451Z56wGj4seRYKOaT4AWZc085
Nwf+D6c8RRM=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.8889098876259031, 0.6161025164180489, 0.29651942708253626`], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
LQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwtlllslUUYhuec9nTJ/P8BDV6JQkWNCl05xIQLVBAhKLgkii2i2EVcUJGw
iMgWi5KYKKWFFmhSRYyIJhIFDBIoJEQlxiC1NREvlIiKuMcbTUv1efNy8SZP
5v/OzDffNqei8el7nsqGEDaiYnQ4hrCChenoINyWhrC9NITPUQdclQ9hS3kI
jagC/pa1zrIQmlEf/BG/uYLfjkbvwOtRRyaEdrQWvh9tgF9Et8Od6Bh8VGvw
1mjuRRvgEexZXBLCjehy+IvUZ9WiY/B5bN7jrDPoAvwTWguvQV/BX6I58GzU
C89FrRn7MCvaRrZ70c/wvCSEUgIxUBRCPdzO2mV8+x77Nvh51hbxfTJaCW+J
9vUIaoW/w6cufPsMnYV3YHMK2x60Dd6NzW3sNwrtgvdhE7CtQ0d1P9aWZ50D
5WJNdOw2o9Xwzujfyif5Np89T+Nrwv5PwGPJSRO52YrGwdXsuZDYFVBF6jN0
Vgs6Dp9KzfK5X7FFWXJdQM/Ahzjjyqxz+m50DBVLxXgAnqk7FdmHBvhSCb4V
jYFHpj47i/JwReJvy9EkuCM6dofRC/BfqWM3jP6GP8HmsRz5R8cT28j2D9QF
j01dG4+jSvgMOlHmmlRtLlB8Vb98vxtejCaWeq0RHkmMasods1FwP3vuzjoH
fXCeM6covijCDay9xNkb0Wy4OG9ftYf2+gabJ/G1B52Hz6HunO/wNTyITua8
9gv8MZqc82/64d7UtT2Mf+/D/7HWl3MPqBcmcuYDnH0DuhauRTVwLaqDV8tf
amExehke5jdDZY7Jn3BN3rVxAhXy9lG+6ox/VD/sMZ69JqAKeAo2n5a752vh
q1mr5FsVuia6B9QL6pllic/U2W+gTngqNvdhOxddp1rS9yLHdDS8lLX9fDuA
HoLfZm2A35bhz354Omv1fGtA1fBV0b7Jh3Fwj+qFWHWhzaq1eDEWaJJqFZ8H
y32Hm+Fm1pr51oQa4ZvyjsUQmgYfSny2cqLcXB9912rFHF6AGjOeaU3wI+jV
jGfYOrg78d11B91lU2rfWtB6eFHiXlWOVsGV0Xsrh1Xwo6glYx9b4AI2O4sc
s7rEPaReUg1dUCyx+QDbfWg+vA39mnHP7tG8ip4dbWgVfA6dzrrGf4SXRP9W
OXgQ3pu69hTT1+F1mh+lfgNa4bew+R3b39B2+M1o1pk6+1n0Q8Y+LYMHo2er
ZrRm9bBmZNYzYgT+fxj91mgmajbO0AzOuMZV63dx5skSz6QG+BbUXeK1WfBr
qd8mzdBdqWesZq1mdDv8cLyY64xztyR1LjQDNAv0Rumt0htxRPUXPVt0xx3R
M1CzUDFYqlmTeHZp5s1Qr+l9LPGMrYNfiX4rzqIV0TNCs0I9MFP1H9276rEx
eguia1t3romecZp1xeggfCAx6w3Zo9mpNzTjnpgAT4vuLa2NVy1Gn60cKBd5
vQHlngEBfi66FjahhfBQ9GxTTfwLp4nfUuVIuSqknq2KuWKvHlWv6g2dF/1G
6q1Ujd4Lr4zeWz2h3rgz9exVjKbC9dFvv2boHYpH3v8l5OMl8P/Vlhdj
                
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9316514826650169, 0.6991287066625422, 0.3881195962615523], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNmXm4l2Max3/LWb2/9yctQuaSso4yo5IS076oMcgIyTIoJZWjdKIpS8kS
M9dcg/aEFqckIVKMuSxJmUhkqShLlJrLOoPozPc79+dc9cd97t/7PO99P/f9
vZfneZ9z5OUj+g7PZTKZHvqTF29TzGSmVGYyvxX/VGONNfiZeKeSTKazqCgq
KWQyuzRWT7xjScyloo811kjvf5ILOjgfOsby3jXie5NMpoHGU/2up7GuooOg
bqL66OrEWgeKupTEu00kd7hoh3SWSn63+EHiDTTXQ9QQ+e4lMXZYPmS+yIXt
XdBXT76dJB9LijHWFf1j9e6fRWeIqkULRWNER2mNP4i3FX9cfKlofD7efwyZ
G0Q3inois4gxv3eT6PeicTz3QcbPvUUF2dFG9jQohu09sL8bvtTHxm7gNLQQ
GF1cCDx+JdpJrA4hXkvEP86HvbZrMfb+nGYyWa2VLwa+ncHkCOnqrvn64pvy
MbcZvdb/pfjWfNi1TfzDfNjykfiWfODnMT/bXr9reeveQswOR9/nuYiN47JX
671bqsSTXV9nhbXGvsnGXBPk/Hy0+LfiZ4nfKjpbdL10PyIaXRJzx2jsu2zg
aDwPLoZPPfKRc9s1f2g+1u9FnA+GOw6NiZ/nGjHWZz9MD0FHo0Jg0rQQWDjv
PuZdx/lQ1rSuhmDWENzqE9utYHYQuJ2ZjxxrAmb1wK2uBozlt8Lo9QrhlIZc
ffBPqRXHzf4fKxu/z0b+PUr8Z8nWhXpntvhzmn9edJfoI9Xj3eK7ksB0gugc
0SavKaoRvS/6QLRA9B7P8xnbRAy2Sv4eye1OAtPG1P428nAJOPYBH/u/jfo5
hLG6+BjDw6AzwaQJ+DiH+hSiBgeIn67c+Z0oEa2Q/ErRHaJVsuMS8c3iU/Re
lWycLD4S20eVxNhc0XUlkSdjiNto/K4WbZT8UudsErYdRv4Yp6dFE8nHZYxZ
17ySWOfZXNh0u2h5Lp4nYaNjcKfoXTC1TI3s2yg+sxBx3UrdjgJ757vXfIZ1
b6Sme1GDH9J3Ti5E/zqyEPguod/01HON+CnifVQbtaqRs4qxxmPoWkTOOHcW
8jyGscXkUg1z1cRzPDHryXwv1nTvGYf8DWDbg989kbmJGJ+Bjb2RH7tfXY7L
7+uZS3geh/7x2L6NuQ7y53X51aUYc0tZo67OG+f39Sn75JrZjE/96X29CjG2
BT9reGchtAVcFqHLehrgW0PI/jWCerF+C9k0Tba1LoYdvcn9ajDqjq6PwHox
OWD/XM/HKeb/yQYdr9//Ff8hG/zXPL/M/Cv89thLjNU9/8D8Dvk5T3WzS3wV
4z+KFirXj5C+aeKTkuitU8RfzIYd1neEetBpZZlMszTyfiJ9w3YNyIU9CbVZ
KI1eM1l0gegV6TpR/OUkfLoIuXf0fLP4C+KrZVMnyb0mPlXrrRGtFU3Q3Ffi
9yZhs+19lX3jaPaK5rl49n7yE/N+bzW/f4L2MNYsFzLW+xrjP4se1vpzRVVw
Y3WdaGISuu8Tvy2JNe9PAr9VYLsHXavZl45lb+oqvB4Ubt3SmP8Z32z7Mexx
9ncK45PoH3/Evwt4z/b2w89O6LTuVcKrg2xcKb6MfuK+cgf9ph+29M8F9iMk
075c/SqNWHUkXi8Qiw1JrG/583Khr7I0+tYBpdF/HWeveVppzL0kmZZ698Uk
xvyO322GDtteyfsev5h8GcC+UyyNvcf7S1oaY3XruVfeyd51fi72rnvw5yjG
jNNt9NpzwetC/N7O+eMp8vFu5k7AhouhSxjzXmc8PqBP21ePeb4F71wq7MqE
4RVp7AUTOJ8YS+ewfZiITX1Ft7Bn+CxzJLE1NoOosRvEr0qizm4UHy75EeB1
Afbapyfxw/qcR78R/yUbWFxEfJ33J2Dr8YwPwO4fqflH2ftXUve2sanoWnLf
edGMem+exty52H4s67gvpPhbJIc64vuiJHxdkUSPsH6vMz0JXQuSePc65F3n
9mNvNvJqOL7PET3I89vkufO9rvfZv3+w1iL6RHP6gOUeAse11JbX8Jjr/Fr8
rMLu0/cbOw05j81Iwu+aJPqj/ZiXRF73I7d3FsLWTdhmrI2za8J9pwXYt+C5
L3gai/vpG1Pos9/Tu4fju+34jnHnyrXYX8XcQ6X74jYXTN8WvcPcikLE5znx
RYWos8XiY5PYH/4svrE0zuSWH5iELYPdD8hP56n1bWTtNdhruy9Pwocrxa8Q
3affl9FLniRX76cv1vVHP/u9Kuw1/ufT644m3/uTa3vo3S2pm/OonXN5dmxG
gIHj5brwXuPaOJE6sY5+9Ar3jJvYS24Rn0reeJ95Ffts2y72yt2FyJs19O4N
4OvYtGSNPcTsOGruFur0Vvrnu5w7Z6uW1qtvPCz+gGrrLdEc0bBCfC8MF8/p
vH+yKC+6W89jNP4X74k6R6wRra2M31P2ezb/RTRbutaXhe41SdT9e0m84zOS
zyLTKuKbYrpoSRI4rU6C/PtV8VmSf7Ms9JWK2onKRB1Ew8uiL0yUD4Ply83i
vdOQ6ZyG3HpkfZ72N4h9aK/na0SnloV/g0VtRUuTqPvHk8BjA5i00dxVYOG1
LV8uai0fBlXG9551DcOubEXI5PDvX/joutxAvC4pxLfJpcabOwHfDVRIvrIs
8nsYPlrnTPn3hmgW9KZodnngMbRsn0/DyvbZMgf52orQ3wq6UjRQ1DIN+abi
peWxj2wAs7eI3Vzq0fln2ZOQtz8zwG4oGHv9tcR/b2Xg1Zb8GaU1Tpb+KvG5
onX6PScNG72mzxCXUbN/SkLXA/gxRO9eLTqlPPBzDJz3/07iW/LrJHrBRvrG
TDCyTLvyOGOUIe9n+9qGeDpG1uV4uq9UYeeV4m2RKSmP/vUOPSeHT45Ba/FB
xNvrO3bGK4tux2wgmLlOMpWRN74Hsb4KYt0aHZZ7oK4Wy8IW25HH9qH4M5Da
c/5dRRzszz/T0PVUGvNrqTXPDyEep+yHjX1YTy65XryO4z+InLdNzoVScuNB
eo7x8HvGxvMD8W8quTUIP/tTh2eLn8G3s7+hXRPGYp34Fr7f/R3v8XXkVtdi
9JOOxYjnbPxvXgw8mxYjf9vTE5znrcB4RnnkgXOnXSG+w9r7vo77E9+j2HfH
0f63wl7LtkXOOP3Afup99VRqsYL6P5XfGeJpuyt4x3ng2OfIE+d7lnxoj2w5
8R1MjN0raukXHeht1uNaqqVv5rh79B3kWurM47XgadkZrDeTXG9H/t+bxtzf
0vg29Heh70qfTyMvXkrju/hM7hps1wyw2JnEHese7iR8v/JELs6Wz3C+fIQ7
Gd9fPMGe6713Aedpz+9A3ncb3lfv4VxYw52Pe/SFnI37s8Zn6NqVBsbfpJGn
JeTqhjRye2Mae53P2L4TKcF/56effa/3NLq2sy9eTa9wXr2dRt6vT2OvcU65
38yhP7mXDiY3h1Af06m9T9PYz7amcX88kvvN+dxZGYPN3AttSuIb5ID9vmUS
vi9SzrDG0WeEuziL+KxxB+e8kXw3jRb/axp18fc0zr0p3wsH4kNtIXQX+HYY
TDydb9Z1J2eRhzkPzBf/IInvkPfFm6DH+voSZ5935nKWmAe9h6/LwHgC+C7j
7FFGvrt3nEPeWF9n9us2afg5mTOX15jEucr5tZy1/Xw7eMxmj/BeMS6Jb9/x
SeRGW/JjFHdX/79/L8Rdif8P8FUS92C1Sdwv+38Kz7KXeE/JFuLOu5p78O6c
HXw/Pp0adR6U0CecZ86daeTFy/Rh9+Mu2OB79Fb0R/ca3y/vxL/Pyc9l+LeC
eE8jx6zTNu5mrjXnDvedeWA/kjVGc19/NXnt+m/G/xH8/4TxhfDj5kL0iTfo
FQuoUdv6BnuDa2M++TuKs+M87i0fodbr7iwXgtcQ9Hn9SeBa9x2/kpxzjuzA
9xX45bnr0Wc/HPMvkX8GrDxWTSy64/Moam0yd63jCpFrFezpDbkLc/8aSr64
B1fhR0e4dXVi/WowfJbcsI117/mdL7D/afrTdvqK6/V58ngn9i/H5+eY/xQZ
97ZPeF5Kfi8n7zvjl3NnFucr2z6V/dz76y/0ZPfmdfRA98L/AaOVfmo=
                "]], 
               
               PolygonBox[CompressedData["
1:eJwllVuI1VUUxve5zDjD3vukNfRSMbdXzcTRFAOle0ZWPqop6mTK1EgSlZk6
ltVDVkTqeB0MtNCynC4QjkY5XkpEEk1N7YIGIc6UZg9BjtPv43v44HfW3nv9
19pr7XUa5yyc2l4MISxGZbQvhjACw3D0LdyfQthWFcIpdB0enUNorw7hfTQJ
XsGeg4UQDqFX4C3Yjg4JYSNaDb+ErZe1/WgJfG/22eNoKnwI20i+dTs6ALdg
28xaGxoFt6Ix+Cqh2dlndLaa37OybVr7Adu07DM6Ow6NgF+O/vYBtBR+mxxe
JNEdaDPclczn0EfJOSv3megg/D2aDr+FfobPRq89gc7Ap9GMovdo7x+oG/4M
ndJ5fE7i7hahM3AjeqEUwn2oPtmmNd3xRfgXzrzJ2b3oT/jd7Lucj1bCb2D7
h1z2oQ7lFn13qlkv/FN0bIrpsOLF5xZ8t6PTcDM+7qp2DVXLPdgqVY7xO3gt
Z/7G91X0OrwbPYqvx9DHWlN9a0Io1IZwDZ5SCWEAPozugQM+6sjtPPsHontC
vbEGzYXL7BnF3kH5gHvxMRZegI7CGzi/lVo8izrhsWgK/h5BzfBqfFzG1xW0
Er4DH534a0XN8CB7qtRf5HMNbmXPWvZ2oifhp7FNxHdGbckxKJYj6Crf74zO
XXesu+6Jzv1xtBNeE/1t3dFr8J342F5yTcfofeBvPbEcQRPgY/ich+/RaD+8
iT0ny85RuX6A7Zj6m/XP4a+w1VZ5z5fwe9i6hnhPF/w8Gg+3oVfhS8Rwoeie
uxjdc+q9DvRj9B7tlY934CvZua5Hv8MX1F81rmkfvDT57nVHS+Abk3v1JnQD
3ERO82qd4/CKY1bsquFeuBsVajwDtsITK+4N1agFfhAfZ0u+swfguyu+q0H0
MPxbdmy6sxPwyezeUIyKtcSZS+R2m2KCc3Js6jn13iA572G9B/0F12G7teQe
aoK/yK6FYlSs6in11nI0LrnGqnU92gFvi+YGtAHejhrhJrQp+k3pbU1AJ+AZ
qBtfu9Bk+Hh0LVagb+Bl0bNIM3N5dI+qV/VG/4UXR79tzcynonNQLv2oyPr8
6F5ehxbAs7CdV/7U6xl4dvRbU8/PgfvQqqJnimbLzuRZpze/G+6Pnm3a8yv8
X/TbVU+ptzqyZ49m8HPwJ9gGCp7Zn8IfRt+N7mSjZk/y21KNp8ENybVSDVSL
DnR/2TN4le4uOXbZlsG78HG94G/oW6WKZ00LSvD45Frpjh/S+02elar5Zfbf
XPFe9ah6taHi2aCZUwfPzf7v0BtaCDdk/1doZtwCD8VfX9E9pl5TDVVL3fHM
5Jqr9ppB6+BhybXRmTI8DB+11Z6x9XDI/u+UTWvqAfWCZurXmi3Z/136z5sM
9yT3kmaAZsH/gLsI0A==
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9650745487763752, 0.782686371940938, 0.49173110120676305`], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
22l4PJfvFeidjg/HwPpb2LSa9b4El/L3LuKpuArHwq7svhXuv41Y3IHe4Rk/
42kveYPaeoQ1VsLby4iTeL4k43O0b62kLqfgwyrWEBZK2HveRNdkxmrcVGIn
/yahW8/ai25ibH/8W4OPtzDvVnx4jHj3x8abTfpRc0UmfdGtd33Q3ZdxU9BX
hK9aM/A9EcGTy+HK94zLnzBZF/dafoF6fs4w8neTe006GscPq+5c39Rw8yd7
V8/au23OkyZPxX2M+vNMmuNHC5Mr4r5fDDS5zJ4vJTfPm46ZJoNoxcmDWVN9
95k8a3M2m2wxaWt6B5m0MxmKPVpTY/7GuK9M/mOy1iRtfRmTT1RP2LVT/MV8
zW1vMqS6v9tn+9l06cn6GoPpb0Ysm+OPcnNxwv2RXwNMZpveOXBEI+Le2GSb
zd9u8oLJx9X9eVZ1j/Fs4nwROdS8hPmczPOxubgoJj9aPX9k785YG8/zcVuV
C/LdDOxOBAsXg51LEh7PD4npFeTh93HH93Dq4g7yolpU3j8gDy15dym6VPct
yd1H2JfK8/PGduKtWO/IeFyHElud96/lzN8On8TXByzWa8yWE1nHkXAoPM4A
j3qem/G8vWiy38attnfHsx6/T4h7G/DSNs9ju534tgVfWlN614PXf5ucifva
fzV5HwwlzdaU8pTx843y+0rWxwpb78Yd+6qJ1nk+VjjTeqoB3W0+Hfd+2SO7
lkWud37kPgmfX1Mz65kjHxQz+foNMfiaPA3EtlngSDGdaVIORtcxVnPKwZdi
v5a11H/KfDhp7f+yrlP6nsWfr6iX59E7CBlMrW1mvGL0YeR1+F7k/t+Lj7Jr
NjW5mviuQc6wzmlb+5S11cTfka+3M/J1hlBr64nLk+RlE+smwdk28NQRnO3J
Okb2WtvKcPm9/X859XcTNdiP50bwo55Vc2nWFGaFb3HTt3HnW9WUauts3HW2
ov+7uI/5jnXUlyJO0qc8qD6Uw9uoQdXizxN+3y19N8Mnqtkh5Es5lV7Nky2t
mKPxg8m1xt4CrzbHP9nahPr8hrW1jubqbv1e6lhYFBZUw7JR+6X2vDJ8km/y
R3UmntR9TUvqPbfv3w4HiJuS5OKXCb+/11o/xf1/vbsPvlHtnReckxoHx047
akx8FofH9P9W8Cc8KmayV+8S8KHq7jkwtxmuroSr2xN/8dFW9pK5cIY4Lren
tiBe/cmvfEjBXarRttgmn3V+0fnhA/hTcWwV3L/Lg+dtGzU5E/uVp+fxR++O
g3PhfRo6FUedWY6Sg4+wWbZrz59GvD+EYxXHxuRbtg9Ct3Axi/16KGeREs4t
ndiLOsOPc+kTz98JlsvZk+SHzjSPEaMzWfdRvm7JOhfvzrqNHxNb7TOTqKet
6CknDx2oKZ1ZplBLwtZd4Po903WPuC/ruH8B3mgKToSXDHpU46vgT/Fo7ttb
+bskOM4vDn5uepTa0HlnMvHqQGz0bXIndlyWqLoLEBd0ZB9WzC4nPrK1Y4Hj
7coCt3E7HPcwaxTh31TqeROc9Uzc7xE09qi15ZHn6enIa3wDvN+D3zRyv1/p
bk3fPTvY75Sz7tzH6/erOsF5KxH8d5fruZPamPVz2FprexU4XrtaWy3f6ivf
MRQKODcUVJ1jzlCv4vcf4NkfeJYvG+G+JPtqCjxK51Ywm8h3TGjNWL5jdgP8
uJFz22bW2UL7E/v7WvamJtSi9gb5vYu6vZ7fJfRbXmOwfxKO/JYYrmff+wbO
uATeSLAvJandasQhzr6dwM4cl+uOrj7fm1/Dky3hsUH4XwdbdA89krsE3U/q
TrAO70dxl6C7TD1rvO6e65LnQ7yry3vdodfkXvTS4DzaMvi9eW3uG6/kHqZZ
5ONqca9ewv2ifgso5h6lM3eFI7lDHc6zzv03RX4X1D+qskn2/CHy7+g/Rp7v
s+RffbJZsTkLPnL78Vmw0oL9TZwtXCTAxnbOZjqDNWO/0plgG2czcVYp95G6
A57IPbzu4+tRB1p3OjgRXvpj/82R694BtzVlLz0d92/fWdT892DwO2pDNbIu
6+cz1ah+YyihzrRHKPe6c9D9eC3uoXW3rnHiK82rSW7Vf5KzqM6krcGbcNWO
32X0+8wAOEFnOJ1/u3EP/n7w30XfCX62Gsi4GsRD67QBd8Jw7rdS9Xfh/lz3
6MOpFcUuHrw+dNYbxBlb596N2C6854ORbLrqN119Fz7DGI1V/LaRo9Oc5eRn
BKYKGD+AGA4gnrK/EXfmujtPsb6+Dc6Ala9YYxNz3iW/yrNicx2/G4lLqsEn
sqEZ+BkGpor5puvId53wkOG7Ywd94hJxStNElR/N4T1h4Sny2jrymm1j7Qzu
T3SP0imwD1jbPHI8tIgcv2nWTAY/V9YKbtMc9tmT8JrWb8e3Tpp8tsudZTN+
1pC+BNxe09pWfF/rO/sybJAtT2Ov7P4/K+c/MA==
                "]], 
               PolygonBox[CompressedData["
1:eJwtlVlsTVEUhrdze++ld5+DNoYnY2uepaaax1DSIt5QKjQxtIaQSMRQiSda
Il6EGoOktAgvQiutWRDz2BBEIqFFPJq+ld/Dn3x377XX/vfea53btah0Tkng
nCtGaajcO1cFbEQ74cmhc08Szh1Fk+AWjDWz4Bv6nnLuJloMF6Fb8BRiThH7
Gs2F2xLfOeZcFxSHt3rlnoY2w/uIOZ507jk6Cr8hxx5yFaIbcBtiOsWUIw1+
SkxJS+eOoPdwAxoOp6Er8GvW7A6Uw3J9RXXwVfQOHkbMhoQ8mteTofZuxfqL
8Cj2WMBeFWiM15nsbINQDdyXsYHMDUC94XaoICaPmXCJ19naoVXwenKOI/9a
VAZ/IUdtIE9v4fbE/A6U8we/fxDzAC8H0Bf4JWMVgc70Cv4U6uyP0c9Qns37
aFQPnyFf67hzjexfBXdB+TF5NK+V/v8cOgh3Z00pdzEGdYP/skdT8P+N4TJi
ZhO7HVV41YDVgq0ZDxcwVkvub2gxvISxZFI1UwifCPU2jxg7Bs8n5gOxH1Ee
PMvrrsvROC8P5iUddQ5VM1Y75imA45FziVbOjUQZ8GXGJsR15kvwGovH6xy0
zevN7e3LUSPcIdLaFSgLXkRMXUxnsLM8Zs/lLVVT9+GZXt52obFeNW+1b2/Y
BGcTMzmhmsqBXSjvL/Dzh/izKdXOYHQOzmQ+I6E1WVYPxJwgdh36DNenVPuL
UAMcEPMurjUZ8FA878d7MeoHl3rdfTMqgttHmstBmZHGbK4r97EaXmc1ntQb
lcL5xLh05+4Rnwff9vJid3rLK4flCpCP9Gb2dufRdHgvOQ6RayWqgJ+Fql27
Q7vLXGIWxtRT1lsbQsWaB/Nid2p3a2+QD4/0yr0VjYB7efVaf9TTYr3e1mrS
avNaSndl36DrcA+v2H4oG94RqvfsG2PfGhuzOfPUB74Rqnfsm2LflmUoTKpn
rXcLvXrZanahV89Z71kNBtzHMC+v21AWPDHSXdob5UYasznrwW7waXSRfBfQ
Yesd1JG7noHueI3Z3CdUDcci3b19E36xdw6/K/n9EE2AX6RU2/aNuAPXeK21
nFfgr161aDVmtdaMquOqqRbk2+JVG9Yz1ju7vXrdPB6C73p524TeePWM9Y55
GBKpp623rQYq4amRvMWoqQK40Wut7dkEzwv132B3vBT+B8PX01E=
                "]]}]}, {
            
             EdgeForm[], 
             RGBColor[
             0.9984976148877334, 0.8662440372193335, 0.5953426061519735], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNmndw1Vd2x19sPT1JvN/DgBCmmS6acXYys0nGDgJRJGGK6GBjjCGTZP/I
miKQRJWoAiPApnj/NAaDJBBNdIwxzcDuTpKZrAssVRIdG1ky2BjyR853z+cN
mtF37u+20+65595znzpNmz76/RdCodCjF0Mh+wtdTwqFmieHQjes/NkaHht6
JIRCv1r5xNA7wes9E7x/nJXjDV0SvO9Vxo5N8L7OjP3lRR+vsleC03pM2xna
Na4XdM/S3puxal8cDYXGWDnTytesfGbtfazsbnjL8LZhIt/pyHHecM7QYOhm
bT9ZOSPqck2Let9X6Cb8ynjZQ3Ql44dWnjF8ZHj6ouvYBzs8ZtxTZJFME5Cj
G7ZRvSu2eQoP6XYaGzxBBtlgqmGDYaNhk2Ea3yNN1nor37Py5IuuxynDx4YL
hj+io9pP0rYJ/T/m+wJzHsF7I/3qmwp98TkFHY37CFnj66H6h5RqWw+tM7T3
Y/5wKzOQdZiV/4ou4pVLewbtm5BxKjJNwy6nkWE9NnkPTKFtPd+SpW/U+b9u
5W+gIdo9o063t5UNTbwvzb67RX1uetRpT4X2edbnKfrFffYspdapd9jGyC+1
tvY90dCNNvW9angmH7HyNb6fUt9r2GdYZBgf9vldmat5GtfJyrGGzoZxjOti
6GgYE/b+PozVnHRkeMvQ3jDS8AoYZegARkNjjeFtQ6mhyrDfUMz8UvpEbzVt
e5B7oaHEsBK5JhveDbvOQi/alhmWw6+dIRe52hiGG9qCEfS3NgyjP66z9O1p
mGR4h1L1HobFhiXQfYZfP2UP6PsZfpNObPje8IPhmOEs+/gM+zOdmPBH5v0f
vq920ejKOO2tLuzjevzkKfymEU+ms4e6Mv4BvI8muN+sx4+09kXoLFt3x86T
seE72G8F692TNvUtxb6jsMFS1rsYu4yA5iRs1QX/6YqfvAW/K1Ffzz9HfVx3
5nXFJ7uBicwrgofWbwO6fAXOsT/PsX/1/fem81TFWMNhm3MEndT+Gn2K16WG
NYbVfL9Fn8a8pzWzOZ/jc4cTQ6H7hiOGppFQ6CXDVfteaOVewyJDLOJ9V6z9
3wKvjwt8zgPDUcMS03mZ+Fq5ysoPiNF94PkacXsV7TrHVtKmMVMYV0L7ONr6
EON1Rq1I8DNwAvQngtXo+AHfExlXAp21hknY5G3KScwppS3VdGppqDFdmlvZ
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

                "]], 
               PolygonBox[CompressedData["
1:eJwtlEtsTGEUxz/zuHem7jeLqQYLC9qaekYkLUGDpIooTbXYaVU8FmKExUhE
pKjaSGvDstFEmARdSCoWpG3iEcVCJLoYj0qoRIKOiK3fP8fin/nNd88597y+
u7A7v/t4zDnXghJoW8a5Utq5TIVzbfDByLlqHszEnTsAN3OW4NkbbJrgp965
fMq5RvQE/oKGUnb2Gb6DzzT+39AN+D0aTjp3FpXgSWzOYHsXTcMNxCymLYct
cC1nhQBGNfAVfC4SqxddgH+hfmKNod9wAzbFwHzq4RnOBpJmI9ubnE2G/KIh
+Ct6m7KclXuSd4ZpO4vBj/HZge989Ag+h9p5dwc6CT/AZy6229Ez+BaqSP1/
B/wRm05896MPkdWoWj+hP956ot6MoEG4DnWp12hJZD1VbxVzHB6IzFY96Ic3
oKvYdqKl8F9vsbPUEJD/Pv5/pxcLyOcIvBybbmxXofJs55ZF9i6d6dlONAaP
o13wYXw24ZtBh+B6Yg4S+xhaDQ9H1hvN+B6c46yQthlqliE+ZZ7XkMMcOOFt
VqMoDs/DpiltPrXwes0rbjWptl5sToWWw3n4MuqB76NrcJixWhVDsarQurTN
MAu3EaNMrFHUClfhU00ue1AO7kClwHamHf6JzVTSdvQHnEeLEnYHdBcmIttd
7cSLyGpQLaoxgNeiPmI9RM3wa2xW8mwFegnHOKsM7B2zvO2wdlk71QMXdYdC
26kRbz7y1Q69gq97q102t+Hn3nZPd+idtx3Trmnnp+DF3nqvmlV7pbe7pByy
8CVvd0E9Vq9Po9bQetyn3c7YrNVT9bbOW+9U4xpvO6Jd0cwa4a3eatfO7YW7
Ivt2aAaahb4Z+nZohzZn7A7pLqnHJ+CWyGalHdyo/CPbbd2JHHzU2y4rx4Jy
8babmqFm+Q9H3ptM
                "]]}]}, {
             EdgeForm[], 
             RGBColor[1., 0.95, 0.75], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNmdlX1dcVx+9qKvf3Y3ltEzWKIDP3AjGvaf+BxDgzCZdJ0760T+1jkyYh
CiLzoMlq/4W2GcQBRWSQwSQPbV/blwwSFUFAZkyfur/Zn7tgLfc6v3POPvvs
s/d3f8+5mPfbP1b84WeRSCTvpUjE/kVqw0ikziRhkhONRCpMck1+TItEXpi8
Zt9nTapNCkwK+a4xyTYpj/o6rak0yTO5ZTJrMmhy22TO5A42Ze9I1FvZL7W2
2KTEZDPNZSPNx6rYO5/5LeYzgkjkUOB7VKKXx3wpdvWtNer/KRaJlFn7+5if
rxJ/yzlvDr4+xd8y5rLxTf4krF2nVV/f8aj348ytmRTZ92qax0lnnjcZ0tks
vsXp5lO6f2/Ql+g7Ye06rfpF2JXNPM6oOKzYXIHpFJqssI/2K7L+aujjz9Nc
d5nxuMla6Pb1nWBMfY0vsYfWqS87WreQ5rFZTPN9C9lDfcVP67SHcLHC+VeJ
QX66+7ls+hPEa9Jkyfp58tHaWZND9v3U2icmGek+9tjkYLqP5aOrNYvW5qa7
Ddl9zvwza7Plb+iSg+4jkwPpbm8lbRu/wscDMDJjc/tN5wdrH5rsS/exL8G/
MKu5V9Pd3vcme9Nd90vsSG8aew+IfQHxVwxW8FfnzLT+XOiSZd/zocthzpEL
lpeoA+F9yuQbm/ul6Xwb+tg046naU06ywfICc5PY0JqXbe131v4u5no1Me+/
ku5nmiB/66yZ5Puu7JkMm4ykOUZG0dWa+/iyyfnzwKn0hPtnUbchvXHwscp6
jY2leW5Sc+P086l9xXEUnEm33qTHpDfNfVo0uYdeNfm9ajJt8sBk3GRM+DT5
mPwob1PUoGpR65d0PtaL24roP9f+2LyCXfWXsSus5YI31c6EyX3ynEWuJ6i9
ydD3nWRvYTwDnG8wLr0lcC7MCxfZYCOL/jw2UzWt+Rzwn8T3Gs48hq+r6Ms3
xeEqsbhC/q6Sc+Gmnzwvk+sHzE+Tg2Vy1Gp2L8OnwpwwOIzNKfSXsDWC3T72
GaMmVqj7Q9S+6vUgNauxTPhBfo/DTcp/N1jpBYcpu330V9GX/XGw1kPbuwND
99EfS+kKD/g9wh7dnFsxOM/5OolNl1pbMwIfiRv2pW9zyX74RGfVHqPwzatw
The2tYfGDsAzHeyvfZ5jX7go3xOJ/MJ03rb2DtwxRH2/Qo0Ph47HeyZ34cRh
+kvYEpe8DJ/InvriGGFmlbqR3WfYGCa/9/BnmbO0MyZ/b8Nr8utg4Pf0E7Nz
E36/hR3pa93tmOv9PeZ73mffW9wNgybvEHdh9hyxP09sRonPO4xdxfYI/nSh
Mwb2tL4RDlHuG8BLP+Pn+NYeg/C1zvRWzP3+dcx9lK9rUV+TsnGd++ZG6G+T
zMDfEze4zxSDPvRT+JMfdSYDoWNBNi6gezH0vbTPRNTx0YO+pBbMZNk+hwN/
Z1wLHWuy142OYrCODdn6gntOujXEL2lSTcw09jn3nHTfNJz9w9o39viZtJ/e
c5+FjjXpTmJf+3waOqY0r3XClMZqd7yV5G924HfDhslU1G1oLCfw+yaJ7zrD
FHqbuutsPi9wvpau+otwXL59FzCvb3H367b+CPjYgr83uRv0vcW32hdR589a
/HyddcLXEnfBCP5usn4d3+R/B/FUDKe5L6T7q5jjvZi2g3gn0dc5XwN/R/hO
4bGRfinYaeRbUsLYKL4pBuexobVx7gKdqYQ1W7vMD7BXApbUT5i0mX/Npvuu
tf34rjMUo6c1ymFd1N/FLSaXov5WrmdMc7XoJ5A4eWxmTRk6cWJQRKu++CKD
t71sNkT9Hb8/5jGLx/zMJfij/XUP6R2vessEnyX4IxuydYh6lL1S5vt33Mn6
7qO/AH+KM/+3y+MpLEyio7u3l7YPDn4WbvPlApzZy72VehOo3wOvzIXbfDkP
Z46j14N0M5YAk4rtPXxbwrcf8W8Wu+KtIjCYBAvSEYZe0Ko/jn3dSQliqxhL
p3QH5tQXZrrQ7YbLZ+HzR/CbeE56m7s8N7Nm6wuL+X9jvnaU9ZrbBIMbtOqv
m6ztcgxIV2s6Q9dJgNEZeDLFl4/gzDg4k40R9upEOrjvpCP7is33cGCKC2fg
w/bQ45ta00H/W7hOnLYIB4kPvmFO/HaZnLchw9hLcE751gpGpFsKFhtVQ+Rf
823Wb4/627eZfLagL139bm4BO1o3D5+KSy+SE617Bp+KSz8iP7pb9F7THvo9
qTrJ4u54TF519zQRV617QP6Fg30xj1805hj6kvGvwKHwuAAvK04PmJfeh+St
CZxobtrkA2Kv+XOcT+f8inU/gqkt9N8nb1pXHDgP/3Q32NzULo/1JK36z7kX
xI16E3eYdJr8OfS7S/aUyzzui3Z09FviXXL7Xug217H7Usyx9POYzwkXspf6
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

                "]], 
               PolygonBox[CompressedData["
1:eJwlkD8vQ2EUh3+R3ntLeq6BiIXE0NY34AtUxdQY2rW1MDHqYLLoysBXwGAS
EiMDC0ZdpLqYLNSf1XNyhid57nnfc97fPQsbO+vbY5LmoAAzJrVSqQzT+BnM
FqX3TDrFr2GtGLUr/A+mxqUh3794Hy7wPXixqPmZ137wr5J0l0iHMMS3qDWY
PQ+beBf2s6jt4k/caXO3A8/4g8Vsz3CPn1hku4Rj/I07R0n0POLL1G74lx4s
4dVcOidvFyp4z6LX3zzAP+m5TSKjZ21ZZPugv4kvWsxqQhWvW5z5Gyv4KjMn
J6RX5tfxisVd36nvNrPY7Yj5qUUGz1KDch493usZa3iWx5nvOMULFr3fkFjg
7plH5B2UYre+A9/FP/4kQPc=
                "]]}]}}, {{}, 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               
               LineBox[{3279, 3278, 3276, 3277, 3296, 3295, 3294, 3297, 3314, 
                3313, 3312, 3315, 3333, 3332, 3331, 3334, 3335, 3348, 3350, 
                3366, 3349, 3367, 3368, 3383, 3384, 3398, 3399, 3414, 3415, 
                3431, 3432, 3447, 3448, 3463, 3464, 3478, 3479, 3496, 3497, 
                3510, 3511, 3527, 3528, 3543, 3544, 3559, 3573, 3574, 3575, 
                3590, 3591, 3608, 3621, 3622, 3623, 3638, 3653, 3655, 3656, 
                3665}]}, "2.5300000000000002`"], 
             Annotation[#, 2.5300000000000002`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzbsrBAAcwPHfKZPHcBdmdXeekzqDZ8qZPM5rFXcxOpRZTmxyi9mjZBGT
8QyKgdnGohgp+QN8DJ++47e9WJ5bT0TEEq2NET8NEb3aQxeddJAlQzdDDDLA
MNNMMcokI8wwyzIFVihRpsgGW+ywyS57HFLhiConnHHFKdfcUOOOJ5555Y0v
vkk0RdSRJEWaDDn6yTPPAousssY2FfY54JhzLrjklnseeOSFdz745Pf/2xxR
T5IW2kjTR44xxpmgwB9WBS6W
                "]]}, "2.3000000000000003`"], 
             Annotation[#, 2.3000000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzj0oBHAAxuH/OSZHdFhxZ7RdiSzCwg3qZrlidleUUcoqBrNblEW+somB
83FnsCj5pkzqfM7CMzz9ere3fTyfyUVCCFPs1IawzSZblDjjhGOKHHHIKffc
ccsN51xT5oFn3niiwiPvfBGJhfCpf3xQZdfQSDUNRInTTBtNJOigiyTd9DBE
mlGGGSPLJDlmmWOBRVYosM4Ge+xToswtr1R445dQ5x+tJEiSoo8BBsmQZYI8
08wwzxLLFFhljV0OKHLBJVe8UOGbH6L1IcSI00KCTlL00k+aEf4BgMxCtA==

                "]]}, "2.0700000000000003`"], 
             Annotation[#, 2.0700000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxjkoBmAAgOFP2ZzJZkBmRZFRMpBBMv6l+N0RKYv7ZjAp589gILkGRYnC
ILucZTEoYZJFOZ/h6X2zo53VHXEhhFFaE0JooZEGotRRSz2jjDDEIAP000cv
zfTQxDBTLDDJPBPMMc4sYyyywibLbBBjnSW22OWYHY7Y5oQzrjjlhjueueWF
N7545YeQGEISvz5F08gkm0KKKKOcCDW00U4fA0yzQIwVNjngkGMuuOaeB175
5Js/UpJCyCCLXPIpoIQKqohQRwNddDPMODPMssoae+xzxjmXXPPIE+98EJcc
QjyppJNFDnkUUEwplfwDeUhMkw==
                "]]}, "1.84`"], 
             Annotation[#, 1.84, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzU1I03EAgOGf562R95z+U7PSnJvrOmQ17UMRhchpWuzWJcdwlSBExy75
dZIOYYhFJ/FQDBQRgq5DQugUXkQQpKtY0hO8z/mNStOjzxpCCAvcjIWQJUOa
bm5wnWu000Yrl4looZkkca7QywA99JOiQBe36eQWV8nTwR2GGGeQIvcZ4x4P
ucsEj5lhigqTlHlElZfM84K3PGeRZT6wxBqf+Mo6Nbaps8UePzjkiFP+EIuH
kOASSTJkKfCAIhM8pcosc7xhmRXe8ZHPfKHGN76zz0+OOOaMv/+fF0K4SBMR
KTLkyDPMCE8oUabCK16zwBLvWWWDTXbYpc4evzjghN+cExKikSQR3aTJ0ccQ
/wD/f0ae
                "]]}, "1.61`"], Annotation[#, 1.61, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzr1LFHAcx/Gf2YOdd7pkVnqGf0A+0JaeFkhTCYmpSw1OIaiISwQ6S6E4
RYMFIUhTLaEOEcHVGOJQZnXXg96dD11WIJho9rrhxXv5wudb2zvYMVAUQnjE
n0gIv/nFFnl+sM4aGVb5yhc+84llPvCaJZK85xXf+MnR0hA29bBu6CHNaZFm
NeiKHvCdf6TZJ8UeHyl2V8opIlRynJOUUMExTnCE08RJUE0TVVzgDC1cooOL
XKOVTrro5zqDDHOPIcaZ5DHTzDLPAotk2GaH3cKv0RCiVBGnkfO0cZluerhF
H7e5wxh3uc8DZnjCc+ZI8oZ3LJElx192C5uxEGJUU0MdDSRo5Srt3OAm/Qww
wijjTDDFQ57yjBe85C0LpEiTZ4t9DgrbZSGUE+cs56inmQRX+A/quFtZ
                "]]},
               "1.3800000000000001`"], 
             Annotation[#, 1.3800000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVzztIFWAAhuG/zUtZ6uTBxTEMatR00i0dwqSlpgYbEttKNIUEj3hJSNIh
81J5q45aXspbiYJCqafSmnTLlpo7x3TxcXh4x48v79bdippTIYQY62khrLHK
Cst84iNLLLLAPHN84D2zzNDDNN1M0cVbHjNBJzEe8Zo2xmhlhCgvaeY5TQzw
kH4a6aOBZ9TRSy1DvOM7k3xlnDhv2OIVm4yywTBfeMFnBvnGT5L8IMEO/9jm
gCPOpYdwqGf1v2ZqNgVkUUgxV7lGNTW00cEAg8wwyxZxfrFPgiQpp0NIJYcI
F7lECaVUcp0qbnOP+0Rp4QndDDHMFNOssMo2O+zzmwRJ0s6EkE4OEfK5QBHF
lFHODW5yh2rqeUA7HTyllxjjLLDIBpvssscf/nLE4cl2ht/kEiGf81ymgCsc
A0UabFk=
                "]]}, "1.1500000000000001`"], 
             Annotation[#, 1.1500000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzT1QDXAAAPC/JZRayzXZ8lI+63l9UPnqoeJVKgql0OsLhQt33Mnpwx3F
nXLHwJbFx8KkrcLAyCaL5p47bX7Db/5t6hhI9K8JIcwxnR7CU57wmEc85AET
jHKfEe5yh9vc4iYJhjnOdY5xjTquUssQNQxylCsc4TKHuUScAarp5xB9HKSX
A/SwnyT76KaKi1RygQrOs5cu9tBJOecoo4NS2inhLDHOsJvTRGmjmFMU0cIu
TrCTRnbQwHbq2cZWCilgC/lEaKKVkzQzwzPmWSDFClkZIWQSpZg6aukhyRij
vOA573nHV76wxC9SrLB2Qwhp5JBNIQVUUkE9CbroZIhB7jHCFJO84iVvecMc
n/jON36zxF9SrM8MYR05ZBNhMyXEiFNNC80k6eYGw4wzxgzTvGaWj3zgM4v8
5AfL/GGVf6Rn+cllIxHyiBElzn9r+Vxz
                "]]}, "0.92`"], 
             Annotation[#, 0.92, "Tooltip"]& ], {}, {}, {}, {}, {}}}], {
         DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
          Identity, Frame -> True, FrameLabel -> {{
             FormBox[
             "\"\\!\\(\\*SubscriptBox[\\(N\\), \
\\(j\\)]\\)/\\!\\(\\*SubscriptBox[\\(N\\), \\(i\\)]\\)\"", TraditionalForm], 
             None}, {
             FormBox[
             "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(0\\)]\\)\"", 
              TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotLabel -> 
          FormBox["\"\[CapitalDelta]\[Theta]=5\"", TraditionalForm], 
          PlotRange -> {{0., 0.5}, {0., 5.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{{}, {}, 
                  
                  RasterBox[{{{0.9942516773976509, 0.8556291934941271, 
                   0.5821801999327176}}, {{0.2637144598267028, 
                   0.3942858110148349, 0.648367509996436}}, {{
                   0.4704530999116978, 0.4690410255280727, 
                   0.5425131936621329}}, {{0.6796814937688003, 
                   0.5425717709730609, 0.4195163103723346}}, {{
                   0.8889098876259031, 0.6161025164180489, 
                   0.29651942708253626`}}, {{0.9316514826650169, 
                   0.6991287066625422, 0.3881195962615523}}, {{
                   0.9650745487763752, 0.782686371940938, 
                   0.49173110120676305`}}, {{0.9984976148877334, 
                   0.8662440372193335, 0.5953426061519735}}, {{1., 0.95, 
                   0.75}}}, {{
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[-175, 2]}}, {{7.5, -87.5}, {-7.5, -87.5}, {-7.5, 
                    87.5}, {7.5, 87.5}, {7.5, -87.5}}]]}, {
                   CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -68.05555555555557}, {
                    Rational[
                    15, 2], -68.05555555555557}}, {{-7.5, \
-68.05555555555557}, {7.5, -68.05555555555557}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -48.61111111111114}, {
                    Rational[
                    15, 2], -48.61111111111114}}, {{-7.5, \
-48.61111111111114}, {7.5, -48.61111111111114}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -29.166666666666686`}, {
                    Rational[
                    15, 2], -29.166666666666686`}}, {{-7.5, \
-29.166666666666686`}, {7.5, -29.166666666666686`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -9.722222222222257}, {
                    Rational[
                    15, 2], -9.722222222222257}}, {{-7.5, \
-9.722222222222257}, {7.5, -9.722222222222257}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 9.7222222222222}, {
                    Rational[15, 2], 9.7222222222222}}, {{-7.5, 
                    9.7222222222222}, {7.5, 9.7222222222222}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 29.166666666666657`}, {
                    Rational[15, 2], 29.166666666666657`}}, {{-7.5, 
                    29.166666666666657`}, {7.5, 29.166666666666657`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 48.611111111111086`}, {
                    Rational[15, 2], 48.611111111111086`}}, {{-7.5, 
                    48.611111111111086`}, {7.5, 48.611111111111086`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 68.05555555555554}, {
                    Rational[15, 2], 68.05555555555554}}, {{-7.5, 
                    68.05555555555554}, {7.5, 68.05555555555554}}]]}}}, {
                  Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.500000000000002, -87.5}, {7.500000000000002, 
                    87.49999999999999}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000002, -68.05555555555556}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -68.05555555555556}]}, {{
                    7.500000000000002, -48.61111111111111}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -48.61111111111111}]}, {{
                    7.500000000000002, -29.16666666666668}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -29.16666666666668}]}, {{
                    7.500000000000002, -9.722222222222232}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000002, -9.722222222222232}]}, {{
                    7.500000000000002, 9.722222222222232}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    9.722222222222232}]}, {{7.500000000000002, 
                    29.166666666666664`}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    29.166666666666664`}]}, {{7.500000000000002, 
                    48.61111111111113}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    48.61111111111113}]}, {{7.500000000000002, 
                    68.05555555555556}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    68.05555555555556}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.92\"", 0.92, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, -68.05555555555556}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.15\"", 1.1500000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, -48.61111111111111}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.38\"", 1.3800000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, -29.16666666666668}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.61\"", 1.61, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, -9.722222222222232}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.84\"", 1.84, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, 9.722222222222232}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.07\"", 2.0700000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000002, 
                    29.166666666666664`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.30\"", 2.3000000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, 48.61111111111113}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.53\"", 2.5300000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000002, 68.05555555555556}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 175}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.8770067095906035`", ",", "2.597375505452202`"}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.1500000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.3800000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.61`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.84`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.0700000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.3000000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.5300000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.7600000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.99`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.22`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.45`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.68`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.91`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.140000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.37`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.6000000000000005`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "175"}], ",", 
                RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
                
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {192., -576.}, {Center, Center}, {360., 360.}],
      InsetBox[
      TemplateBox[{GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJxcnXVAFVn7gInbCRdj7e7uWPWM3V3Y3S12ByCK7VXEQNSrogISl1ABKREQ
EBQFFBQbGwwkLvhj99v3vb/z7j/7PTvXZ+83O8+cGWbOod7sFWPmWVlYWAyy
sbD45++bK/kOfLnJkdG/N5t6KPpX0zDkV5v++R+JyJkXV/ZUZDxC7qXIqPgn
T5HHhNZ2+jQ6F9n50+iKf/Ia+eY/m0PfIX/+Z/OnD8h1/tlc+wv5PvnIMb+a
VvyTAuRp/2ye+gO58J/Nv34iH/5n86FC4isivmLiKyU+E/GVI//7t0oWAvDL
f/eXmf/d7Gsp8PvZCnnQv3/AWuB9IuITEZ+Y+CTEJyU+GfHJiE9OfAriUxKf
ivhUxKcmPg3xaZH/PXwUNsirev7zT8z87+YMM/+7uactsuGfzRdtiU9HfDri
M/P/jl874gPWkz70pA896UNP+tCTPvSkDz3pQ0/60JM+9KQPPelDT/rQkz70
pA896UNP+tCTPvSkDz3pQ0/60JM+9KQPPelDT/rQkz70pA896UNP+tCTPvSk
Dz3pQ0/60JM+9KQPPelDT/rQkz70pA896UNP+tCTPvSkDz3pQ0/60JM+9KQP
PelDT/rQkz702Me/h3GoB/YBDH0AQx/A0Acw9AEMfQBDH8DQBzD0AQx98N8n
Hxn6AIY+gKEPYOiD9xURXzHxlRKfifjKkaEPYOgDGPrg97cVMvTB+0TEJyI+
MfFJiE9KfDLikxGfnPgUxKckPhXxqYhPTXwa4tMiQx/A0Acw9AEMfQBDH7xP
R3w64jMz9MH7oBcDGT8MZPwwkPHDQMYPAxk/DGT8MJDxw0DGDwMZPwxk/DCQ
8cNAxg8DGT8MZPwwkPHDQMYPAxk/DGT8MJDxw0DGDwMZPwxk/DCQ8cNAxg8D
GT8MZPwwkPHDQMYPAxk/DGT8MJDxw0DGDwMZPwxk/DCQ8cNAxg8DGT8MZPww
kPHDQMYPAxk/DGT8MJDxw0DGDwMZPwxk/DCQ8cNAxg8DGT8M2Mcp93/+uop9
AEMfwNAHMPQBDH0AQx/A0Acw9AEMfQBDH/z3yUeGPoChD2DoAxj64H1FxFdM
fKXEZyK+cmToAxj6AIY++P1thQx98D4R8YmIT0x8EuKTEp+M+GTEJyc+BfEp
iU9FfCriUxOfhvi0yNAHMPQBDH0AQx/A0Afv0xGfjvjMDH3wPjvhf8epL7lv
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
eiW+8G2Hk2FnmMXHpW2/y8SCb/VbnqIB5/H6ZXiTzNz5V04zq/vBGfM/iYWZ
GYMHJcg98Xrm6Bn/l0cvnmKXT63uuCNJIqhLpYcG3nBntl7G17O9pULk3MFb
C+JPsjP2bxa1dq0Y//NM8zp8c2PV6+y2KV8ox+/vEPHD3cPVWvBYHtk3p64b
W3nJ5Pahv0K4VPT57KdzF/F8+Wh7WP23U0+wt5HT7onrK4Wl/vMtmvtfwPPl
p8r+A2ZdOM5+r5rycm6ZUujTb6hhdvp5888/kz2n787Xs7WOg0VVM1VC25q9
AgZLz+P5cm3JC2nhQE+8XjLNCFY52Xqw48sHb6l5Wy2c+T2ozqlm5/D6Kb9w
45f3w88ytx/Oh9q5aYQ9i87dOH70DFv5qGmC52qtIHM+KCt4fppZbtzZ7XZj
G+Hjlna9l7Y/zWJ2+j94fsxGSDnpf6tS7Ck8X9UU+y3qlHIRz1dze//VvGXz
i3i+suoycvie/afYmwiPJpEWtkKLJguX9G5xCs9HsD+rKhuPOS9RC+yy5a55
By/g+ejJnm25DUrO4/noyyiXZimf3dnAj4sT5iyzFZp1FkaednPH882Sta3G
RS49j+eboavCO11564nnm7KAwWsyxrizrOi3D5OzbIV3Ictupsrc8Xyzoc2c
+ePneuL5JnimXOGdeg7PN9/3tu3aN+Ike9rwkrXVAJ3gXONJ1IltJ/F8c+X2
ecnOVx7m90kMdrk3W59kXby33LMO0AlON38d8Spyw/OLd6fO1cQTDXh+qfG5
8/4D2Rfx/BL3eMCITxXnT3/dcfaklp0wpm7kvbh1bnh+6fpO9dFl/kU8v2xv
02netZ8X8Pxikx9ve7CWG7OZaz9ky147IWvwrE/BRSfMP3+6ernOs9tXmPP7
hZWbxV/573sY2AZhTBuX1V7ssmSA3rGjgVXe1G3c/swCpp1lNamr9gJb3sU+
MrnWT/z8U8dxa4z2uezdNcO1/MGe7Fe1FZHq/oVszJf63WJWXsX77z9fn7xp
ueUS2zEj0anr7BesKpuvG7HbQNbzMbCXS18e26ovYLtEZzcIay+yg1WvL6r9
spwNaBJ2QD3tAmu4eXxhg0UWwvRu2aLF08+z2v2dRt2aZimMc3xbb+taT9bR
I77u5xFWQn7NCFWqtxdez9Wws0yY2usca9u+1d+deloL8qVPjo4acpms/2Ng
r+1W1a/TsYzFNLZvMDX0IvPcOaXyAHeJUK24+EuJ0Quvz773el+1ieVFdul7
QYvAXVKhYPjPTfW7X8HrMduBcX32j7vAWr1TNt+wWCZcvexwYuCrS3g91qfs
auBG//NsV+1OOXdGyQVhzBzfwisGvB77eOmt2KrqefbrZNNpNzophIYLA+ZP
cPRkixY8LplfTSm03ft4++6Ccyxmnr+ltQnWzzGwcwldmnhWXI+s2HD20OD3
HuzFsT7jz+SohLNNExLOqq/i+WOvYWiMhcQLzx/pwc29czVX8Hzx0N7lRvhY
A0sudsgo36ER+rUcFr2w8WW8njptvebGuor+P/3oG+YxWys8LxluLR96Ca+f
usd6rj0+4iIb+VI1LbCejTDzk2/Kos0GvF4y7Jn4K/DRBbbaYuOswCMV42PB
qBrezhfM67l9udB8XcV/77xdQacnWNoKzw+yESNqXiDXMwbmdX3lZz9BI3QN
Dxw5/ZkXni+8btV+6fLpPOvT86nrxZW2gv5+SMiEoPN4vkg6HXpWWdcLzxfP
Bhb0SV16Bc8XNUJzr3huPc+ebb5ZxfOFrXCsYPSPQ6PP4/li2cjeX62jLuP5
Ivyj52qbmpfxfCGIVJ822J1nI3fkuo0eoRO+D7pSGp/vieeLKtdOT1qx9RKe
Lxzq2WVeeWPA65Om1f60fOTtyew+1CkIC9MJq+Jvh6Qf9cTzx6JdDSevq+it
95w/bu+a2wm+x6ae2NvFE88Pzd3tj7/pdhXPBxc/nJk/9eE5FrJr+fmHJ+0E
00DT4l3h5/B8kNDW58/tkT5sa+pkl2MdL/43/+IqO9yske20hxdZvPvdSsrv
V5iVOH/uqiZfcfuUa1scRtk9ZXlt0yITCq+yWgfSVv+Mz2LHj/nb+cz0Ysrn
C7zv7CvCz7svPFxjq+wzqyNMSGJLL7NbliOW3o4sYfnPF+i/hRhYQLXZVX1f
mfDzbrc3fV824Dd7d+qI5Na163i/5uD3KO/UFy9Ws+OOAT/jLYUa+3JPLfO9
wt6Xb2riec9KyDvTO2yvy2UW42lzyD7aWtj+3nhm14ZLLG/R/Q2Xb4qEbfvq
BUVe9sXri+u/M/s4VxyfrfUXAkt8xILFjkmXOiz0xusLnxmWGzsvvkbmu1xl
W1I29Js40FLofL5qhnWEF/NP2FDJzVouLLzd0H/VSl/s+c3NMEXK+yvsQmKH
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
zBqKPmS8O3yX/D6kWNaudIvwatQP5Alfejv1GFWMPKpWdl6tCRbC48qjh7aa
e5f8/qJYtnbayzWyfJGQduiB1cqEWLx+6T2244LYshimKomrm3tcKbTu8jqx
54i75vctH19b4eYSS36/UCzTrupvmv9CIdittVvzqaInOP8/nhDsEjzzLp7/
3w5v7Nzhbixeryywu/lXcOtYVmLx0cVw21bYp5ymlVQcXzAe9FPVvDHtSAw7
s3H04c5jdUKzuYbwdQ4x5OdRsazZpPUXPzvYCkMm9Xrtce0ujgf6snmVh4ru
sezy8SMmt3f577i+y3afa/MxYOpeptWvuvQ8yHwf02nVija37sWyEbVcNKem
f8bPS0qqBidU3HcAu0q3tn3v9QD5hXyv5SPbp2x2/uqsk/5xbNPWsuNBE1OY
/+xtpxTnYpl7q14jfrX+gZ8f1mPvpqwJr5mF84/Vrsl3marbq3aOkqe4vcHk
JsdalX1kY9zcxkx4fpedn9hzlA97jdvnVFvNrtf4jvzU17S/5s3frP++yf5P
j8Xh9XH2EtO5143j8Hrk3ImO/eefjWWuizwPGe/D7/e4y6r1Gm6cdbacdS39
63TXpDjy+0vuspXvvZufrLi/2mZc5nTtY5x5/QjHJ7VypHfZoJT0lzH1FYKx
pNm63Pt38XrF1v3x9c7W93D86Lv7y+13dePI7x+5y9I7RFQKbysXJg52FnU6
c5eNtVum89xiIyz9u3+J0O4uXp/EfRNvf5Udy4KPu/ZJrW0ruO+bts3xZixe
nzxv0CB1W2AcjieuVZUDdoniyO8fqfj3/e1R/e1UG+F0z7yxvkFxeH1hDFmo
6to6jqzPG88Kq7/+GulsJzR77plec0Q8m7Z8wglttjO7sbXRh1rae2zyxOX2
S+/d/m99/XusTdE066ule5D7TJV+Kfx/29s29XjmFp6M7Hs6rXfd45lsT/PA
pLpt41mKaNCr9h2ScHu5s+fQss6v2PexcUujHe6xW+7NQzJaZeL2FlcM6jkz
PrBGbzx9CpPvseghWecenH6J27vcqm5cLitgM8LjglzVcUy9Nz/Us105bm8Y
taHx+hGFbI79zzdPlt1jhzXfNjt9z2POrpt37voRx3z7NqlVZa+VkKu9MvBo
y3jy+w3usRne+mXV75uQm9/5OCtxjZVwLenQluMj49iRjulZDfbKhPtpA0dV
ahqP1yOzv+f0ull6j/y+gXvMwcJNKPWXCqff2g/qtjGOtQq96jPqglYYkaOc
Ub99PF5P9BymWzyh4vvyvz/gHgs8PvSDkKgR9oSN+9rh6T28Xhjzan2jtX3v
4fWCs+yse5hbArOIculvecmJ7es2w23zwniW2NdpvHHeLQb//SuHW8/7cMsZ
WdXPv2XNhebtfQx5DxeU3mfNny7Z1qN1Alk/PJ7VXKFe7dMlA9mhSs6WRq1e
MnnQ2pvtbRLY9eoNPVTOT5ho2s0buaJ49tez6tVtJvzCzw96f8Ljd8F75uA6
4+9ihwSy3ng8q5tZtMhNk892zKiy+s+2BLLeeDwLfFXnyzq52Vd89dGkLc1K
2axNQR8T5sfj9WNk4rot3y0rWFb1S7a3BI//Uqm4ee/FloJDh7dvau5NIOuH
x7Mbbx0bfZksEVZYLYgPlSXg9UHZrWFvZ1Ycr9bOsbVbdNMI0zsXdmwpTSDr
ecezo0v6/RmpUQtpluKghrUScPzXpr4rfbw2Hq//0qIWOrVuF4/jd5tO07+2
q9jPQwzu1Ta6OLKVPbfE1olMYJsOPV24qfHN/97nSWCFqudDTh13Qr5Xuq7F
iubm7bWOWgZErEpk8+e8cnK5lMDenezh8H1RIttcVH/6o23x7EtV/bsrL7/h
53VDNiX8+fkY2f3e3OuFXXPZ1usbjh0wJLIUv83R3hLz9qxC2coV596xrz8N
vucvVxxv43aNmtguF7fPWmys03jeV1Z1g/uaWK8EtmO1OH7+0Xe4ffEzrxOt
834gB+mPxVz3K2bHPm0aNOJ0Il4Prl3SoGe/3olkfd+K46FPSTP/jbC+bgLr
cM15UXFjseDS/5Ikq1Uijv8/ny1OO3Uqnp15M7f200CVELen3+CjTxNx/BfX
3PuiJC8Bx3/wjTvY9Khqu1IoCXSpFrk7Ecd3TfthtusTE/D6buH7h1erNUvA
67m9r5cdOvkynoUP8zi8z8ZO2PbltOvE6/FkfdkENrVSxJ0Pm3VC50o/Lwyu
cp8dnlX1fIrI/BynQ3zzwuQ9jsh9MobUsVGYt6978WV+YdsEdqhti28LtPdZ
rdntGogrmTuN3eThtDLB/Hsrmxxe8PLLo+fsmVAvaZvpPll/M5FVN07xqrr5
LRs3bv73l/b32eJ2BuOj4c/ZGYfdWz58TmC9LznuWDK5GD9/osnAoR+SPyPP
TQz3mpD7nZ1bKZ27xeM+mxV6qeGIF29wezvTgL8aTiti7ndrfz9yL5HNZlHr
9jeE9SgTmdhOdDSM/WH5fToWfqx8n6yvmcguta68zlorEt5XsRgnW3Efx+O1
I9qXV5EnMrbydNAfS6VQub71hwUv75P1MBOZl2TNwg+VFYJse0Izg10Sjp+P
VcUbrkUk4vXdwOatHKIG3Mfru6jo6R1bVxz/rbsPsPgWXDE+j7jybF2HRLye
Gxw+oVH7wAQ2pP6MFoaFOqFm1XqGMxXHO79eZCLrdWTbwsf7bAWP/rtetFyS
xCzqHN9+xRTMnv59+/XRAji+YP27JLY6Y+h3S+sQlhMQ0H9i9fusRfGLCbaH
P+P27s82/bCTx7PPg12j1q5LYkK7nqEDK8YF2B6X7CuvEvKIWYutWzRvm8Tc
JrbuIAp8xJzG+Fe3eHifpe4sX9anzXf8vKawxflRo3OQO9UZ2DV+4RumnrXQ
OdYymbW3t+iSvCAbt+uyl9S6N/cTc3yU5PdqUDJZXy+JVelgt+Xh1wLkjfbb
nUc3+80mN94wxLAgiayfl8S2XytwCwssY1KNbfXXj5PIenkVn2+8fH0DnbWw
aZJl6bJv99nBHsn7eojlQmFKpxdHU5Pw+q1G0NLZ1qYk8vPrJOZbat3ibJJM
2FM9rU/VL/fx+qvHxb5f24bcZ+eHx99xK7ERJENOjK0+7j5ef/mtH7vEKT+J
/Dw6iZ2Q/nRwv2Ej7BrYauTKzsl4fXXmYdKUTweT8Ho9bf/qhj8jktmVpouC
byiC//vnycyh5XhTkW0wc2+8YWXCxGQmdW1U50qzj7hdfOLLig+FcSxqSQ1r
u2fJ7M71hb++hcbh9kF12hb89eQhq/5zZvDwa8nMVXcnNzT4IW63cgzM8H33
DDkiykLebdFrdvrHYY/wCyks/eXphhOuPsXtXROdegzQfmRV9pyZenF7Mlvc
Ye7HczNe4/bteclHdFUKkA9v+j3MR1NYcX6/33ayPpmsf5XMqkVH7lEMMSH3
mx9uGdzcSoic/KFWz4r7CLheOinbOWJZqxSyvlQyO7HEKmLYeakwvl5Y16Lf
SewRq6n70cZG+D3iRbgmK5msD1XxfRqviT+YohVeXnJoc9UjBa+Hlk752T77
fTJeD7885lYabfuAaTrV3lm3ZdB/1xUpbOlek7pzRzNXuTm9zYPfd1lZsNu3
Qz0fsL9dJjs9876L2wdtWLklzfohW5mxoNHMXSms368OJXOW5jMLq6aBt+o+
YKs79JlYnpSGnx8xxLtXyyNPkfNHhLy6sP8VE77GOv7Yn8IOzks6VNTiF1v1
LvWQreoBWU8mhXnoK5/t+TqPaTrsrTe4xwPmFzrQv+Pfr3B7vVb1/z4/JB85
ve6RP8Mqro9CDk94sMr+ASswtpzXaUoebu/4l9HOt6yELRu3q9AnPwWvf9M7
vUmJTEsh68dUbK/fYvu0CZbCvsotVz3f8ICs75LCwgeubDnrgERYm1ivW/et
KaxRs5ZVU89phLjyGjNmZj7A66OcUV96bHyQgte78Oc9x/y6Gz9dI3QQZ0W+
m/0Ar2+9/qrt8axdKnu185n60nTjf+sFpLInQ9WTFy8w882JheUu8rvsXd7E
sKojU1n+oM6/lwbG4vaeT2v67O+Vhjz3vfCj7dIs9vPC7Oq/BqeyUQNOdFr/
IxW3z6xrcbrs9kvW4+DZOfv/SmV5m2/c+TkwC7enbu5oVzPhPRMZa6ZGv3vA
7lQSZ9Z4VYzbd62KX2DZ7BtrfsHpiHJDKguMDMp90/Ilbs96IvN8W+snSzgW
6Op1oeLfu6Lz3O4R73C7ffUH39ckFjMvfb5JfiAVr3/CDq4I/9HmAdt4cHPD
mm1hvYJUdihxZMTboxZCy7Fn2k4TpZL1GFLZ63Tlzo2HxcKfhEWitytT8fqo
4c55439vTCXrI6SyP6t+21ZRq4X5h+32y3al4vVrj2rKts5VUvH6tevVdrq1
T1OZwmm+Yz9PeE8nlZm+dX96/qqZH1o1O9SueSzz3D3tt748lbX5c7TJqsQY
pslLrfZqXirTtlWIdo77ip9/ENn6UqZjKvJSx+HLFszKZJP0rYLrWqWxu720
zs2amrc/Wz3iyK9fuUxcx8J75rNUtqp7jzE2ukzcvv3P2fk9w94x+e4J1lXa
p5HnI6msfNeHgutpX5DnnpL6t2U/2PM2lWeMvJyK9x+wfVfNsGOLA4tYxy0T
yg6ZUvF6FbaPEfb+WhP2h129/GGwqigVr2dge3yC6VGXKyIh7vn9FoWd0vB6
xs3v85f9Qipr6OHt6HZYJcxv++njOds08rwjlfVz2zRq+mOlcCEq9cuaiuMW
rkf/dx5OY4fE15KS1tkJV5J93EN3pbHxy059H/Ut4L/PpbGeVq93tC82899P
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
7aA2Z5AhgPsf8oJRnw==
          "], {{{}, {}, {}, {
             EdgeForm[], 
             RGBColor[
             0.9988493826527263, 0.8671234566318158, 0.5964330862234516], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3161, 701, 3194}, {2502, 2, 2501}, {2919, 401, 
                2969}, {3009, 501, 3053}, {3258, 851, 3297}, {3228, 801, 
                3259}, {3193, 751, 3229}, {2627, 151, 2698}, {3052, 551, 
                3086}, {2877, 351, 2920}, {3295, 901, 3326}, {3352, 1001, 
                3384}, {2539, 101, 2628}, {51, 2, 1}, {2697, 201, 2763}, {
                2968, 451, 3010}, {3085, 601, 3124}, {2762, 251, 2825}, {3384,
                 1001, 3415}, {2824, 301, 2878}, {3324, 951, 3354}, {3123, 
                651, 3162}}], 
               PolygonBox[CompressedData["
1:eJwlkLFOAkEURS8LhbszS2Vh6KisrLCVBr9AqqUxISFYYQ29BVhRIQl8BwnG
AoyF+BGEkrDGykpDOJNXnORk9r77ZrbafrzrRZLOoQTfTvotSJcc5njLS8/4
G2T4RyyFfA1yvE7mivw93Dg7C986cMBvE/MJNPCYzJ9s5gy/pjOLbEcNr6TS
oijt4QL/YuZTNrPBH5ztGkMXX8N7we68wo90PBWt4x9/hSrehCU+8PaWH+jj
U2ddoeMFHyV217BziM+9ZUPHDN956wo7tnjZ278Kb0jxE/mJLm4=
                "]]}]}, {
            
             EdgeForm[], 
             RGBColor[
             0.20504511224392394`, 0.3616917290244022, 0.5934232003554208], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNlDlMVVEQhg+yyLsX3sOFRi2UykQjhTyRzWgUKIyJoTCKFkDB6lIYTVCM
BbHQuELDe4BUFmqFjXGJiYqJPhYlFlbYGGMhmwpEDRC/yfmNFpN/ztyZf7Zz
7qaGUzUnVzjnOpF0pD3HuWcYzoHFnJuRFuRrxLkicBJsCp2rS+MbWIqtBGlz
3n+HYpqlN+mb+bTqbPa4/I17p7BVuvlmIyuRLNlMT485dwJlQ+yfn9l/UVMZ
+BPcEnVuItO5qqiv1Wp+BVZQ6zZq3gU+prcCmn1ivUp/CrbCGyfxJUNkHPIa
MJdvm5lJ1GaS69z6DOcOgxNINbnmwRR5hpEE0kHu0xSeBD8jZfBkwtNB/Cw8
t8FxzkvkmgUH8fmA/yh4Ha5B+O+BjZqXzcr6aJROC64CgcZFNCvbQ4L4O/A8
iHq7zSSweeN4lbxHc7xftmaXpR3YLG02hcgS+qLOpk9TXyFkWXn0Q+Ju7L3g
gOZm8+vCNpTmvxnHsvOxG4npJrYUHAu8PSA2g3M99gKwTZzGvRjxfVXh26dZ
9YPrqGGAGRaDo/jk4zMOnmFGF5nVDfAu8gl9KNfnsFwh+Bu/cvTKwN+vEvUb
1z3MEGZKDzS3cr2HuOzp2sHfe5upuCzpxdpLuXbzhrxRmx/4GqEsNwWOIavR
v4NvkTXoP8B3yFr0+YjvzXpcAEeQVejfIn6npaovxYFxuBlwGGGUbhZ8iHGY
Bb+P+V7KVdew3Qlm+AV8Hvp9vQCv2az5fgs8ontSC25HatGLwBgx92lya9Tv
2vZVn+ZjLPYmeEz/jfPgCLak3kOvdLOlAr0T8DLSg35FHG16/0PUtAD3NLg3
8Hd+X+Dv04g4s0N/RyOh51v8L1efeBZ1B81eHXj+/cqZ0Luyupp1bpGelN4r
noTs5j+n+2n3dFn1LOld9shnd+hn0xp6nqS48jTPONjJbprY0UDMx6WUZ1K9
T4EH+ZaOz/GY/9d2aeaV7CDGpWuI+t6Siq3Td3t/M6H/X8XI9ZKLl8/uPoL9
cCXgfGR5Q8+Z0H+xTrH18O6B/wI4R0w7sXnoh9AP8BDOgn8AFwe+5Q==
                "]], 
               
               PolygonBox[CompressedData["
1:eJwtlDlMVFEUhg/MDPLmvXlvXEh0tFAqE40WMm6ISxQojNFQGEQLh0IMuBRG
ExRjYSw0bpGGEZDKQq2wMcbERMEFBlBiYYW4xFiogAq4BNDveF7xZ765yzn/
Pefet6T2aNWRfBHZiaKoOyHyASiKiXTBFb7IEBwUiJTD2+MiDaxrQ5fgEUeE
YWGpPIenPZEplGJgIfrO2BzmZqM+2HVFZuCVeSKb4L+snQn36N5FgcjhWSId
KAXXsybD2mbUAN8mZmfUPN6CfxBzrliOATiJmUb83lHPcDsxxzjgQ9QIn/SM
L6I98F7PWMf26VpyThfij1gjcD9n7BPzPABvxMMKvEzxvxA+gYcdeDmDjsMF
SdubQVH4Rpi/OMKZPDuznl3PtBl+4NmcrmmDFxBjPlqL1qFvjtWOUJKDxxxj
rEkvXJy0XM1oMfyT3/ViParE76hja7VHPfAkKoLnoZfwL1Qqtkf3Vmvfonam
3XCra7XvRl3wezy+Q8PoLfLRUrxPMv+F+SsJq4X26DI84Vgu7dELuAozg/Q2
Qo13wbW+3a0tKAN/Qg7zpegjfBfdZO416oQniFkZsx6PwyXkr8k3Dwk4CP3o
WBI+R440uerQWfhU2H+td5PuDfuv61fB6TCejq2Gl/t2l/QNLIPvEyNLrBy6
B3cEFlvH2uFDgZ1Nc9bDp3072zHUBK8J7G5rDdLwNnp0gNqUoM9651yrpZ5h
FP7q2NvCijyD3yTsbWoNhuAL7G8Ri7EVLkcbxHr6m/WvAvOqd3oQrmC+TGzN
H+YPkmN/nt3pMrjft1prD3K+5dTcumfcsZ4Ph29W3+5j1+7GNdSifkP/OvZI
7wP5WsXekL4lx7W306vif9a1veqhDr7uW62051k4Fthd0G9CJLA7qLH/54Cf
OFY7npA8hXNxi601OR+3b1AqfFP6tq7G7dulntTbP3Ktq5M=
                "]], 
               
               PolygonBox[{{3260, 802, 3258, 3297, 3298}, {3385, 3384, 3415, 
                1051, 3383}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.305087544885675, 0.4109253352633363, 0.6397248937413285], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxFlVtsVVUQhtepgO69zz4tbQS1gBQQlVIDGEUhsVCgLV6QqKixxIQWXlQo
ghpQIDzBg3LR4AM0vfBiovYFDIkPJsSUnooCp0S8S2kQjJpwqYKtGsRvMn/j
w+SfNWv2rH/NzJpd0dj8xJqiEMIB5AakIQ1hyYgQNoBNmRD2IO8iX0Qh1LA/
AJZlQ1jOR7OF05AG5Dr7Ad8TwHn2tltAxbEYK5EDuRDeGxXCQfAXYlXhUhWH
UIe8hD6IrZi910eGUAKWEOduYheDQ6nbS7E347sfWYt0JyH0EDufOA/jY998
R6zb7V7EfpG9RnxeAL/FPsGoxs6tUfc8zvo49l3GJXG+zeAO1q3YHwFHIIvR
R4P3Z/28+8Ax2OqQemSs0PyW4rcefAbshP85ctsN9sKhFvufYIZzCsrdMdYL
UH8HdxR5fu0M42X5tdzOFGfjbvoMrcfqzFuUR8vnUOTchnkFnWVx5nO3e1kv
1F1Nn4W0qkaHch6/SfYm1dD0p7nDOO7ybOr5Mn67wUV800eNasHV2NqRNcgq
1jXE3AJukr4ZbGOvV34PqZ7VyGnijiFOH1gcO/8l4ESkEn0CuJO9rXDYBa6w
XiFmY86/fxmZh7zN3kF8PgSfjN3+pnrNzl6t2liNdoL9+NVz7mDq++3yeV9x
Pkjd1qF7LeObdeBbsdusJ6038+J/JvWzWnVeGnufPAbOVQ6fS72frHaPG+ou
TeDfkZ9Ti/2vyLksQr8inlfBSvw60aeD9yj/deDe2Pkciz1Gh7gZ/5Nav6r3
/ho4P3geapQ7u5fZCuJvPdOut2Zvbjbf/MYbf9DqwHmvwLkF3Ki67AbLxK0K
nAqP6cSYEnsuCqp9m+IPr0+K42eR1/Ii2KW3cyT1eWFzo1L1XCe+a1X3atnW
i/9TcFyGTEauRN5nPeCtxPoYW3n6/yx7AJyX+JuqBruQbvQWMK85YetLrAfB
i4nPm6GMz5x2vh8A28C9ysm+nN/L3nlRxvlsE6f+rK/Pgkcjv8clcGTsc6Ae
fJ69w8TcDN7IeqG9c/CE3p3NLZsNMzQPlmd9djSA76gHrBfO6qxPwFziXEoT
/8betM2GyN4w6sOxz26b4ZnU48+Uj32X0bzYJG5vgOPVD3NSz53xScD9Wc/9
YTCJfe49ChYiP+tq5LmzHFpOD2n+fJTzdV4578dvKv6lsfvm5d+HfQr2HPbT
6JPRs+hfoZej/xv5/2ePvukRWgyrg/WA3fOIat2luZhRXgZU49HwP0OsO4hZ
QvyfjbfNW/Rz6Heh34z+adZr+xP4K/Zp2Mst/+h3opehf4M+3uYx+tfo42y+
g72x9/+p2DkP8z3F3m3Yr0Xeu9bDF8BrWb/DdeF29dX37E3EZ5T1SeQ980fk
fVhQLzbrzVisWbqv1fdLexuo/4A/IBXoN8X+rdXe+G1Rn3eAP+Izya6Cz+eR
v7nL4H/d3gZZ
                "]], 
               PolygonBox[CompressedData["
1:eJwtlVlslkUUhufvht9837/YRgL0L1KKKBSMiYEiJAoItFVEKGKMRROr3kBL
3eOChETBCy2C0RjBUrgxEbnixmqMxAi4tEVq6y6lUcAlsYuC1AXr8+bMxZO8
s5wzZ87MnKlsam3YVOCca4Mi+Dnj3E9wBs7CHnikxLk3oB19Pu1cXbFzE+Ek
+o/IuWXYLYfP0MOwGL0EPkUfTpyrKnRuHXyAPorN6SKzP4b+nTk3OvNxHH0o
Y2tpzdfQKeY8h20n5NGPwyrst8IT6CPB3yF4E/167NwrKec+gg70hRDvkzCG
HieG7fi6DQbRPyYWm9Y4gy5P21qac5F2Kz7uS5lP+d4NL6ObYCP6ODH2QBd0
w5/sYQV7qYXeyPq6Qk6V2/OR5UpzTqBzGYtNMZ5j7SH6bnCWw08iOwOdRXHW
uRIYiSy3S6Erspwo3l+hAr2HmI6mLEbF+mLacqWcPYqeg6+DIR9ZdGlYX31l
6OvS5ks+J6N/Y43rncX0cWR70t4mQg96IzFtgG2wHU6l7Wy1n0F0oXfucuZO
ha+ZX+At9odhNfoSqERPg2+VG9ot6E3wN+1/YDJ6EnyOvghTnPX1oVPefFfA
V7T/g3Jnc/p1Ft58tcK/tLOc6Swu/AXyM0x+nDfbPHzJeCntmegr4BRtT3u6
sxi/oz0Um61yfAQ9g/E5jFVrD+jn4UH0A7DGW8yKvV7vi/YY7WZne/wLPYKP
MXzNJqZRdMKcKmdrfs94hvYMZ30naZd4y5Vy+o3uj7dYNWeA9nhke1EOvkBv
iO2uXgOL0fs4ow5oh73wXmJvQW/0ffRTcJhY2mA9uh//vfgqwD6DfTk2U6AG
FmTNRrajzO9I7I7qrhZCEXTC29AH/TAf5kEDrA0+akKfxp6FZ0KMivVdeCf4
6Aw+5TsPFdACzeEO6i7uTSwW7WFzYntsDz7kaw2sDjYtIYaG0KexF9jvQ87O
cC06ji1347oqsd3xbSFGxdrNnP2M7YNXvcWUDzlSrkpjy921sCQ2H/LVo3rH
/IHwXlTDPkQvIOb1If93oYfxMaS3n3NuAswN73cArkZX42Ouszs4E/1W2mqh
/B1Er8jYXNlUZ+wN6C3oTZ9DPx3OWznbgr4Tm3yoF43o2mCfox7Xo5syptW3
HH0Za16FryvhB/xtoW9pqN9b0XcEf6opNehJzJ/lzOZ0ZHtsC+d1N3pnqFfa
wy70gbAf9e1A7w7/kdbYjD4WW63XG9JbmurtLc6GX7S/EI9ivgdd5i1WvfFB
xheGeqcYF6HvDfuTzf3ocm++FPNZ5jeGeBthPvqx8B/J/nb0vMTGVGNy6GWx
nb3+kGb0Th/OHnahiznTIpgOVTm7Q7pLenMnVD84+17VfRjNmo1s2/Vne+sb
CXdEd2WHt9qqO7zO250pCWtoLdUk1Sbd2Ze0VngvesP70Td5+5/0H09A13vT
+qOL0bd6q2V1kPX2pvtCjIp1lbcx/RFp9KWJ1Tbd6TL0Sm9/n9aI0Dd724tq
Yq23HCgX06AS6rytrT9Df8doZFp93ZHN0dyFsAhu8ba21ojR/wPNJRWr
                "]], 
               
               PolygonBox[{{3763, 1702, 3761, 3789, 3790}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.4218214384525079, 0.4519500262932137, 0.5711017742004427], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNlm1M1WUUwJ8L3Av/l3v/hDm3ihzpWmUJFl6FyK2XD/GiCAKVhiWF1Cr4
EBVK1tpas9WkDIG5ZoQYuXJ98EPlWsVWhoxKAV9Ky5rZ+1aSWxHL+p2d0+rD
2e/8z/95znPOuec5/1vQ1FbbmuGc+xjJRGaHzq3FUAKP8HwU2YUs851bBK+D
GUg7+s1wfcy5XqQPyeb5YewV8LDT/YPIi4FzPbxvC3Rtc0yfb2fdJt63wHxk
BXod/CVy7lyOc2ciPVtieAWZdOp3JxJn3UOwHE7YuwHE4/kRWGWxNVt8/Ty/
iv2QrY/HdE8xzw1wHbwaWYi+CJ7w9dwkMQ+g70Yfh38kOTPu3O+wkOdV2NfA
S5Bq9Aa4BLkF/S6YRgrRF8PjvtYkxGcReh16I7wcqUG/DV6B1KKvlvOtDlOR
/h7yu5TBRrgF6ULiufjyqD3Mz3LuZ37En5CviG8OcZ6EX/C+Hp8pX/eKnyuR
yyxOiXdBhr4T+9lIfebg00ea0OfDsZRzxxLOfQJvJIcl1LAcplnfn+3cUjjX
9BL4FrKd+PfBsqTGtgzu4Lwhzv1U4gk1l6Vw0Na/A9eaXd53Wb7vIx9x3ijn
jsIzyDT6r4HG3mW5ddnaYWRWqLmdB/M5+21iuAiOc8YYZ03Ca5Nas1L4rtkP
RxrvPqtngcUvecwgndT2/JS+kzXid8J6RnonQDrQl8MI2Yhe7WuPTloP77R+
HrR+lHomkJV2v+Se9SLj6GMwC6mQPuT3OIaslDtrfd6CLJaexl6F/Rw86mlP
xqTvPL1fTu4m+nLUv2Gm7csyScc0FrnPB2Ja6y89vSO57B2x+9Rj70Ufsbsk
sUs+Jzzt7dBXP7229rin98XH/pLNBJkNE9grsf8FO+GjTvMstx67F37m6R1J
sDcVaNyTvlLilhqd9LSf87Bf4GuOtb76kzlTabUT3zOw2ObDevMhectsuD7Q
d3mBzibZ2+drndL/W5uwvNP228Utjizz025zS+ZUs8XRA+/2Nc9tsN7X33+L
zBJfe+JZ2GQ90w3vRDagv+BrXBKH5F1j/fQMTNqaFXCr2WusN/qsP2Q2ywyU
+TjP1/65FV7j63y4w3JssTyLrTZikzyGLJeD1pO9do/F57++d5v/CvsdK02k
hlXW60fsm7LL6tNue2Rvh50xZD5LuYfjzJM6+LmnszGHc3/jTk8h87l3r3Mf
9zL7XpO7ab32p8kB689hmwmyZ9reib010HwflDkfqt/BUNfLWnl+mrPvYSYM
RHofxOeMzR3xtR92cvYTxLAVbkCq0TvEZj7F90LmxR7mxlXwNM8NxH4Kbrfv
i3xn5tiawpSK6EVwncX0OHws1Fw2weft3OfgmzafD8Iaq9sqWI9kEX8rnJXS
2ZUHf0TKWJON/eVQ8+2H99n6B4RJnW9zYRvPaeybI7VtzvxvngpjsNt+iz1J
nbvyPZFaC2es7h9Y7t/AHVbb/khrucDWTwW6/ix80s59Cg7Y/JfvwBuccZqz
RpL6TZLc98JT9o2eht+FGmcG+qh9E7+GpdS6iJqXwPsDnQM3wQL73s2DN8h/
ApkHMnsjrVUCDofad+/BQ5znY/8BrknqN3g1bLQe2AhzA50Vs+Gl+O3Gfxnc
b/F/CHPw24qfi+G35vN7eKHZ8+E/w289qg==
                "]], 
               PolygonBox[CompressedData["
1:eJwtlmlslUUUhufS0vZO71JaCiqyVGqNsopYsCAJ0YRF2cqmLEUKRY3a/nAD
KsUmxmA0qFgJImLFukWNP4xGiVFIhJCmidAWwRWwLQiaGJBECXF53pzz402e
OzNn5pwz58x3y2obquv7hRB2oVx0oDCEQ4kQtqPX4eExhGHobDKEc6gbzmGu
k7WH4bFoDBqFRqMBqJG52doPXp8OYR4bD0XL4YvseRn70RxanAphFXoe3o9W
w1djMwSd5qwzqJj1ExN2Zga+mblx7D0WTYBbsbmA7T7UlDIf5EsFug4NRney
dhNaAfewZklOCOVoP9zDGb+gEuYGRotRscoH+bIpZXtvRTXwrYzdyF7jURV8
gpgG9w+hj/gOwivSFqtiXglv9PibUWPaYlJsV2B7JRqESqP5IF/kg3w5CZ9C
fag3aWsGuY1se31uHrwxWM6V+/c542M/70U4w9hi5pagn1n/D7ojWE664WuZ
L0cjUJlyhR5nbj0qhDen7G7+RM1wUbS9lqIT2AfO2JJjOe1jfjbzjwXbIwlf
Tlot6MwuOMXYomA+/ZS0M0d4janWXkib78rZBngWY48G2zMfzkML4Gr0PfYz
+f1IsDX94QQ2n+eYT/Lt36TFOgcdhb9K2d2rZt6Ap2MzIdidToPnRIt9g8zh
KUUhtGBXK1/hudHmlPOs11iF51C5LIjm20L0AzYHqdlLCesp9VZbynIpH/bB
r7C+i7V70Db4v6T5Ohd9q/xG43noGL+3eX50xy3wUubfCpaD+fCBtNWi5j+A
E9Fs56Pj2OdEY+XwO37HaL7qTn7k98P4eC++7kC74TGZED6kvhtRCbzM45P9
9fCFLDkuoB+wvQjno6n5IdSjAnhkkeVO8/3h5X6e9rghWg7KvX6+htdEqy3V
2ER4mffTb8xPgU95v81CPXCv97Pu+ww8OWW9uhJNgu/yeJWDa+Dn0Jtwm2pQ
tez5UY6HwrcTc13C3pzp8NZoa5Vj5bo62v2opvS26AydNQqVwIc8//KxPW1v
nN66GlQK53l+IjpNPld7P6kfboKnYfN7jsWst+TXjK09nhdCB3w/Pk3Ct0o0
Ax6WtVy3ouFwmrFjqh3VH/tNztqc1gyBGwrtbVeMD8ILGet0+0r4Fl+vsSq4
lDV5CTvzNnhqymLRm623+3DGfJOPR1Qr/v4oBx+lzUf5qpqqh1d6/6sGxsF/
pe0ula+TumuPRznKhQuKrHZUQxE+6/nQ/Dm4xvv1PbQT3oPNfdTjTtQGr/L3
T2eO19neT7rDq+C7/T1RjYyEL7k/qvfL8BHG3mXuHbQbXsuZa1AdWod2RPu2
PIHq4I5o30b1tHp7na9tQpsz1lPqrXa0Bz6Kjx0F1kPH4F3YvB3sDrvgZ6O9
DarZhfA30XzRGq1NFdpdH1U/87uePXLZqxI1wE9njTX2ALzI71u/F+u+o33L
9E2thPv5e74X5cKtnk/t8RT8kO+vPRbIX2J6Fb2m2NDL/v3X+1gLb4+WG42t
VW6i3ZVy2gpXpa239WYPhWezxyzPsXI9E83wMc11e750v5/BzYw96T7Il/ZC
y63+Y1yA92ZtrWLYDQ9PW2zqsbK0+SzfP0Gfohb/nuqNvwf+wu115pfwS/7+
q+ZUe8UZqxXVzN/sN9B/680c7Hfe5D7K1wEpeyv0TTiPf+X+PuobUwGf9/dU
53XCW/z+5P8zWbtj3bV6sgj7fO8P2fzB/P/VWy1K
                "]], 
               
               PolygonBox[{{2609, 46, 2536, 2605, 2606}, {3766, 3765, 3763, 
                1752, 3767}, {3632, 1453, 3630, 3655, 3656}, {2529, 2528, 
                2578, 87, 2600}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.5385553320193409, 0.49297471732309106`, 0.5024786546595568], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJw1lmlsl0UQh/dfwLb7/g/RAmKQBglekYIoaks5lEQMaIIEpZxtAQkFbBFE
EZByyhE/CILhKMXKFVEuY9ToFyPGCBYVCMohyiEQMPpBIcYD4jOZHx8mz767
szuzM7O7b6exdUNq80IIZ5AWyOkYwo8wl4RwInh7O7KT/j3wKGxirCEVwhZ4
kr6fkPeQdxjbCY/AZSz2KbIc2c73Lvq/h+2yIcxpFUIRnMb8KawzE1Yx9i46
q+DY6OuthvsYO4DON/Bqxue2zbpfZtvmtMi4nXw4Jrq/b9gayG7aP8BaZAHt
9fA3dDu2DKEYWcT3OPoXwvPMH8j6/8C5tgf6t8GzfN9C/2n4J35cw5+/4E3p
ELoSvMuJ27H41Affq33PRYrQ6YZOOziVtcbQVwenI4tob4TTkIW0N8ApyGja
k+EDyFLa4+Cziu2a6Ovulq162Z0nvq92y4znIA/exZwKy20hdtjzAuQD5AI+
DUPnF1iCTiU698Ev+O5C/2ewB99V9PeEd8vPEXA/655nja/gbdFtPgNXZ9zG
Gng73/Ppr4CdFf/htr+Mx38UXJVxf1bC2chg2rNgp4zXTzG8nzlLmFsN++LT
SuJZlXabtl+z8a9y9zc8jN5R+hrgOtWD1cX0XAgPFVArcI/83wc7Z7wmesN+
Ga+LSvNBuegCX0Jepb0JPqUY2j53ZTyWO+Ao5aaddAZLr1n1cwa+yNhidJrg
y4rtTMszMp72EliHf63wsxZOotYmI6XIJ9T9sRtCOASXaS9L4R/U33+M74fr
YDOyHnmb77WwEZZYzPK8FiuJ3euwHA5gbCI6NXa+Uj5u9X2navVe+HDK/TAf
jmA7yQ/h16yfWzu/GxIfb5Cvts41+fERetvw+UO4GJlBeyOcZ+fc6je6rwc0
v1lt66uRXbP/tcZsfxPFGsl66dVqLwMUj6uat1a0OZfk/0U4H+mPP/VZrwmL
52s517tu/0H8q8bPUvnZIFsrLI55Hscqta2vRDE221Xqs3ptVC6my7cS6TQp
Ph/DC5zPkdjqgK1LtEfRLqY9S/W/Gb4if+bA2boftsBC1uqFREk5kqTcVlf5
1aj4N8A2urvsDrOxrtpDWcpz2kv5tnxa3+/M6U3cCnO+j+t56Bfdz0nwicTt
Pgdn6D55IfoaU7TOQdXwd1m3W6n42d1kd1QR+u0Z28l56QHP0T+C/vZ2D9Me
Trtt9HxeVU00q96sbrrrnFZGv1/snumjM23n0c6l3Q0Wo2P2hkR/v87BE0gB
/ZnExyx+x4NLOuXvYf/E67GNaDHKT/ldaXfmZvg4fv+M/93hxbS/TfZG9SF2
h4nhMHiZPe9FPkcWoXMFboJFidvqkHif6Zju1uh33W6YML+OdTrBgbJlNt+K
7uuh6Puxfd3MOmejv5WtE/fxjha+ZqlyYnveJB+2wlOtPP627krV8F7JCvn8
tPYyNOex7aj4TsCP1uR3PCxjrAmdUthZ7XL4vN5We2OH666bmvM4lsqfAvlm
dX0s+lg68Tvd8vet/hdO6t+jUHVvY/am2dtXgVTrrrM7rzF6Xg/CGp39hVmf
b7HaEXxvK3SuLU5XFP9l+pexNeenXa8e9tH/wyPR3ySL1zg4V++gvYc3Ju6/
7aNv9DNeE/2dsPdiiN390e2/Cb9Mu53zsFi57pjzfVUof4/prNmZq854Xc/J
eM2mVbfb9f9mceqgunoU9sx6jgfBgpyf63xYpju5N+wV/axNgLdG/88YGr3+
rA6Pw/LoZ3Ni9JyfUs0M0vpPwm5670ZHv1PKlacy3TGWN6vJYdrXPfovGhld
L9E5/R8m9Vk+
                "]], 
               PolygonBox[CompressedData["
1:eJwtlntM1lUYxw+EAuf3vi+6MLOLRN6qVZhliiKabm25tZWzRI0QJINUME0r
NfGa2l/NrFmpBIKWFWZr1brYlq3SrurwbmaWTlv94WWt6/p89zx/fMfnPb9z
eW7nORTXNI5ryA4hNKMcNDSGUMHf1ehReHxBCPtyQ2hBw+BNqBW1oXZUxZyn
mbsS3QrPYqxLXghD0Bz4IDqAzqHzaD9ztjG3A70GD0ZT4Gp0Ozw2CWF4Vggz
0Gz4+0wIh7qGsAW9B09nTiVzH0Cj4OfRG/CbqBbO54wR2NqIEnhAtxD6ozI0
opvZLNs/Qh+jDaxZxtqlqAHez1in2yzbmzhzDGd3R9PgL7DpK2x7EbXCr0Y7
+wd0DG5w/xWz++BctydBZ1lfwZwlfl4feK/7p++d8JmMscb2wKM5I8VZCboS
TvAhor6oH1rPnLldzcYlcCV7rgiWk4HwJPdvOboBnhyNNacEvos969l7KBoD
T4xmm9ZcDxcXWCyV/z7wSsZq+TZVe8K9/bt8zIPzsSnPbZStrcw5wtyt6CV4
N2f8k2UxVCznoenwetQCD8KHji4h/IgGw89FW/s6mgL/6vHReb/D1dFqbxW6
DV5VYLWnHDTCy6LZWoMWwy+7f8rBTHhEtG+aU6650fZS/Q+B389Y7SkfH2Qs
5n29plRba6PZphqsgW9BVcFqehBcj091WRZjxbqf1++DaAA8k7GyLKt51X5j
tG+aMyN6zrNszp3w/YwtdvuvjXandLcuoIsusXKgXMz0ensbbYabvV7kUwvc
I7Hc56Ju8DTmTAzWA9QLajNW+8fJx1h4YMZYOSqBv2XNN6z9D52Hj3u+VbOF
/C4tsNpRjRTBd2cst9qzTrlOh/AOjecU2g6Xod8uCeFDVAxfkzbWWB+4HPXO
sd+auzgVwk4a2EW0HD4czdft6jHwBO9fqoeJcHdsOsa3o+gE3zck1mtUg6rF
v9hzLPYtRP+mzccO/90Tbvb7o/sxG37Y+9ki9SQ4zR557JWPjvI7lVhsNXYk
2pi+HWT+PtWf+1uET6PgGz3/qqGb4fmM3ZNjPlfCl3l+JqFf8kPoFY0no9P8
vioaqz+e5XdV2va+F1XD69CyHIu5Yl8arffqDgxTL/N8LEVr4V1py83l+P81
PJ45TcFq8Gq40N8L2XSS86aSgzXZlhPlJpc1z3g+lcs1adtbPi2QPxmLrWLc
Cy7yfK9GOfDCtNkumxfBO9mzP98q0Ofwz2gC3A99Bmenba3GTvP7Dr//6lmj
4YLEcq8aVa1emnjvlv3qld7vdUdWwJv8fVO/nAefStnZ8ukM3OL9VjUxB96D
DsGH0Svwd9FyrbGN0d4cvT070Cdob7S5ske98qe0xVo1eAreEq0XqSctiLZm
h79ReqvGRas95eQKuBWbLhD7T9ESuChaLaifFMOd0d5evVl6u17w90tjD8Hr
/LtqWrX9hL/Pqse58CO+n2psJFzn9af8D4cXej1pzZPqf16PmlMGv+v9VPHd
CBd6/uXv3/jb5v1cMX8c3pyyu62cK/cHo93tt9Rz4ce83+rOzIJPePxUs7vh
PxLrTSXsUZiyntPd38t6+ALfb8q2N+kc3J7YW6SetgtuS1ltKaaKbVPKYvss
qoYPRLNF8doa7c1Y7f3zOrhnys6egobBpagq287sof38/VHMnoLLvF+qZ5XD
f3o/kk8n1R9Tdrb20F7aU3vrzo2Ev/T7qju8DW7390wxnQ/PSex/F71JDfD/
QplGvg==
                "]], 
               PolygonBox[{{3980, 2103, 3977, 4002, 4003}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.6552892255861739, 0.5339994083529684, 0.433855535118671], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJw1lmlsVlUQhg8fCPbe796vUsIakwISJP4RGhOClBaCxogmBn8o9YfSogG0
paDUDZSwSAKIC5QYCVJkEVxAhLK2gkIJjbKGTaKy2qIEMBDBEA0+w7z+mLzn
zjlnzpyZd+bcnuUTRlZlQghXkbbI61EIH4JTwKo2IdQhE5AlyAHkE8lBZCmy
gM0LkXKkMRtCP4w0ZX3ukPa3T0KYhz4PvMV3YO1+sL5dCK3IJuRa7HP7Y9dd
kN7OXoZUI1PxaQHb347cRpuM+1SCTERK5aPpzb/r2MowvglOZs8HbHstcv/N
v0pkFt/vov8K3A42IHOQ3jnO7BBCT/ACfo+4I4R/wOFIT/x6TniFexWCu1i3
784QfgJLmbuMvhicht2F2JsBTkfmMf4CnInUMp4NNscej5XgmtjvuxccnfH4
WmyXpSHUtMdvsJz41qJ7HlzB92r0W1O/j93L8jaA+TFIEZLP9zDkLuRn/LuF
n9fBE/L5WM73WKyLkf7sqci4jaPYPYn9w2Bx1m0Ozbq/B8QLW1ur8yz2GcW/
Wnmx/NxLPEYhZcilrPPBeNEkzjSD23SXLeAuvvuiXwWuTZwrHyV+5kFxsEG+
HQE/TpwvXyc+f0ixKBc/zcd6cWomcobYFzB/FjxDDlKLDzHvga115LoI/DFx
LjaDnbMey+5gKevns+9F8Dq6G0gT0sz3IvR7wS3i22bw/ozH1PhdIr6Nj9yv
PYpdL87uyPxD4CrmNrCmEhwszoyL3IblxLhfp7qwnA0hf5/C1cFgX42Lc+6b
xd38i/kegj4PHIUcYfyU1licbd0exdxib9/9tLck61wcBJ4KzqPT4JOx82oi
OBIZajkHd2fcrsXkHH7n0BfEXp+2xr5PoU9sjP4lxu9hbwLYKevxuhF7fGqV
u39VgzfBQG6mMu6aOg+D+oD53Fc8W6reU6UzzU+rg4uccZ4tXbC/L3aeHLaa
i53LNeBl7GaJz0Vwt+p3F9hN53ZOPQ9F4nsLPnVDfxacEjvn68AfEu9j+8VJ
qws77//eUQE+iN252B8LHte5l8DRifeVZ8VBs2+2RrbzvTY3MPJe9QJ4T+x8
fgRcr3qxurnAXKv1d3CY8v40+DfSP48c5Ifwl3rCNfAM53SkpgqQ7yPvh61g
vcam26k+vCPy/tSkGvtOPbQF/BbZxvg8OEI8Mb78EjmHVoOTzC7jpULzc5Nx
PXUfxoJ9Eu+xJYnnz7hn+03X2Nb7bDX730f3CrgV2cz418g5a/VvfErUh1JJ
qXhYiN0GbHQA53P/ccRhFdhotrBzFlwp/fKc9625OrtBb+X2yM+pUJ2vibw+
jqn2y6WP8z3meeDLkd91GbhCPd96/93Ko+WzU+x+W61My3pdVag2y1Sfdo71
Detng1SnXcBHY38PKsFXrR8xvwKcRUyHE9sZqdfNAHG4RnFbHnmf6q8+84bi
sBJ8Uzn9LPIzC3RupfrV4sh9bNK7ZbnqqF7RpF5nPHlH/XMd2FvxL9SbeTuu
bZ2jxtVncv4m3e5zyAPqzwPAP9h/DjuduePA1Ln7WOprq7V+iPJucaxi/UbW
L4mcf8ajo+AevcVNdj/F6nTk+RyjGH0Z+VtxQjZagnP2quqrOz6slT8nwcvI
b4y7xn6nubpXj9jvMwwcn3qdVaYeP1tvtpeLb/PAjeL2BvDzyON9PPJ7Vetu
hfoPsfjNFE+MLzXqaUtiP8dqynI/Peu5mA2+lXhPmWL/Kom/jYsS75Hmj/lV
rz5m/ezP1N+RyN4aeFwBn/vke35vKMc56fuBE9WjrFfdx3ct+hLwG/X89YpT
i+5eotq0Gn1YsbKYzdG/mfXKK5Gv74b+CcXQYplTr7c+MVY95HFwB74uJp6N
Od/XqtyVKS9W06n+93qBs/WvVQf+nvX3pAVcLTs7c14zRfrXKdObY7Ymqe6s
/ibrLbA34T/Bz4dd
                "]], 
               PolygonBox[CompressedData["
1:eJwtlW1MlmUUx+/n4VHkvp8XFGfSyyY4x1xfKtfWlggya23UVnxp9aWUalGB
4FtmQqYYTew9WsuRUkCmvWhJAkLaNCZbstV8y/WGyos5sc2FzdXs9985H/7b
77ruc13XOec617kLli2vqIkHQdCCEqgsCoLiWBAsQjfDqzJBsBJtQc1oNAyC
A9j1om/hG7A5D59DfzJejt6A30S18F4fv45egS+gs3Ae+9/C2m2Mv2a8D9XA
GeZSfEujYcYH0Tt8exv1wad9vc77Am5H3XAPWgefD803jfvh6ZHtlUHnGBcQ
Q2028aEIfjzJ/iRgKSqBP/H1irEBPoTNtmlBcAwdhuu03nOi3DwbWmyK8Tl4
fWi+yud6eFZkvspnxZ4XmS+5aET5S9rZt6GZ8Cbm3vX7aIRvxH4MHkWXGXdy
ZtU082knPIfv09mrDJXDJ7D5Hds/0KfwbOZGAruji4zHUJ/H9x2cH9nespkI
7c5197qDmaoFzviIXB1HZXCh509zRfD3ofkqn4/Ak8xdx7fbc4LgH/jhjK2V
/SL454zlUja/wAt9f+05F24NrRa60Ar4KHrP8zEAV5KjI3G7M91dg9fjFlQH
nwwt9mG0Cz4TWv4V/x74Y9ZMxm2PRrg4l73xtRIV5ZqNbFWTnfCmdBAsmRoE
M1AVXI3yptpcI3zS49F9HIT3s+Ytr/99ui9yuINc/oiOwU2cOcDZV1FH0vbQ
XmtQE9ySYo6HWIEa4Hm55pvyGcE70ma7E7XDQ+x5nb2H0CD8Pmu6EraH9srJ
tbXK99/49ww+vebvsRR+Eh9a4ubTRviK359iOg3P9/OVo1vh+pT5pv03wGs5
80POrkYr4O60+SYf2+D70fAUy9mD8E/ojPvfCy9AX04xm7v0PbJcxfFnEi73
9bK5U/sxVxOzHnUvXB3Z2ZrTt4vYJLPtjBPwQ8yV8q0OrYavRvbWlLMr8FHU
FrM70l2lPF+KOQPfw9yMmL0xvbViYp7I4g2huXAh6ocvo3nwYX+/ev+H4FbW
tMYsR8rVOlQbszPbVRuR+aY5fevx/Mn/PriWucUxi0Gx1EX21jVXAedkrJcp
5gns74ust8rnQviBtNWucqhcbvf6Uc1tVu69f6kmNsOj1MAjxFKEBuBBNB9+
FI3D/d4P1YM64N9Ys5+130h6Xz5WT34eDt0/ve80fI0cleNLPhqFz6aMx6in
H+BVob0dvaHV6n+cuYD7egIVw0PYjCdszUjKztTZ6pHjevv+P5APPfq3+H7q
z1+F1nPVe9Ujf4VPhdYr1J8/g3ejrXAzehneHlov0hkr4c/9/chmI7xHPiTM
py44CzVnWQ4v4O8B/x8onm64I7R/k/4xL8Jt7r/8XQOv9f6hNS/oX+f2iqkX
Pu7vR/d9Cq7kvALvF3qbgynLpXrAXvgl/3+qJjfAJSmrVa1ZAl/y96I7+gt+
jLk5CavxUrjJ+7t68Kvqxd6fFPMHcEdkvUc13hZZT1NvU830w51JqyX1XPXe
HNZszbI3o7eTnbK3pJwpd6ox1ZpsLsF3eH+oV83AVX4/uoMS/V/T9k019R/r
FyetVtTTlsHrvV8ppqXwbLfXnjfB/3o9ai5gfC2y3qOam8X6p0L7t6ge7g6t
5vL9vHH46dC+yaeFodWMxvrHdsH/A2KYVAY=
                "]], 
               
               PolygonBox[{{3979, 3978, 3980, 2153, 3982}, {3931, 2004, 3929, 
                3952, 3953}}]}]}, {
             EdgeForm[], 
             RGBColor[
             0.7720231191530069, 0.5750240993828459, 0.365232415577785], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNlllsV1UQxk9LW+Te+78lkbVVdkQWY6JsxhBQW8AIiCyJCn1BUWNcQJa6
RNBqIYZA4kshRhNiC0UNAVEElNKytqgQRVpDMMQQ0VIolMhaEP1N5jP6MPnu
OXfOzJw538w5fee8PO2l7BDCTaQDsprBQWQNsj0KYS9z34C5jEcheUgOMjLb
5wblhzC/Ywj9wF0YqEVWmqE4hPNAf/Bc8O+a4P/rkFXITuzuszmwKg2hNC+E
teAM1jycFUIJ2Mb/C6aDXEdvP9gOLkevGP13wQ7o1TOfDW4gjudvCWE9uA+9
A8zvB/+KPI6+6CzC9mKkCDnG+gzxn099rhQplm+L4TVwV/A4LIbd2GkF/wB3
IWf5/h1M8TcWOxFYw/gM879Fvm9bazZuaG1vbF7W3i+B/TKeu07gTuL4hH3t
AMckIcwlxwVglnIxEFzBv1fRqQQ3Ma4mzu/BArAQOY3eW9ianhPCm+AJYgqd
QrgCXkfu4TvtHMJVzV8G65TbveCXyB6+t4FD0XsancHgrfoeYpg4R54DJ2Z5
rroj45EJSFfLJb5nEsNScH2Wx2m5n5HjsZUj+Z09ngw4RHuYAvbM8u/m4Lyw
nPy7Z8Pq1P2Y727Igcg50AAW8G9pbgi9wCuR8ycn9tzchrQwni0OliCF6C1B
vwc4S/y1/9d0vr2My3z3sJj4noxuITIp1/Nre3kKHE4+nkFGIFeRIWYj22Uo
3+3g5lyPzfx9xJrtrN0C3o7dLnZ2kfPMYq5DOjLfAOaCjyGvoDMvdhuTZcfW
2NpusXO3VOdQL98NyCKtNRttxHJBtWpxDVNsf6teboI/oNeEfiOYo3xaXlsi
P9vuseepVnmcxngB8/PBvfDpQ2qwDjwXOS96Mv+Qzt/qbonitxxuQWc3fr8A
L6rn/Ak+yfpGaqoE7KC85mg/7epT5crXJnCDasFqYlnk+fs88rO3fN4BfqrY
9ljfQvL4ngU2R861r8xv7LwqjT3WxeoJb8Se2zKwLPKa3giG1Pdxg3MsUswW
+0rlxrjUmji3mhPns3F4fJ7Xt3HGuFOLnePMNaWuZ/oHwd6J9977E+95pVrb
Wb13ALhQe7E91ajfWnxm+1nl7vHYa2YheDH1fpWg/7P8HgXb1A9bwQvqA23g
Qp2dneFs1Y1xpyZxrq9LvIe1iRNvRx7HZ5HXwVDVwpnI67UHMQzGdyW+xoKl
yGjiX5nvZ2BncQIcFHvN3hW7jRLxdUfkfe7XyPNkMZmf0anX2L2pj2fL932M
TzI/Bfw68h5wElwlvyvA93V3VIP91KOsVxVlfF9jwXVZ3sssH08w7s//ORmv
E6uXS2B54tx8L/EaNL5WIFvR24b+5oznYKJ6ptXNOtkcqLvA7gSr1yr9tz5x
GmlBPmZ8FKmUNErPpOl/ttbrzF6Pfc3a2O9su8Nt/eXY6+qI1Yv6scX3k+zb
mnmpc20ZuDF2m9/F7rNJPg8xPmL+ZMdsWLzF4mmXPI+jWrU0IONvgDsz7t9q
+oj2uE37bFB923ukTHmcm/h5mA+7V3L0BrF46xPnxbeJ16r1P+uJU3Xuk1Lf
k+3dYh+umjD/xgXjmN3ZFTov81ulXC5Qnm1sZ9It8fXtsZ+HxWv3wQjV2kjt
J0exmeQq57XqvbZ/W2NrC8D9cO4w3DsOPqJe2Sf2OijQnd6qPnk28n5j622t
cdP4anardNZ25lfV/+u115HKdXfd13afbVWdWr0eyvh+fgSbM277lHFW8/bf
4ijUHdpTfcn60zX1ZMvdtdjzfCP2uPortumpc+GF1PuFxbc88bhGZf+Xo0bl
+0H1hzHgMN3fj8beC+y8psb+/jOevZg6/yzvDbHfURP0NugiPnTV26NcHNoj
zhh3WhLvLef15lqtvlymnl8J3s0bpYK3yjjwTMbvr5vgYL1XJsf+1jFuvgPO
SZxPD4i3M5WLXuK/1UGFfJnPX8SBY/k+t0YxjEucV0WJ53OG7PQRT4otz7qr
JoIfZHyPFRlfv0a8PKUzPQz+A6bmmTw=
                "]], 
               PolygonBox[CompressedData["
1:eJwtln1ollUYh8+7L+dz3vd9BtncRxpOTbeEoKSMkJVtZpQmWmGJEEspog+1
1VsUfRibhCjUH1JRIM2cVpJZMk334eaay5KyLMSQkMi5ObeVzjnXx/XrPn/8
4HrOuc8597nPfe7zTKl5ZsnTWc65t1EO2pxyrg5Yil6D1yedG8GgC62Dx2i7
N9e5EtQD30bbLfTdjCbBRd65woRzE9H5yLmKAudWjmdedAM8hf7zrNOPxujP
5fsw3IWy4WJvY4vQAP1FaedeybU1HbwInYYn5OEj/Ak2zXS1oHVwijVuZC2H
RmLnnkibrcYshvdj00H3IXQAnk3brlzrvxXO8ubL1+hf+s9E5qt8bocHUTt8
UHuAu1AbPIQuweci61Ob+irxoWGcc8dRFdxJjCqyLabN8MXIfJFPF+CT2BzN
N/9PwW9i043tKGqEC/FvArG5GvViP48zGGK+qZzXQ/AXYX35+CV8nTffBlEC
PkVbD3wW7YPfYMwDjK1H78KjtHWG+AzDf6LihI3pgRuYI8P38+h1uB0f3883
nzvhx/HxnSzzuQ7+FJuPsP0ZfQ93Rhbb/2MMr4gtNnmMXwv/iM1xbPMYfxle
lbTc24xq4G9pa6R/G9oJT0bnmKsPjTDfNp05c81Bm2Lbk/a2F32QMhvZXsP4
GYzdRVtTjuX8e3B5yFflUAwvC/7pDOfBTeH8dV574eWx+S4b2S5lzlrmvhPd
A3+GTWvIh3r4H9ZYSK69inLIt4veYqM9a++jaDZ7zUbDcFuIr/a0Ha4iBo9l
WYxXwoexOaaxaAf8W2Rn24u+go94i5XOQGdxrbd8Vswu01/CHKuybM1C+Mlw
X+aj1XA63CfF5Cr4DP6X5toe+uANscVaMaiFf6CtN8dsZLua9day9rNoCbyf
OXcw90nUCv+UNlbbAbgj5J9y5JDiFfJFbVfgam+xrUJl3nImL5x3Bi5DaziL
SpSO7c7o7szijrQnLWeVu8qh7fAdScstxWAu3I8PqXHm0y/wi9jcje0C9DC8
0Nt9UH2aqdoVWS6rhnXDydjWlg8F8CJsShI2ptzbGemsPkRb4QXe9lKNpnmT
WHd8EjwVDYT68zfzb8GnDL5Vo/VwY8h35cjH8L4QX9lsVT96IcRXsT8R6ovs
O+At3nxpQC8rF8N5KAYn4AFisoLYbUL5nOdTaVtbOaLa+k3SYiubXni6t1oj
nx08N9Q/xWMGPJ45WrDdiPLgjSF/tIe3YoupYquY3w/Xpy0XtYcN8B+R5a5y
+CB8U6jfeiNK4UeYs4z8G2T+KrgkzKf4q5Y9yPf8hNWwl+DWUH+VX21wLW13
JcxGthlvZ6+2ZfDulNUS5XhTyt48vX26k7fDR1P2Np6l/wg8HFstV8x/ja1N
fao5e+A13u6GaoZqx6Mpe3u1B+1lsbdaVYpmwfd5Y+VUBVyTstqvGp7R2xze
R8VkDnwprK87fCW2M9ZZ604+B++M7O1UjaqDo5C/Ov9Bxv8V3kvVvCF4INwP
2VyAPw/vn96c3fBMfGjLtjdJb9Mxb7VMNeo71eu01T75p7d3zFut1z9EMfGr
LLB/BdWb6+Fp4T4rh8rh30P9Vg60RCGHWGs56k9ajipX5cNkuDJluaCcmw53
J81Wb7De4one3lL9s/Qx3+nIaqfWaI7szdfd0z/GHvg/OM5JOg==
                "]]}]}, {
            
             EdgeForm[], 
             RGBColor[
             0.8887570127198399, 0.6160487904127232, 0.2966092960368993], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
g7L93c7/C1BWrp4=
                "]], 
               PolygonBox[CompressedData["
1:eJwtlm9ollUYxs+z98/e3vO+z7sKo0LnlnM1my2z0jmphWJQOc0y03TosrKU
ConWNJ228g8ypCIiaPTBwm22oiFEQURaLCwxqczh7EP1pTQs3ZxrOvvdXOfD
Bb+d5zn3e9/nvu7zrLzpuUXPFjnndqEkOhY7N5B2rht9CS/1zlVEzk1CtfD1
rG1JOdeAkvASr2c3oDvha3PO5Qjo0WX+bs079wiBK1Az/E/WuXP8ziD6F36P
tZ08+xzth59ElfAStBVuQ9uTimGxThN/ZcK5N1CKv4fJoVDsXD3KF5ybw9pg
QjEa4T/RBHJdgM7Dz7D/XXI7jHbApez/JKWarLY95NxJLV3oFbiXPZ8llUMH
HMWKtRVdCY9RwzC1XECX4buIOZvYdagM7ifGiUhnMgrn8sr9oOUIV5c498QV
zr2NpsH1JWJbq4EXsmc++xvQVHgIFRMrg36GV1BzcYa+Uf+ygt6xdyegG+EZ
5NhLrn+g2XCp17NSNEK+Daz9ntIZ1MKHybkmoTO2sz7O2sm0znggVk+tt1bj
eJ6fy6qXQ9ZT+CLPZxYpxxF4SqhvOroavsDaQKQzsbO5m5zfJ/Z6VAWfJsZZ
J4/8DY+wFoX9l+ChrH7rvAle7OW9cnQH/KN5JKmeW++/IOd9adVwEO4m57Ei
1fgtPIM9I6F/t8N16D+ntZnwdK9n1uNpcEmJcrGaxsGpsN/2FMNjec3GeHQK
XsHaRnK7Dz0MH0U98IdoP1yVlxfMs+Zd66n19hee/+DlQfPiS2ij14zYrFiN
ffAH1NSSVo1dcFNes3aWeEvhI16/tQ/1wgtieeEa3l8MP8ba5EgzPgveyxmv
xU+16HW4kbXKSO8st/3ogUierIZb0IZINVqtq4L/WlGbV0+sN4vQSvgkMY9k
1NPf4J30YJR6D6HX4HXkNC4tTz4El7NnInvL0CX6Xcc7a3j3aTQRHg7+sJi/
wssLmoUMf6+Cb/HyinnmZovl5X2LeZF4lQV5zzxYDb/gddYt6FG4Pae7wjzT
Ce8gp3vTOvN2+BBrjZz1VNSXk4ytpgO2lx6cSuoO+RSe7+WF+1GVnZUX25lO
Me9lla/5bTSrmT4W8ptb0B1XH+blqoJqstqsR7d53Tl296xDc+Ci4F/zaAK+
J8ybxZwHb7KehvvFelcZ5snu9CS8JqfevINW290efj9Gg9R/q1eulnMN3MY7
HUW6Y+2uNc+Z92zmfzL28sZmtN2+LeH8LWYJ/DFr/ZHu4E642+vdTWib+dOL
X0avwjfl5fWvUAU8N6dczSP1OX1D7Fti35g34bJYd7fdiXY3JsP3y+6cYc57
kpfXzLPO6zfst2xmP4Kbvbxhnl8Gx+E+MA+Okn8raw/ybCF6HN7i5X1bWw2f
IafdCXnmL/gt9szKaOa64KP5cHck5Z31sWbVPGfe2xb8ZzPyPNxe0KzaN6AZ
/hp1ZDQPffDeWN9y8+seeLNXbtbzJnheTl6xnj0FnwjzaTG+gV8saJYsxw0F
xWgJ+eyKNYM2i3bnXwd/T8zjkXpovfzO6y6ztR6vHlmv7AxK4QMhX6u/Gz4T
y1v2P0h/rDNZG/LpgSeH+8Q8GsH/AykjIuc=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9168515824739094, 0.6621289561847736, 0.34223990566911927`], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
7dmjkxd9RJ+MNw/ecyBIn5PA/wHAnNmv
                "]], 
               PolygonBox[CompressedData["
1:eJwtlX1o1lUUx++ztbl1f8/zmytRyESDnNZYrUlvmrBJsvqnspamZqlzFjgl
iwh739Lmy5q5dEGgFWT52mSbZSIEiUZUj1bkqJxhq3/CiKQXDbPPl+/zxxc+
z++559x7zj3n3AmLVsxaXhRCaEeXoI9zIewpDeEUysPtSQhfsiCPlsEZvt1d
EsI49Fc2hHNpCEXlIRwrC+E0nI8hnMyEMIT64dVoDrwWdcF/Y18/IoQK9Ae8
EjWy12i0HE7xubk4hCOoCl6Mz0HWluP/KXgePu7H12w0H/6CMy1k7fXoU/gs
ai62j4j9NnSQwNahN+CzOe/dgM7BNfiowtckdB28G/tibKegz+FW9Baxf4XW
Jz6z7Ic47w/wUM650jf5fjL1WU/weyHcic3FIuewAy5izT3krh2Ngi/lTN3F
jqEE3pk4Ftm8lzgnys3PrG+CKys4G/luQaPhevR64Xct/C4x7CWW99EaeEF0
rnQHD0VLrJhvgCez55/sdxhNhLezx9OlroF++AJrfmLtaXQSrijsrzu/QHzj
WdPH2drQWHgda/ax9gXUDk9F18LVaBr8AGrK+A5vhQ9hs5u9VqEd8DA+j5fZ
/3m4QzaF86uWzhfqTWe4mLpGVCv/oHp4DDm7jdxNV1HD32GTK3JNfgNvxGZq
me9oFVynHPDfNWgKXIrNSNY3oAnw83xrUyyoGX4OvZjxt8VwS3RsD6JS+D80
nHHOfoTz+Kgrdk3+Dj8bnRv5WAQP5lxLysEn8M7ou+tFL0fHoFiy6F/ZRp/l
JbQEnsn/W/mvFc2ANxXia0U9cD16h1p8HFWn7gH1whzUDa/Hx9yMc7wWPsKa
bWW+g8/gPr516CxoS/Se2vte9DD8CD4m42suaoPv4AyPcZa30aPwvmjbNagb
nkWMv1ArY4h3KXw8elacQh/ASda1qJ5QbwxEzw6doQfujfa1Gm2CpyeOXUPs
KvgMNuNL3GPqtW9Z08/aPnQA/jVxb+tOdDdX5tyLA6gWPkzMW4l9Gdqj3OVc
m5pRnXBX4lmgGbEDbsy69pSDJXBNhXtRPVkHD7LnfvYeQAfhq7Gpx34luh3e
lfqulPNeuCXru6lCzfCJaFvF8JFiT5xbzSTNJuVMuVPP74W7OOOdpe5h9bJm
tma3amQpvDl1bKoR9UJ14bzqp1HwxNS1ohldCaepZ+UT6HJ4V3RtqsfV6+Pw
eRm+K9EIza7oWaqeqtX95Jxb3bnu/k1i2kBsh9B++IrEtuo59d6k1HttRzXw
11m/NWdYn1euo3tBPa3enpF6rd6IRngj3+az9zz0ijj1LFYPzIRX5Fx7ylFb
zjWj2tHMGAu/Ft3L8vFqdE2rtnXmnqxrTrWnO/0wuqZUW+r57+HO6L3VUxui
Z6Jmo97MkXBTdO/ch26EGxLPGtWEauOunGe9Zuo0+EDWufoNHYNvip5Vmqk3
R3/Tf6r54axrRrWjmb4g6zezvHDfz8Czo/fWDL5Fb3Xqt1s1f1T1l7g21cPq
ZeVcudcbejTrN0Bvge48w///A6PLDOE=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9354991693056718, 0.7087479232641796, 0.4000474248475826], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
eOd27SnTPU2aL5c8/wEEuw1g
                "]], 
               PolygonBox[CompressedData["
1:eJwtlW1ollUYx8/z7HHPo/d57nuWFjp6GUYvVlKE0nvkHC4VAqm+BPtQzCmD
DdIiQ/oQsmovzqwcSYS9gMpkKdaaWlO/FKQkzl41bCt1Odd7XwzLfn/+z4c/
/O5zrnOdc72cc9c90b68LR9CeA4V0GU1IcyfGkIVupSFMIZGSszxPQ7fGENo
ZMFatBT+OgnhTC6Es2gffD1ja5irR3XwAcY2MteLPoEX4v8NfLWgO+CsHMJn
VSFsRgl8TRpCx5QQhtACuBetq2Yv1AlfzHyWBSjH+knWzMH2UXQJnldj34rh
Svg/9pzJWa5AY/CMGq9diWbD5xib4Gy1zE+NtpGtYjoJF1P71pl0toXYrM47
RsV6XfTa2SiBD2IzUO0zfwBfzdgi5hpQCf4Wn+P4/hl9nFjij9AQXMDmF3gS
nef7dOZaqAaj8FfE+GfBMSv2q9hjPbwczYTHWXOQtQfQGXga/max9xJ0g3yX
bVuHJpS76LPLRrY/smZYtUI/aP/EvjT2E/yvcph3TkfhbxLXXjHth79XTDnH
cBbuYI8mztuL3oJvq3Hut6hG8CblRLmn/v3wS6zpZG0Xehl+mLFnmd+B2uE2
9CX8LloFb8SmB9sN6BW4MTrWh9BN6lX2nMveF/DfUHbMiv03xk7DryVeq/58
HT5Cjt8uOd/q/d2MDTG3F22GP0T7FCsaTNyT6s1Z6AV4DaqFl6Fu+BF0borH
WuETaLTaPXI0dU2111b0ObwiOrb3VDO4nrFtxRCeRvPgPYnPojP0KdfEcKjg
nhiB95Yd2zAahFuj76pyqFyuZOzxgnPSDHcwdjzvnCq3T6FteddkA9yKza0F
13A9XBUrvYkm2D8fK5zzXepB3blKTeCuxLXUWDf8V/Rdb0a/w/3E1Ebs96I+
eAC1l1yD/fCnmXMjm13wrqRyV9CriXtKvaUc7FE9sbmvVPEBL47uBb1ZertU
Y9W6CVUnzrFyrTvdADex5ruic94I3687Rf0G0d3wpsxnnYbWwf2MPU8t30eH
4Dc5Q0/BOe6Dt5ZdC41prpk1J/CdsH4tnKF6vqejC6xv4Ht70TaPwbew5jC5
uogWw09m3ltn1FlPJb6runO6e7XRb6/enGL0m6O3R3c2F92z6l3dsd7Eb7Ly
oTdjOHHPqncV0zupY1bsemNu13uMj0KVe6YL7kTb8+4Z9U539F3V2Gr4VOrY
1PPqfeVIuRpDx+FfsbkLf3eikeicKDeq4YvqhdR3SzVogQ9HvxUlNAAfQyvg
+ehI9Jjm5PML+G+0Ct6C0rLfAL0F+uc8CJ+P7kX5kK+b2fOZomtwD3wy9Vkv
53sSXlJ2LXQnWuDpZftWjebC/6S2XaSasn5n9NmUsx3RMSpWnemPaBvZas9r
9X/NfNfVEzPgB1L/C/WG6C35H9HtDVk=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9541467561374343, 0.7553668903435857, 0.4578549440260463], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxNV1lsVVUUvX2vfQXfufc+I/phQMYWJ6CQKIb5B6tCS8EK8iVDjGEuKgFF
maIyhKClaGLKWL8ExVa+BMVA0cSIFRFipFUQURRQGdQY47SWazXwsbLfPcM+
++y99j779Z6xYNL8TBRFC4uiKAv5SHEU1QPTgPMlUXQB2AuMwuRoIAa656Ko
R07zlLfktO5byDPA28DIrPYE4MbSKLqpVHN7QhQVMHYEckRW6/LWPQZIsjqP
+vaVaP8on7vCulcC12W1n3vfwgWagWXANnxvB+Z7z2jrTKw/Bd4pke08pzf2
TAIeBGZjbjMwB/gHqIAP/s0Kg/E7Ao7GUXQF8t1YY0M8zrWDvX6Qv6njV8jf
gFbguVj+nRNr7HfgkH09vVj7HvH3wGLZRft6ZfTN+b+zOp96DwIbraPB+ADY
ZJtoWxHwWKz9D8TaP8i21dsu6njJ+jj2Bs57E1gK7Ik1t9Wy3jbuRvyGQcfH
kG3+zbEp8Ola4GFjHTAVuD6NorHgwJ9JFNUC5zA2GnIy5JoS7Vvjvfx9BXw8
AFwGEpzdSF8GxWeLY0S5FZgLlHlfObDauqj7D+ypIxdi8ajOnGh0rBnznon2
lEJ2KxVfyeVy36E/0M/6eA7PJM/mZWXvOq/7N9a6C7HuR46Ra8yXaufMy7Dn
FP0bxOX/c8JzE5xLB313+qDa45xfD/uqIJ+EnGMf0pecr/HeieYzOVPlc3n+
OdtBm05klFftkF9mlEMcY8795Lyb5xwa4XXMpQ7IrzLKoa8z+mZecYzfzOuT
1kNbqKve/Jpm2WCuN5inM8xp8vGw8zS1zrzrA22twfeqjO53WxA37wvax5z7
BBiHsWeB8a4HLcDyjOLBuByHrHQO3OkxxpP5dDqn2DPuFxJ9tyey6R/rH+8a
U5XRuhtd08rNEeZ0mTnI/CQ/P81e5ctnrk1VtqsauBV3eBqyEnIC5MqM7lod
FMcqyGcgd/tu3LfCe5f5m/oWYN1OyAmQu4Lq48agb47PCdr/lvdNCTqrLuhu
9GFbVmdxXacvl9mfNbZtlc/n7wm2Y4V/j/NdeKcKoAy/B0HWQvZxje3r37Xm
UcFc6u15ztEW1i/a0+r6yRq32/bTrkOudQ2ui9NdcyvMqcGuodM8z++ZrokH
XT+pm/FhjTziWB1xvNpsQ+fYZ44hecHYt+R0zkzr7uT39Gtq5Qux1mzyuum2
reKaHJhhe1pdWwfaX7VBNZh3Zkxa7QOewZxY4HeRviH3+JZcMf94txbbyRoz
2bWRc7XW/2BQzZpq7m72nbf43kXFV7l7xHc/5DeLfh8Uyyf3xjqv3Pyf4lrI
70bnzWbLNv/eldEbQ6602e9bXG+2+26HvafRdXab52+PNXd9fPUNmGts9dqn
rZ81YoT3jbRc4N+fd4mikq5RdAxycVC9eMk1eY97DPr+lDk3FGvvAXLATuT9
LuAp4FCi9R+6Dq90LX69VOuWlIrfJ/2mFhV07l+pxk45xrMwNttntLu27nR+
tzjHaMMsr2l2H8V+Kpcojl0hm83N5Tm9t4uBew3aUgmUpbJ9QKr3tV9Gb00f
5+elIuGix3Zg3Sj4aVOqfGeu9wAaYcdm232Lx1kn+gfVj+uC/F1nrn6Tyu+H
06tvBuM0GmMLgTFddE5dF43RT0Ptc9pJ22hrme3tZ3sv295jQT3eiaCaSFu7
A2sTxWQD5P2xuD0+lv6cOfBLkWoQ79z5zpGnfyTqXf9K1H+u9HvcjrEOx5i1
lm8V39Ingt7S9UF6qf845MSg+lbjetxh/bcW5L8hBcXutOM3JhXHKukzx/UA
5P68eoP3IHfEqi1NkBuCzn88SO9X9m2D+w32HXxHY7/nS2w7ebDcZ/J+sd9g
2rckiHv17OsSvedTE+3rcA684TiS25fsK/qsyb1KZ8+y3L3IYvOQfMz7bae/
DviOuyB7uVdkz7jENlbazhXWMzyVrjssX7feyal+j01l00nn1+P2zzrI7/Li
y1nIE6ni8y3kcPc7jOdv7hvZP1Jfu/1VbRvIgQFBHLwT8lf3a+RmnflMDjd1
EQ9e4xl58esMZNcgbv6YV69G/v0MnM8rl4qD+otK/3cagu9yjA9m3seqkzdA
xj4nAV5MlUOvOF85znnaTsmYbXAu1EM+hXUB449CLnKsGfNRBeX12IJ4Rr69
n5e+MT4rOFepd7X1UN/zsd661ZA9M7ob73Uur5qRDeq133GPfimoBz8aVM9Z
x4e5r97n3nqu6/pw5zZz/DLk3e7b2b+v8f857htrfnWzrHRPP9x6GOPO/67s
VVv8TjKuNxdUc7oVFBvGKBNk717bfNQ2/xzUqzPujP9e20wbhvkuPPP7vHzQ
Abnf7wXfjQOpePFRqv3kDmP8UFCf9XAQL8nPHyBnxepf5kLuS8Wz3fR9QW/C
TQXVXNbevkG1+6LrWj6oj+sXZAft+RpyovOa+c23pdH1/Fist/4LyLsKmqso
qP/u6Trf3TW2h+PM8Ynmf5NzoIffBXL6FfPz1VTfNd7T5Pzg+qWuJex5Pnfu
cL7S9XAc5B3uPdiDnMwrd07nxcXEPA/XcJ/zvdxjnvUbxLeokx/kBvvcZr+3
+2L1OPsheyfiYN9E8WBcFrq2H7fdWb+/fIcXpbJhKeR/Yww4FA==
                "]], 
               PolygonBox[CompressedData["
1:eJwllVFollUYx8/effu29Z33fT9RvAi1ZDNLc1qQhUMbhK3aDKe28KowJHTR
NszEDNTIRhKluZuwi7SbctSW3hiLmYJiJGFOCZ1lqKVYTWdlEJr9/vwv/vB7
z3nOc87znOc579QVnUteTkIIXaiAfiqFMFoRwlV0Dr6ExuDr6DL8VhrCNgyf
Q2/CMYawCAeTUG20jWwPoiH43yyEhdUhTEA34FewGcF2D+qED5Rsewh9DVcy
Npm5Keg3vhfzvRRegp6GP8HHxiJ7ot1wFWN3JT7zr9iPMHaeuQE0DE8oh/Bw
LXaoAr6IzbUKx/QLfDkP4VRNCEXm/4P/wV9nZQgfoTLxLWTsU86+DjXC41PP
fY9mwt8w9nGNfZyBb7LnRGyb0Xi+a/leXhXCVjQVXhQdSxtqhY+jMr5ytBe+
jprgR9Fp+FXUj+3PaAc8E9XBy1AD/Dl7dLH3ArQLfoexM4lzrFw3o9fgDeg+
+DFysJNYV6GH4OWc6Q/ONoV8rYEL0blXTpXbBmI8zlkquO8n4VE0vcoxVWI/
G5tp2NajWfCcsn0r53fCSXRt6E6vlByjYlWMJ+Ee/L2A7160C24hhj5ydxat
gPtRd41zfBD+ljXzWNuI+uHPonNzDvXC50uuXd3xBXgWa9ZX22dT7jvR3Whs
GtwRXYt9qjHVWnRuVXNtcD1qTVzjqvVRtJq9O9Cw7iN3bajG7859Z7q7LvQ3
/CM5ulh0TYzBR9C+osc09zxrRqpdY+1wHWtaEu9ZgieSw0fI5Wp0L5ym9q0a
Va3WZa6tQTQ/8x3qLhejtzPXtGpbPiLrt7LmdOIaWRPdk+pN9czvmXOq3N6B
+hQLY1fw/SVqhLvRpKLHOtTPmXtRY5qrRj3MtaMq+P1oX9rz3Wgf8iWbuZlz
qFzqTr+D/0I7K53jMfgp4m2gNm7x3QzvR4cKfoP2wTOweT1xzqbD90fXonpE
vaIeU6+9gZ7RfGpfx9CM1GfUWevRbb5PpeY/8X8C7kj91ukML8JfpZ7TGXSW
cal96cwZvJ09vmCvAbQO3hbN6mH1smpUtaqeH4C3Z76rzWgPvIH7yqj1JvRe
7jvV3apH2+CjjO2ucc8Pwk9E97ZyoFx0oc3wJtQOv8SZHiy4x7bA3dG5kM2z
8Ae591KPqdd+wOZGwT2uXn889VunN0BvgXpEvaI3pSW6R9WrOvNavX+539ph
vi/prKl7+zAahFtTvyU60yqdreza/hAtgHtzv2UR9cDHcvtSzIr9Afa8J/Gb
Myc6Z8qdemooc8yKXXewFh5KvbdiOgmvzO1bPafe68v8r9A/Rf+W/wHVBur1

                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9727943429691968, 0.8019858574229919, 0.5156624632045098], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
                "]], 
               PolygonBox[CompressedData["
1:eJwllFlIVVEUhjdeh3vp7HO1uV6iCaIyhx5Cgsii0ZIs0/KhIIrIsglspB4q
G6GRzIoCmyiwaLC5bCCk8CXC1KxoIiiDJmhEou9nPXzwnX3OWXutvdfevecs
mbo4wTk3DxLhReDc+Ihzq+EP/hR64N3hOv46dO5DsnM9U5z7gU9hbBMBKqAA
b4g7dyrqXAu8wsdBDd+ugZH4Wojz7iXP5fgB/rnJvzegEh+W6lxZzLmjMBbf
zdgb3r2FlcqFseEx+yYddxCL2VgaXk9O78mvFh6EFlOxP8FBPD1uuYyH/vi/
0GrJgy48N/NNz4jV3ISfhTS8I+zHa/mmPGo1qlb9o3/XwUB53GpTzar9EZzg
2+VwD5/JfL3I7XOSc8V4e2i5dIPf+BbPPGzEXKjA3/FPU9RitOI/yWFCxPZI
e/UXVuFnoDPfL+P5ErXWwgw5jIpYDefx77AMXw6t+E7mLEi2nLbhhxi7lWB7
UoXvCWzt38EqvJIccqO2h7twz5zVxDoGv3n/gbGUmOWs3Ot4/4ta6uEmfjBu
a6EYipXPWJR3OVCGl0Is0cb0Lg+eEbsFsrztqfZ2A9Thi7yt1VBYoPq9xSqF
rfgYeuII+SyEEXgH/pnF2u+CPngMduAlkIxP8hYrASbgexkrZK4KqMHvMNbA
u3Zowm/AYfwQnMQ7ejs72hPtjcb0Tv/cxpthQJKtSaO3mlSbap6Mp3vby9PQ
BR/rLZcIZODTAjtrm6EQ3+6tVuVw3FtPqbduQQHelZpzYrYnQarFVGytaaa3
mlW7corgX5VDkq1RNLQ5NfcTvh+ET2bOjQl25vPVH6HthXpIvaQeVi/rDH4L
rSfUG+q5H4H1nHovFxoD61H1qmJOx+fTE6/5P43+WI8f89Y7OhPVeBVjo6N2
BmvwEub4Tq59ma9cvUGMNmJ9hAv4YJiOF0E6ngXFOhuQjU8kxrkUm3M2PpIY
d5MsZhHeFre7THeM7porgd0lmuNyYHei7kadyed4RmBzaY5M/HFgteoM6izq
DtFdojttH943tL1SD/bGV4RWi3pud2hroLVQzfvwh4xdTbY7WHexelK9qbH7
odWs2nWHXcOzU6331QMD8Ky43VWqWbV38ra3OsOpeL/QzobWQGvxzFuvqye+
eLsDdBdchHJ8aWCuO6c4sJ5Ub2rNh+D/ATS817o=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[
             0.9914419298009592, 0.848604824502398, 0.5734699823829735], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
auqJ5T3Ies/9H5V0Fqs=
                "]], 
               PolygonBox[CompressedData["
1:eJwllElIVlEYhg/66+9v/73XTNQwocJaCJaVGVSLBheVSmlYkYEQUVCkmE0Y
RUREgwvJILOghVKRDRRaEkgZRC5yl+aASYNBow0UiFg9L9/iheece853vvHO
2l5VWhnjnNuMQqjOc64GaEHX4W7fuY/xznWgZ/BBVAZnoQNwZpJzKyLOVaN8
uC3gXgLn0H34hme2etET+B93ZoadK0GpfG+LOpcR69wM1A6f4UwBZ1ejGrgS
TQvZ3j54q29v/4pzbgs8xF4cnI9+wDH44EfMp3S4kTcK8CUZNQTmk3zT3i34
PDZOxVtM9b7FqFi199Q3H+TLfnQO7vcslpeoyzOJ5cMgvBBNYT1IPLnwg6jF
lokewo/Ye8H3HnQNrkIpIYtRsQ6gediaZN0Hz8fHY+SqCGUHZkO2vlC0S/AE
amVdi8bhFs98VQ1Vy3bu1BJrK+qBnxNTJ7GNoRF4LrrIe91oJbwrsFy94b0d
cAk23mP7HVoPf2IvkdwOcOYDfBylwWtQEzydnC+P2Jmp8HfuVMRZTGNwHnuV
ETuTk2Q+ybdhNAp/DoxVQ9Wymjt7iGUp2gtvRKOx5lMpnOhb7Rejn6xfkYNC
vhWhfngB9u6GLYfKZZ5ywrc2tMgzn+W7cnQvsDu6q57siNoZndWb+XCh3gxZ
jVXrP1HL/RE0DHv4szPOcjoH3u2Z78vQBjiLvS6+1aPZ8ATKCNuM/dZdfBgN
W06Pwm99q5VmZtK3GBWr3oiy7uXNdbEWcx98mL1szpejBrhYMxY2m7Kdi06E
bW8tvMq32o+jcvivb70mn+SbelS9egU1wxd8s12HbvvWA+oFzfxIYDEqVuWo
GH7sWS+r5zvhHM9mYwilalZ8y4V6JAFuIoav9PY3dBlO48zJWKvZa9Z3fHtb
PaxePuuZb+qR0571rHpXNa8I7A29dROlwMmesWZGs7OEHrsasZ5Ub6qGqqVy
OhS1f4z+NarZJt9mQLOgmS2Dt/mWO+X8kGYparOpGBrh9MD+dcq5cq9/pP6V
zagA/g+wKr8j
                "]]}]}, {
             EdgeForm[], 
             RGBColor[1., 0.9022864532247092, 0.6605370997963299], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
3n1JvgvoG8Hn5DD5zmXcd8qPvwLAYGkK
                "]], 
               PolygonBox[CompressedData["
1:eJwlk0tsTVEUhhd177mkZ+8z0V5BpBKPeEykaIetKhWPuGWkFTHRTlQaWtyI
50SkMUAIhqUG9Yr0DqUxK4kY0SAVrzaCRGMmhG/5B1/y5Zy91157rbXr9veU
Ds40s2aYBYdTsz5kI/Tib2B9ziwPr/Gjwawjb7YS+vGqzKw422wLLMC7o9l0
Yra4YHYa38uacfa+gk68nRg1xK6FXfh89jSxN0IR/8uaEvvr4A++gxijiWJ2
4UU4m2hNDd7InjJ7h2EzXs+3i4n2bMcHOeMWZ92GAfw9MX+Q+2N4h29jzSRr
R2ArXs+aySqzKViLf43KbYL7fMHPRN2tHW7gN6P8HFTwpcQc467XYElQTI/t
ObfhD/h2nbOfwVjQGX5WBSaqzV6wpkKsKfiG/+R/V049mMZH+DbMvzI8wi8T
YyCvnlzCF2XqhdekIVNO/3OD5/j3qNjeM+/d06BcfsNHfB7/OxPVcA3+IagX
XjOv3aegtav5ZvzvSTUrrXAIH081Kwk8wU96zwqq8Qm8mf2/cqpRE54G1eoA
VAfF8FhzYTfeETRrvmcPvgGGcpqpFnw59ON9sAy/F9Rbr8ndoBw8l5fEG8Vr
o3JfBTOiaui1bIOH+M5UZ/uMlvBjxCgQqxGOB82Qz9IRuJAqhsfymnntrgSt
bYBy0Mz47HjPPke9AX8LHnMfPifo7t5j77Xfwe/id1zhtYHuvGbmPr6Jng3S
u15oyfSG/C35zK7Dz6fKzd+wv+WFmdb6G/O3didVLfxNDOGBmK051fBtqpw9
dz/zKn4qqjbeQ+/lP1ueiVc=
                "]]}]}, {
             EdgeForm[], 
             RGBColor[1., 0.95, 0.75], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
7LYIO+mc/wNp2to1
                "]], 
               PolygonBox[CompressedData["
1:eJwlkLFLwlEURj8krZ/Qe22RiBIu1dBQDdqqW2AQzhpNVmBrhUtBu4sV2B9Q
g9TW3FhItQZtNTTk0h54Lnc4cHj33fu++xb3jnY6KUk5mILinNRNpC0o4O9R
+pmRHuENXwrSbVq6g2X8G1anpf+M9BX8zGrH8DkrbdPzR/0J6vgYFhKf+Yuv
Q49aE9bwE/o3mZXALj4fvdaCVHTM7U3hVe58pD3TCn4NA3oP4Cr4DraLvZnH
X4JnHcEzXuFsmPjOZfycmQ2yleAM34/utkMbv6TnMOMZT/GN6LvZDrZLM3j2
LLSCY24Za/hD8Lct4z3eD57VZtps+2P76wt4xW+iu2Ua4BOGlDa0
                
                "]]}]}}, {{}, 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               
               LineBox[{3598, 3548, 3625, 3624, 3623, 3626, 3651, 3652, 3679, 
                3678, 3677, 3680, 3705, 3706, 3734, 3733, 3707, 3735, 3736, 
                3759, 3760, 3785, 3786, 3811, 3812, 3840, 3842, 3863, 3841, 
                3865, 3890, 3891, 3892, 3918, 3919, 3944, 3945, 3969, 3970, 
                3995, 3996, 4022, 4046, 4047, 4048, 4076, 4077, 4099, 4124, 
                4126, 4127, 4152, 4153, 4168}]}, "3.91`"], 
             Annotation[#, 3.91, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzDEohAEYgOGPUfdjOkoGA7Pibicl5cKPiclgvLvuFItY5W46k/mKhZLs
WEz265SLMlw3Yb54hqd3e6f2SmlxICLWGUsi3jMROZ1njjxbbJKywRrblClR
pMIBZ1Q5p06TGldc88gzLZ5o88Y3vwwNR/xoRhOmmWGBRXbY5ZAjGlxwwy0v
dPjgkz5/ZEcixpllhVUK7HPMCadccsc9D7zyRZceg6M+TDBJniWW+Qd3ey1u

                "]]}, "3.68`"], Annotation[#, 3.68, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxT0oBAAYANDPps5/ThnJpC5OymoyuEgGyUJSSiEDo1kmURxGuekWOr8l
pZQyO4SYDBYWyl3JG16vZXJ+eK4iIibYrYrYIcsWm2xzwjFHFDjglAfuKXLH
GU+88MMzv5RpqI4oudFNpEjSSRcZ0gwwxAyDzLLACqvskeOcfS64pMgjn3xR
WRORoJU2ehlhlDEWWWKNdfJccc0Nb3xT5o9kbUQ7HaTpZ5wppllmgyx5Dilw
yyvvfBB1EfU0k6KbHvr4B4ZgOqA=
                "]]}, "3.45`"], 
             Annotation[#, 3.45, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxU0oA2AAANBPSqmN1cp9SanZhju5IBmZv3HdTS0/aShnyQXLTzlyVCKO
aqWk3BxWsnJycVKU7CB5h9dLFJYmFxtCCEV6IyH00E2GFF0kSTPNFDkmGGeM
LDPMsUKeZWYpsUGZdfZZ44AjLjjkihueuKZKjS9e+KZONBrCj2OOkyTDEGlG
yLJAkS22OeWMWypUeeaDxpYQmmgmQTt95Mgzzyo77FLmnAr3PPDKJ3V+ibeG
0EGKAYYZpUCJTfY45oRL7nikxhvv/BGJhdBGJ730M8g/5+o6kQ==
                "]]}, 
              "3.22`"], Annotation[#, 3.22, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxjsoBHAAwOG/xyVvVyYLojwHC8sNBunEoC6ZpWS4IlzKLkoyyKyYlGKw
KO9NkeEuE5H3M6VkkOIbvn6/6sHRxEhWCGGSw8IQDthjn2eeeOCeO2655opL
HokUhZDLm8/RV83WF83XImoppIYC6mikiwbi1NNDgiS9jJJingnmGGeBRdbZ
5IQNzsjwQZpPvigpDiFKI83E6WaYJNPMsMwW2+yS5px3/oiUhJBHJW3EaKeP
JGOkmGeVNdY5IsMF73zzQ7Q0hCqaiNFJPwMMMcUsS6ywwQ7HnHLDE79klYVQ
TgUttNLBP2hxRCY=
                "]]}, "2.99`"], 
             Annotation[#, 2.99, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNw7krBXAAAOAfw6McTyKDKINjUrIZFFIY/QEGcg1YDQYpcj+e4y0GkxID
4eUaTAYpLIiIMpFSJsrxffWVtA+09qeEEIbtyggh4pKLzjvnrDNOO+WE444a
M+meCXdcdtsFt4y777G3HnnjodceeO+zvz7544MpmSGkW2yahUYsscx6S220
xS6b7bXfMfucMua6m5575ZsXfvhpRlYIUcuts9EmO+1xxIQrrpr0wEtffPXd
1OwQ8i2yyhprbbXbAUecNOaau5544Z2PfvplNBpCnhVW2mCTbXY46JBxE264
5alnPvnit3/m5oRQYKXV1vsPSs1Lbg==
                "]]}, "2.7600000000000002`"],
              Annotation[#, 2.7600000000000002`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNxjkoBmAAgOHPYHFTymDAoETum5SUVSlJ5D5KogwG5Yr4U0rJZDDJFYOU
yUSxSGJALDZlMjiSeIan983sHWsejQohRKiNDaGGSioopYQiCikgn1yK6aKT
Dtqppo0qWimnhTK6GWCWfmboY5pepuhhnmX2WWKPRbZZ4JATbjjmmiPueOSL
B34IcSGk8efTNYs6MmigkSFGmGeYCCvssMclV7wRHR9CDHFkk0MDnfQzyBxr
bLDJMRdcc8srH0QlhJBMOhlUUEsTLYwyToQVttjllDPueeKdT+ITQ0ghmzzq
aaSDHiaYZJV1djngnAueeeGbX5KSQkgljyLq+QfCnkdk
                "]]}, 
              "2.5300000000000002`"], 
             Annotation[#, 2.5300000000000002`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwVz09IE2Acx+F3OUlszkEnhRaj+WdD6dJFPCixazMyoga7jA4dokSCIR3C
oiBEqGOHTjssogi8ePAQDGJQBkUUhOA1qGRFW6az1bPDw+fw8oPvmypdP3ct
EkJ4wOEjIfTSwyH+9YfQoc0+v2nR5Bc/+cEO36mzS9TtKBFGCJzgr7eUHuhx
3dOk/tExneQsE8yRJU+GM4xzniJLFChzkRtc4Ca3qbDME16wyXPe8Ix3fKTF
h+6W7i6GYrYxzTFmyXGZK9zlPlVq1HnNVxr0DfgTacY5zSVKlLnFHR7xmDXW
ect7vvCNDtF4CMMkOcUUeea5ygL3WKFClQ1e8onPNGgSGwwhQZoMM+QoUGSR
Mqs8pMpTarxii212aRNPhHCULCeZ5T9we1KI
                "]]}, 
              "2.3000000000000003`"], 
             Annotation[#, 2.3000000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNz01IE3Acx+G/l8DVWqdlSZCjCOnYpcuQpECoQ9pF8CILL4LawC5SUKP0
IHj00GmHNRSRtPJltuV0Gg6pQwQSRIT0MgsrOowIDz2Hh8/tx/fXkhrqGmwI
IUxSjYSwxSs22aBCmVWKvGCZJZ7zjKfMM8oTHjJLhhnus8A631jjKy/5TIld
VvhEgY8sUuMPJw+H8EtP6E9t0h96XL9rXPf0lJ6hgwRXOM1VbpCmi1t0cps7
ZBkhxzRb5HnNW+r8I37EFpJcIkUfGcZ4TIlNqtTY51A0hEYSnKWNy/Ryk7vc
Y5JHzLHANm/4Qo0DwlH/08wFLnKN6/QzwAPGyJKjQJF37LDPbyIx50hwjiTt
dNNDmmHGmSDPFGUqvOcDdf4SPRZCjFbO08Z/62hb0g==
                "]]}, 
              "2.0700000000000003`"], 
             Annotation[#, 2.0700000000000003`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzE1IE2AAgOFPOsTSNHEoUQdlhPdACJ1NPHSovHiJTmWBaKVbW675m7BF
EV2FQEzGmv0Qo24iRIcgGESHYDaCCA2FCLqMCIKg5/Dw3t6eK8nR6aYQwmPu
HwrhHgXyLHOHRRaYJccMt0iR5AbXGeIaCSaJM8EA45ziJks8ZZ4yczzhNiWy
FMmwTpo1plllig1e8YUKdV7ymRds85waz/jKHh3NIXzXdt3RNv2mUT3OMMc4
w3mmOEuaHGtkKVKmykca/CHaEkIX/SS4zFWWKVBig3e8Z58fHDgcwkG6iTHI
EJcYY4ElVnhEhddU+cAu+/zlH52tIRzlJH2cY4QJJslzl3WKbLLFJ2r85BeR
thCa6SFGnNNc4CIpMjzgISXKvOEt29Rp8JvIET9O0Msg/wGQEljq
                "]]}, 
              "1.84`"], Annotation[#, 1.84, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwV0DtIFXAYxuG/EqTmjdCiKA9Hs4tIWppx5CSog9ooGmpe8o7LcWjLQdxs
TYsIOchB3MKtFhEHQXHxRkjoIiaio7hES4/Dw2/63uGLDoy3JtJCCIs0ZIVQ
Tx2vqCVGDS94zjOeUs4jSokS4TwzhHt6qnf0RG/psRbokT7WlwxSTT9V9FFJ
DxW8pYwuntBJCR0U84b7tHGXVm7TzShfGeYLQ3xmgFneMUMv30ixyzw7JNli
jj0OybkRwoFm62/N10IaaWGMJhK8J0mKdTa54JKb2e6IEaePfiaZIsUCq6zx
h1PSc0K4RoQoceropocPTPCJWb6zxAabHHHMX/5RkOtfVFBJM68ZYoRJppgj
yQ9+ss0OZ5xzPS+EDIqIEKOWNtpJMM40H0mxwDIr/GKfCy6vtvJDyOIBD4nz
H34oUe0=
                "]]}, "1.61`"], Annotation[#, 1.61, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwN0U0oH2AcwPGHDfP297KU8hKRy7Ij4rRSY21eJiniYDmxudqBHORC2ly0
bF5ynNtS2mU5cJLEf143ZCNOOFGL+Rw+fQ/P7/A8v6ews/f1u5gQwhxniSGU
JoXwhBKKKSCfc2c5eqrZ+lez9Fgf65Fm6qGm64FG9Lem6C9N0n19pHsar7v6
QHc0Rrc16Jb+5yd3RLllk39s8NBcBvWkUUcqr0jmJYm8IIFa4qghlgZaGKOZ
UZoYoZFxPrHKBOtEiSR7K8+opodePjPNMitcckVGih1RTgXtdNDPADPM8oMl
/nBCSLUTcsmjkipaaaOP93zgI1+ZZ5kVDjnimhsyI+5BKU95Ti1v6GKAQSb5
wgLfWGOVM06JT7N78sihgjKaaOQt3QwzxAxTfGeRKBtccUFCun+hiEKquAcA
WVQ2
                "]]}, "1.3800000000000001`"], 
             Annotation[#, 1.3800000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               LineBox[CompressedData["
1:eJwNzj0sHAAcxuG/oAnn41baASvrEZZanKGLGETCwngVJhZM0tFHxxLMbCyN
pLG4pL7OR8ykkYjJORxFKvoMT355t7dxeKx3tCQipslVRJzyxAmPHPPAEfcc
cscBBfa5ZY88u9zwmyL/SFdGvGqXvugzf+m2vzDLdxaYJ8cRlYmIBJ/pJMNX
Fllihyx5bqmtikiSopUBBplkihVW2eYXl/zhnTc+VkfU0U4b/fQxwTjzzLHO
Gll2uOCcR4oka3yhhWbSdDHMENNMscgPNtkgxwHXXFFeG1HKJ+ppI0UvPYyQ
4RszrLLMFj8545QCeT4kI8poooEO/gOsKk9H
                "]]}, 
              "1.1500000000000001`"], 
             Annotation[#, 1.1500000000000001`, "Tooltip"]& ], 
            TagBox[
             TooltipBox[{
               Directive[
                GrayLevel[0], 
                Opacity[0.5], 
                CapForm["Butt"]], 
               
               LineBox[{2502, 2501, 2540, 2539, 2628, 2627, 2698, 2697, 2763, 
                2762, 2825, 2824, 2878, 2877, 2920, 2919, 2969, 2968, 3010, 
                3009, 3053, 3052, 3086, 3085, 3124, 3123, 3162, 3161, 3194, 
                3193, 3229, 3228, 3259, 3258, 3297, 3295, 3326, 3324, 3354, 
                3352, 3384, 3415}]}, "0.92`"], 
             Annotation[#, 0.92, "Tooltip"]& ], {}, {}, {}, {}, {}}}], {
         DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
          Identity, Frame -> True, FrameLabel -> {{
             FormBox[
             "\"\\!\\(\\*SubscriptBox[\\(N\\), \
\\(j\\)]\\)/\\!\\(\\*SubscriptBox[\\(N\\), \\(i\\)]\\)\"", TraditionalForm], 
             None}, {
             FormBox[
             "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(0\\)]\\)\"", 
              TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotLabel -> 
          FormBox["\"\[CapitalDelta]\[Theta]=8\"", TraditionalForm], 
          PlotRange -> {{0.01, 0.5}, {0.01, 4.91}}, PlotRangeClipping -> True,
           PlotRangePadding -> {
            Scaled[0.02], 
            Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{{}, {}, 
                  RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgB2JGIAaxV3xk/j3p23v7P/W/NlTuf20fvuDTtV+ij+21
s5YKvrY7Za+of1Pgq+p1+4W3ji0L+vvIftntNy962y7btxUxH5/pc8s+67Ri
+IKKJ/ZH3+2MkP9/y37N4Wln97+5Y18nE2NV7vbI/nODc8oN64f2l0S0rjzt
uW8/IXearJ/IA/smLi0ZxR9P7P9sinvbKvbQ3qN2IaPXkdv2IlMErmRueWE/
IXrFhxlpj+yz5cVOfI+/br9E9nv3poI39kosnz6v3vbYfvLBrr6lvy/ZV8Q4
KN4Me2vP0j1RQNPgqb0sV7+J0/Or9gw+xl9mv39rf/3hB3mBdc/szxQsaU6Y
ddO+01rteFzHO/u1FgH637Vf2Ldc33mpzveuvZC25CxFxff2Lf3r7e6tfGkv
O//5BL+GB/azpXhyn+x8bx/1jM/vqPpr+8qgoh13Ix/ZM4DBB/u1WuzX2++/
sWcr0N0sp/wULp4GBu+g/Bf2AA2wsm4=
                   "], {{
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[-175, 2]}, {
                    Rational[-15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[175, 2]}, {
                    Rational[15, 2], 
                    Rational[-175, 2]}}, {{7.5, -87.5}, {-7.5, -87.5}, {-7.5, 
                    87.5}, {7.5, 87.5}, {7.5, -87.5}}]]}, {
                   CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -75.83333333333334}, {
                    Rational[
                    15, 2], -75.83333333333334}}, {{-7.5, \
-75.83333333333334}, {7.5, -75.83333333333334}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -64.16666666666667}, {
                    Rational[
                    15, 2], -64.16666666666667}}, {{-7.5, \
-64.16666666666667}, {7.5, -64.16666666666667}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -52.5}, {
                    Rational[15, 2], -52.5}}, {{-7.5, -52.5}, {
                    7.5, -52.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -40.83333333333333}, {
                    Rational[
                    15, 2], -40.83333333333333}}, {{-7.5, \
-40.83333333333333}, {7.5, -40.83333333333333}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -29.16666666666667}, {
                    Rational[
                    15, 2], -29.16666666666667}}, {{-7.5, \
-29.16666666666667}, {7.5, -29.16666666666667}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -17.500000000000014`}, {
                    Rational[
                    15, 2], -17.500000000000014`}}, {{-7.5, \
-17.500000000000014`}, {7.5, -17.500000000000014`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -5.833333333333314}, {
                    Rational[
                    15, 2], -5.833333333333314}}, {{-7.5, \
-5.833333333333314}, {7.5, -5.833333333333314}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 5.833333333333343}, {
                    Rational[15, 2], 5.833333333333343}}, {{-7.5, 
                    5.833333333333343}, {7.5, 5.833333333333343}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 17.5}, {
                    Rational[15, 2], 17.5}}, {{-7.5, 17.5}, {7.5, 17.5}}]]}, {
                    
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 29.166666666666657`}, {
                    Rational[15, 2], 29.166666666666657`}}, {{-7.5, 
                    29.166666666666657`}, {7.5, 29.166666666666657`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 40.833333333333314`}, {
                    Rational[15, 2], 40.833333333333314`}}, {{-7.5, 
                    40.833333333333314`}, {7.5, 40.833333333333314`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 52.5}, {
                    Rational[15, 2], 52.5}}, {{-7.5, 52.5}, {7.5, 52.5}}]]}, {
                    
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 64.16666666666666}, {
                    Rational[15, 2], 64.16666666666666}}, {{-7.5, 
                    64.16666666666666}, {7.5, 64.16666666666666}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 75.83333333333331}, {
                    Rational[15, 2], 75.83333333333331}}, {{-7.5, 
                    75.83333333333331}, {7.5, 75.83333333333331}}]]}}}, {
                  Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.500000000000001, -87.50000000000001}, {
                    7.500000000000001, 87.50000000000001}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.500000000000001, -64.16666666666669}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -64.16666666666669}]}, {{
                    7.500000000000001, -40.83333333333334}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -40.83333333333334}]}, {{
                    7.500000000000001, -17.50000000000002}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -17.50000000000002}]}, {{
                    7.500000000000001, 5.833333333333335}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    5.833333333333335}]}, {{7.500000000000001, 
                    29.166666666666636`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    29.166666666666636`}]}, {{7.500000000000001, 
                    52.50000000000001}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    52.50000000000001}]}, {{7.500000000000001, 
                    75.83333333333331}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    75.83333333333331}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.15\"", 1.1500000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -64.16666666666669}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.61\"", 1.61, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -40.83333333333334}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.07\"", 2.0700000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -17.50000000000002}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.53\"", 2.5300000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 5.833333333333335}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.99\"", 2.99, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    29.166666666666636`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.45\"", 3.45, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 52.50000000000001}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.91\"", 3.91, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 75.83333333333331}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 175}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.8953975306109053`", ",", "3.9789064327955135`"}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.23`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.46`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6900000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.92`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.1500000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.3800000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.61`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.84`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.0700000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.3000000000000003`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.5300000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.7600000000000002`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.99`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.22`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.45`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.68`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.91`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.140000000000001`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.37`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.6000000000000005`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "175"}], ",", 
                RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
                
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {576., -576.}, {
      Center, Center}, {360., 360.}]}}, {}},
  ContentSelectable->True,
  ImageSize->500,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.718846752115546*^9, 3.718846797544362*^9, 3.718846892756098*^9, {
   3.7190829207747793`*^9, 3.719082954134738*^9}, {3.719083011837987*^9, 
   3.7190830548249807`*^9}, {3.719086394098525*^9, 3.719086423353222*^9}, 
   3.719086478054583*^9, 3.719095455237328*^9, 
   3.719095525585287*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
zhzYjmw6Zv2mPfwzaRr69Ri2rW9CW+fAm+3pnjqunkLBmhyUVjag5/GwjHh9
7eePo6GhHk2Njaira0ZX31OZaYlAugW6lIPbNiAzKxubWo9j/NXkNKF69fRB
5GZnobJhE5ncuLRFetsvozR/DQrKqtF+/4nYeNdOHcD+01wXSB7sLP5gLx7f
izV0mJr12/Bk9KWM+FTZKW5dPMnzjnmFpbh0q5s9o4+l7X4PdeUlyKF2P3Nd
2u6vxkdxtHUjtV8mmra0kmVNSC+ss+0MCuloxRUN6Hr4XLyw84d2ovVo27QL
ezk6iO1N1cjKyUXrsUucmNILo4s+tW876hsa0dhYj/WCuYkZb9Y5Dt9uRs/Z
UpkfofdcGdX1XqjAvbvtmJiYkHkm2e7Jg7u4f66MPlsn8yGfzmBbo+fKRr7F
74SncURy8aw5Og6noOtQNB6dTv4AA6eTqHrgdCIeXczG/j078PjJE/HgV8nB
B04l4dHZVDo4m87AozNJxMYYbujvOHjn0QyMXMkEOgo/oOi/gFXfyQd6KnD2
1JGpB795+QjbALhbzHK+NKW7vltIwVvydx38+aUMCh4KPsBkez5VT7bnkbIu
x5mTh9nBFSUHfzUxgQnJAETjlBPSTnTSInZCms7gF7D//8kJV0/xkvOHtiKS
ZcWjo9F66pqMCKOenh6cPXsW58+fpw6TTWfw9XPnzknW/rW679r3woULbOlf
2vdd231Xnew/Ocfb2/2/eY7/jfNOPce/uu/3O8dM6TnYZzdv3vzF97PBf5fa
4CTu3riIfXv34eqtLtGgnj17JjWo99hUlj3nGdKlme+o+/A7P505fbvvYXj/
bLv/7eP9s4f4Q4/37e1mSc/B6i9evMiGJmV+/gPwQHFcbxsfoNl35hofjPQh
PXp7YEQcD9q8eTOuXLmC27dv08lv3brF8vo7duDq1auStXfVtbe3syzRrl24
fv067ty5Q/t2dHTQVbS2tuLGjRsU/NxlRaiegcrKSr67sCZMxU2F3dl0Bnbv
3i2tmyGZstN8Vx3b9zaduqKigp+DboWVqXdz7do1vvauuhn/Yp24b1lZGW+x
qdtt376dt8T/VCf7L24n1pWWlqKtre1b+7Jbfntfse5/3u6jqXW80PPj8/Ly
ct5c7GnV19fj1atXEjP7nsCYhRundsPX0xdrCtbAx5Ps7cJtqdpi1syeLDvl
1q1b2TI9L+ECjxw5ghMnTky7hcOkvMW6Ge+om7rdyZMnp223adMm7NmzZ9p2
hw4d+tZ2rO7UqVPf2k6sm7rd6dOnaa2dthMMf+PGjThw4IBkTZiy7c6cOSNx
JDYVro95t7D2po559VSrZ3XM26daOLsP1jZv6t7n27G2pDUqHcyPxDpqT8Gr
2DojBluTfUed6H0tLS28Pd/e7tKlS9O2Y3WXL1/+1nasjsyG1oTp1DpZPp0l
PQd77hs2bGCjbj+QYpdb6xCTJQ6ojSMvKQI7Tt4RKcaMijXW48ePZX7M636J
169eUjTyAsPPhzD4eABPHj1A3/1u9HR3ovteJ+523MHt9pu4eeM62q5eoXIZ
lRXlOHb0CM6cPomTJ47j+LGjOHrkMI5QvH3w4H4K3vZSj7iHbnBP624S27t2
7sDOHduxY/s2bN+2FVu3bKZr2UxU3YhNG1uwkaLmluYNaG5eT2UD1lOEs76p
UZbClgZqn4z0NNRUV6GutoZ//OLFGF24cEuXL/FXOvia+L7NpSl1v5L41vr1
66W9RF1d3Q9x4X/jM5b7fYGihAjU7RbGso5trURUail78USabmGnYbRgf11d
Xejt65deXnd3N3sCkvZ/o05ZK/f19vDAY/L1hAwTyeMyH+Dl+BiVUYyPjeDF
6DDGX4xgbOQ5RkeeYXT4mSw9uqd0WSP0AJ8PDeLZ0BM8e/oEQ4OP+fzp4CO6
rMEnA7J48vgh2c6J40dwre0yHg88wKOBflk8etjHshwP+zHwoJeXh/338YDK
wwe9snjQ18OG4fp60N/bLS19rNy/J4veni4Wfd+/h15Werpwv6dLFve7O+mi
9rTuxMULZ9Fz7y4v3WzOLYuZf3dXB937va4O3Ou8w9b4vKuTuXzXXdZZ8fW7
t9EpFFl0djCK8KqOdjJORpu7d27RYbZt3YTeXmFQk5Gor6/vB3rR6c3TR+sq
2Gjd3suCF/0B27Ztw1kypcHH/cD9TRQ6baB5C9BHEV1/C57fqELH8XxcO5CD
PfUxaCoOxJoUfwT6e8DP1x2+Pu7w8HSFm7srXKk4uTjD2dUZygbO+ErRGd8o
UVF2wWxVd8xR88R8LT/M0/DFPE2aa/ljvnYA5usEyWKBbgg18UK9MCrhWKgf
gUWsGERSiYKcYTS1jZxRDLWNnHEsFvMSj8Um8VhikkCfLTFNlMVSs2Rq0KXm
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
SG6OW8odfh/vspJQxShDFduiV6IkRIughDKST2+2Qrz7ctzb70M2cXIkUw1J
3tcJr4vka5m42xaOzHBj1Jd6YYrgRF/Nv78Zz/KGkSxSk4SOH/fdxZG2ZpQX
MWQczM6F+EQUlFWi88J1mh1WxrWyftQ1tsb7WhFqcb3UMJS3khXUCrWSXe3d
4aCjMsrWUMgx6mIYljD+Hc6mLFZgCUGOkev8GXbHcoQsw4h6SzzYZoZ0j8Xc
JY4Q8vRzuSHbHLmRRhgSFiIIcT2XV46TlzPQWuWJ1HAL7KtLwPjDRvYw2Zk8
2jKTApsyXBHaf1tx+Qf+2XMwOdqDlKhIxCYmo2xzDc5evIrB4TFht+w/vVII
rrYtxaLlZjAw9YULi2kdEhybCILjhNAw2BquRqitDi8CBaGxHdx0ZPkEj+lj
mWYo85jPpRMMYqioRHbLpVj/GW0JSwljqB/Sekhy+AzHs3XUDmnCypfK13Pn
t9v1DpweeUsCzO3efNVVvNtSnK115hWgfEiLFSCFNunsVRhDOKTJaTc5yBAn
dkcKg1y91f/x5pXfm4S2QCF27t+CkNBwpGfmYnfzYdztfYDJZy9FpPHeK8Xe
9HimX3WM3LFmtRF1b5V1nr/NergbLaI6b7aSDfHW4WyIZO3wloIN6UhZwuez
JWnEewqqcHvUShSHrsEEi12adf+7abCYcAad00NneTzz7u1MrhicgytNIciN
tcKmfD+GibexA7qdgIbGa4L5bysE/yA+/JcvptDf/5iXF5Kx6MhgP86fOY3e
x+NiX+nvXonqVTYlWLDMBMYWgXDzyYShtj4cLAUnq/igINjpLkGCm4nA+zHc
XBJoBG/9j9CeaqyiNTJMeDNpbzCZ6a+U4AcdESeTFiHW8k+4Vy5wfrMUR3VL
oibSXb6iXfKChm8WHy1pTDfkooW3FBPANMSYH7SSV3/kSiUFM3m13Wny5nSG
UP1lzlCVful4yUBze5U7UkJMcPVIisxl/KdCGI+p+39rRM8WHyq1wY+2H8Ih
miRtacHB5mZ2PNNu+Smc6TiJ+/0j/NvfunwGDbt2oungERq+EkJ7bADtzfuw
s74B56/ekTZci+ThxOgge1UTM6TBR1LK37t1DefOd6v6Uu+pCslLl/lGEV2j
jXh/ZaQqWdjhv0rXEbo65qrDn/q2CXBZv1bq285W9KTS7L5EtcdH1JOaqyiE
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
9KnvPfWdFk/NRbQmDpzptxH9w/4JyVdX4eIZgi8tC7TQYeVp5FEFSzNb3oGu
VZ6ppUiNTUSI3Xg5UpRrdQP7KU8P5JCmOVozRZo/tdCRCRdmmBs/RiY9cQsM
QWeYGtc4Kcnw4fpdUZg+trb7SzKkb9/mUFGdvNNi79xg1KbaYH6tn5L/V1Tn
fwl0PlLKcn0tZXh6vBZnN+Zg3cxIzK32R0MRwac6Aqt783Fw+3RcOdmDxzdW
4YcHG4HHm0klPN3Kn/ezrXTbRs+2i2J4Vyvaz0OS0or2v4VK79+/p41ONiGz
YGTuDWevJDmQ2NHBB0FeXjIMtiyLxL2jmQw9VIa+xsgskSSXUZLK70suOiPT
9RMZH3G9s29LJufwKwK+kgGsvKn7PTWryEXwBZmGMt+cQxJBRk8XM5zQr48z
kMmB9zfG9xXQhmi7NvfO9EFp9FSsn+6njIs+WKA3WAUOZzY4Lt3Zmo5u7kRJ
t8PhZSmavKEGOG9U4HDv2Ab6Wmqy3bCoLQ63jk5Xui4JOJ+9FZBevnxnD9jm
jZskM5sSHUN/Mf1EfyQ5MgpR5KuvXLnyp6ZnaTC0pKEI6WWdePb6Bzy4egxJ
tMQPnb3zUxgawNGH83b0i0nsIQB9oQMg7sKwckuDrbUzt2tqw44kQNzlMG9t
2BkoxyrlTxsju5luzTQfos6+4i3SS9PJCoSMlaG4XNcepoYbxgwnP7gzoYy+
kOMLI3hSy290piuzDLy4Khad+Q5oznPDqQ05GjP2n1oF2AeX78804uauYuzo
TSB0BdD/tQ9aq8KxZkEBDu+YgdsXlgKPNjNC6DthbGxhyPC39GgTq7hH9PzN
i3d2k/0SrPxdf9sVPV8O/55s7CYHB0Um1MLJ2k4GJDNW8pISMc1KXz3lMZrw
EoV0bz7wx1jCisZuNUdMwPTQLzkvqKvg5iWMRWPEaHw331mnP2SQJN/XFE5F
Wcg4XOqZJjOddKFymb6Omih9aQjhJmeyVRqocDMIj61bXumMijhTHF8cozYz
56lQGSJFLY4zvC2hmqzVksYAPOReyrMNelqcnFIKXM/JcnG3B2u37uYoCjBN
ShXrZo/eFz/PU22mr4NPLed9nsO4W46u8UnmOXSNW5P/p+FLL188J3v91vAl
ijktpQiNiEJJeTkykmJR2b6AzxGQt7/Ba0wvKXhHzHnbSjm5B+Er66J+kLF2
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
fq7qOZd6yXO+1EnCUosKrNXzxtpVGjTMyE+1BXj6Y8s6fk1cX7wCayHQmuGc
1vwvnItbQLTmLIVQsyVmEWIsP6cNF/zcxBtiUuH+k+ezgkbkJ0/5S67DGc27
B1wQ57mebszzLTLvK6DP6KV4lKdaIjXWnlX1O4TZXZaCZdcZaaSGcW6qG6pz
bCHSPG99767T1lwJfR2G+zLysb+uBrsq96Cjq2+WWBRJrjPEXGeJhjPWalpD
X98KxtraCPMSFPkZ3luQzxK/vcZHdNilJXUTq/A/R6HDRzM5KmJ/5YbQBUi0
/IhSjZRuGqOWc423qFxTk1NNAks1jw45KWkWfvMs2WMVtaum8ZCQau4cdKcG
L1emcRgvOwyrQG8fDiIZz/mDEQqHmUPVKL+Z0rovFElhZijP90d/d5UEhH6q
KJ2utOaxTzEn3+Jc42s6zJnDdSyfrkK++yr2GxV4rGJfUuC+HH5WmrjZeUse
9H3Ie5PCl1w5th/OtjaobDw7Q1oxcqAgHtHbauknjD+4zmK/F67cHWVF2whi
/T1QefiSqHyeXoLWeQGerk5IK6jDBKCm8A+JvXnRPzR17bFBXZdqA2JuXNyp
g1wgaJnJPzhtk+etSTRml0hjzlLgrULXz1EesIzTmMrUciFHB9GOSwXG/6Qv
K7KmVaL8vnp2oBbq8+0UqeUNAlw9x8KI6ueyudE+CmP/oeiI8cZJeUEASpIs
MMXPqd9M/8Fr7NL9Lq6hRpXxnpxEOHmyNHirf7aIYrlLPH06htGx51isbov1
2vbQ2mgGM30DhHi4w2DVVwxiWiPH2wAuWh9RmXs8SRexJn9FfcA8qhWInbH5
GHsCvpaOGOEByyip9l+iKV6deHllnZDMQO7RrE3TdYKAvg6lb0Kmrzo/pyC5
BN+DNHrSH5kBmjiUZ0OkjNIlHpwMI1KmpTaYXOJXkj2LOeTh5SwUptojPd4e
HecKZnK8JQ/9sKDEc0pqjC0uHBLQ2y++YSftC1xMa3MdjiXo0Er8t0gXMgsn
2IuSF2ZJm1ioQa8mvvA3zjXDxd4a6RUNmHoGwUF+gF3JISisPyV8/4l+hAYF
4XT7ffpj0440+ETlcItXWZKkhv477Qhxc0JEUg6Gxp8J3+w9FbbnzJX7Kv6w
Tssa2pqGQieMoSw3OyfYaM4Tt71byP6Q5bAQ26z+xmlMuVRmKOtW9kpEmc/F
pRxt0vRLqYJv1sz2XI4D6UZcRDGNsnxRk2KI/GhjyZY5JhZShUjnX6jzQQwz
2pON6QSA2ZOY8f8oio/6qmgif8e4RIl9/duKvba3brRRX50j2e9O8Py3iIyn
xsfQ9+Aerlw8i51lZbjc9ZDXi6KjPMWhim2wsHNB08VuNdFROLFRUlKCi5eu
QF3LElp6TtDR1MdWY1NEuFpji/oC2oyZ6LgeQcafkzyU1yqcxryYsJic5Eb6
CkSYfoiLaauJvuSSucuZ6xDBXl++TEw6psvvCp3O1kG842Ii5VmdMlNMIHx4
8f5+fk9lOd0cmTqrirj2ZZgiN1wPk1fiqVaZI3nLtSQMn4tGaoiwdU/2lpmU
CGaTODQ+xAz7K6Pw9CERQDPek2AWyyRc6VKcZs8zjXzY4F4xTh+pZKXzK1fL
ci85HKdNm+jforezcCReG7khFvQZ0jaq3mutcLKzRu3J9hmyd6SEqnhHCPeO
q8KqscGeNjjb2ONUR5/oHVLXf+TxIHpu3cSRQwys1TZw/5nxY/Gxjj7sRoir
PTJ2NHCxu4C0fqzCNrVcuit6TjJ5zuoNW6VxeBo3cLK0pnEDZl/K8iTa9GOp
PFFirKORi2jVB5/wGqQUMp1Izm/XR6zzclpHpEwkvEZpYzVKvLeGIFHtzBC9
5w3yHq60O1TsgnhWmt+4WMTHXP5TcpyxZpxqSkdSyGYMno2lwv+Hiiwy9fQx
8RyNjY3/RBb5i5jC+Wd332zHoX01yExLRqCfNxwcHODs6orAiDi09QxyMQ09
16PV+bB29sEtWcsqSIz6+/vx+PEIK1y2QMfAGXoaWrA120rKOxvtpSRC9d+y
AvGWX+MkK1z2hkwLJ7gXnYhahOgtf0dvsSbBr0EaBFtE5+nlooWfr681Q5bH
MhxK0+NXfVQqfX5nnM/VsYJlGn4JMwMxHurU0eJd4DliA4AriMZZ9Z/Hotqe
7S5SA+CXktCUpRreGN6Z7cQKfRt0nC+Saaj3lPTf5TLEBW8WrvvcK1O5EDIx
dJOezyu4qG9zJGkN/tije9hZsQt9o0Ir5kBOBAKTKmaJ/3t/XgziCvbR/5oc
6IK3uycudj+Wejj1ZWnwi8zE6JS0SmwGLfpmIflRH863nkR5aT5io8Lh7uLM
Hroj3D28UVC5n8+ZvE1f8CatAazdtRPX7z6iL718YjccfCMwJBc3b6kUNy0X
p11uCXO5ZWs2w8iAMzbM6djn+m3VgYv+Ik7uUqLaxQqb2ihjBOv/F1qjvyZR
rATcuNPluc6T+s/KRJXlvZLuBLFE9QMFncvHIJJ8NEiKga7MaVdj9cnktWTs
TLdGZqIjHnZxNH142tUOs0dciNhAY9xm0I672o++Qy1TEiQe1RaWB+xmf6/9
KS442tww3W/+IU31VJXulKd6etpaULRzLw9qeDp0D2V56YiOjkVpVT3GpiDL
ZMcGsbt0Fx6MTIio4U326d1wtjSHLgN1EUlZOHLyNDq77+DJ0wkxPr6B7ksn
Ubn/mBBxnz9BpJsN9hztkBxXulcyPPwEK9aaQNfQFRvVNeBsZQtHUwO4Gq5C
eaQdvDfNxzaX5TidZoQC56+RZfUh0XT3GE4scv4MpR7zpGtANPWTYP0ZTmVo
Ub3EHZc7cDtncGwXyD0QOfcddkFPjQ2iHJeje78r9UDUZKQYiJGTAUjz18SJ
MkdVpHgtEVUZlihIshI2YvaWikjvTbl319mSRMKNnQyiiz07Xh1NI0UG29Pj
HBjSDFFFmv9z5fS6rjs1fB9B7rZIL9uHmx2XEeHthPRdR4RX/23cPHsItrbu
aLlwBbtz4+EdmoqHj4dwoqkBjU3NqN9TyoCIAbZXnZR9l3IjjldmQHejFsxs
XVG+Zx8uXLqKvoHHvIv7I8lnmUllR3gjMDYHNzpvIjcxCAExuZQ9Z4oA8xt9
lvPbK42w2dhaTJMRcDHeAH8+sxQt+CxvxpQHaiPa8I+4lkLNmJkKgNmZtYIB
zE9xRezFKPPkpTwhTz5UyZNq1CyviNtEKl3mrLLfci6iLRH5iVYozPLEE15r
jTb9pwJb8p5iHIPpbfsEYvvHr+m3ucGWDO4aoCjQZA4KA03Yh/lwbEWUDfbX
VSv9lo8p+SjGlHraTqOgYh+ziqfIj/VHUHQWjh1rRiADI0V1xyW/fTrUAy97
d1x/+ET2W65ivHL+BJJjwuDq6oG07aW4fPM2pp5D9tveS42wsLZH4+k2XDxx
CPa29jjZ8UCwnA9kvx0aHsWy1UbQM/KgBU4e9g6wMtCEz5b1xBR66M7FDr+1
OMUSbpzZXOxy/xT3tq9Gd/YqxFv8A8dilxPPwSHrpYy1iLSYS3v/eKIdFA9I
lwevRkX4es4KSrn2CbHqWtgVp8/hqZBr1WhwqT5rC0Oq7MNXVFo+x3a4IDXM
VKYoBEedLQ1u4NieQMQx72k9nDmD6rlfKGQj1TtCUZrhxEHqr78fB31DdNM7
HWeREBkKby9fZBTuxsDI0xmSd+LZOI7sq4CfjzfCopNwrXeQVZa3kZ0Ui7iE
BCQmJiIhPg5lVYdl76T3GOq7g32VxfDxdINfcCTqGo5gYPiJCKFm41FfN3JT
4uHj7Y3YlGx03X8k/tSfqXAgLRfvCC6pK7gkH2ww32wvuCSr+Sx1ViPKRl12
SWlPR7zJfyl6o2oybk2wJdyqpAUL/FailtU0ihTK0eq5HTZI8tMSFtwytPpr
hSsOnotFZjSrMEtCMPHoIH9Y/6noe4w+2EchtbnMjVLoT75VqsLXOUwin6VP
K/VPWDCw1ZjLPuaoMx8+Xu58jGrGN89RvY2RB+1wsrfD1X5h5vbCgR0ITcqm
MVn+z/jwbeaUPlwHyf8aYmx8ju7rbSjKToanmzsiYhLRePICnoxP0RJk4frQ
JE417EGQnx98/YNR3dSKyeeQPFDQwYzi8dAIlqzQh56xJ9avWgt/Z0fY6q5A
sPVGYf2HSDgeT9RFtPFfcDhkPnseq3ElWRAQdG5fT1nzlXCXFY5cDBltJ6yz
fXLYRZk0aUyWFYx86HtCkTS5cKD7gDtBXn6Jkl9tnqOgV24cFIQDd8+lUWdK
pke4SL4zH+XZLtQOudtRwfHRLxWlCO/GJoaaYYiP1TI3/iZ3fAWz8jo1o3Lh
wWzJNhQfE3LbDOlEydPhQRxv2IuIIH94+AQgp2gXbvX204b/H7/iW0o+puRV
Wi/fE30sBcssyuh6uJWFi8yrGKkvRaowxCj7WI7DF3Qa6P72aZhK/KL7V6gM
Ws5h6mxZemBKM6CcX+RcO1cUvyXzi74YPOyJZF8NXNrrQ1hV6Wh9rdFICdtC
NfpzLi8dbvxPBb/IB1G4yrgyw1qc1UpX8bVv0MzwsHYqUR3nYr5ieXvxHLSn
LGYfbk9ehM6c9ThYV4n29tce2ZK8cOheG4MyVjh0rpN9/iSqticgJLUA0iHM
iVd54fNnGB56jO7ODuytKIClqR409U3QfOmu/PiUu3KlE0OSjmd0dAzarNI0
Mg+gc0IBrIDZqrkUMU6b6II3H+nlxOahGG0E6PwZV5KWErHZFLYQSVYfy2Pq
90u0kGTzBU6macqAlb9vStZEhsfyl/rJFZFaqIynzKfEqXywa3voRpnRnKPA
qY/ORCIxkC9dCFdlJBlGfXAxgwT45QX+GO3bxzPeLxXx9PGdGiREWJLOcroV
/a3ynG9zud+rutLE+BgG+u7j0pkTiAv1gcb6DfAMTePbk3itK6cmmVQRU9MX
uqnQsMolobG1pTuJzgI9A7BFXbV1xdEivyKz328uVXfTUHEZulkhEb11Li7y
yV8ZKqqR7mxP1HqUhGvxpCShRJ6f6tI3ozTBlIvwlR7Dxxy56LqxLl4SZf+/
MkpsZjk5CjmxFphoFxjId15Dp8Pd5XSSOq6nLuSnwOZQYlWj37u/ZCNajtSj
v//l2S06NqKY3ZL8ZJj5iZ2dNTy8/RAeFgx7Jw+0XL0tf83Ek/v0NdxPBLz4
FqbGHqJsexbCQwLh7OQIJ2dn+AWFoqCkAk1HjqP/8ZjYhvylLBQaHnkCR490
bLGOJH1boKsrNqsvQorHZmS4acJ/02fEZe4NXoVwg/+is1kcGBY6McDo9RUR
/hwUXs1Wl3jMGdIGHn4RIcNtKY5kGnB/UHKYd+psEe28ArcPuKnUcZzDPF9h
j2Q/TTy5GEMc5puif/Apx6mr8SiMNUFNvptqSmL+cf14AlGYzXvjpUkj2T+G
G+hDpbm+qCnwoC/97espgbh/HJXJ/pMy2Z8fbqn0D5Er6TjTiPjYaPgyQOJg
bw9Xd0/EJqVjz979uHDlJleCK71Erqku3Ma/fWqKL/TSsH7rNpIf21p7Eu0Y
wHCHlcaXkvSYOJC6FziQmYrRx9a4xYiz/oLGHHlzV00afdxjinsMsvNFX9d2
25E44i1Fh7ez1hlx3proOx1FeOxXig4W+UuwKY4eSBIGVRT+wrI9A+NIDGHV
wPk4QoE/fY2qSvKXjpSF08cr1XAnexn6irVw8vABDAyoDnRlxyExPR3uzsqB
rrdZmdcBdzc/nLl6A2daz+DS5avo7XtIX7MrKxZJ/GtcfEi5/0sRtE2M3kdx
fh6q9x/E+cvtGHg8zNOHjCUmBlFVfgAjE89nCMLnaeE+9xh7jzRYWftj7bLl
CHB1g+Hq+cgJsES41RpEmn1Fgosi1wWCEpSf7GH/8p1th6OWzuR1FHvha0OW
IM9zEa0n5ImEv79WNM18jMjMhxodJa9hCaokUofzlKqkhz9SGC44V+WmoCyF
Wqq5xAlZ0WYY7y4k0uM95WA8c5jWfWGIDTZndWOOLK34laJdfLo5nYShT/ku
N/b1L3qM9M8LNdW5I3Usbc6Dn8Fc9vcMMPyMfczf4BNYaC7Ag74+2WOotsKV
kweQX7QDR4634NbtXjydmHpD/EaDt6+xOHWC/vSTb/IagmRpWGeWybxmHat/
vclrPB1cYK05T1qUjkqWV3YGcRbiTxzIUHSeqYBkNYELkOu+cBqSzaK0cjhF
i+8FElVEagTFtofqoKnYkcOwXylyygPmN4khm2kU5UUfkbSfgSboOhxCzMO7
35uPSMNc925dYfHPQ3WYSyhPixMCEZJciM7O64jycUFu5VH6gfc62xAf7A5T
c0fcGhzj47DkHpMsyz+434urbedQlpMEZ7cEDI8/F1zh/RdcIZ0S+oZVLEG4
2TFXmIeiMBt4Gy1Bqv1itKYbIcFiLipc+bWV1bjG13cYf4iObZLuaCPSHb5E
U+J6uVM8ss8cu8PX0n5nReLgatK+Aw6IdVmB67VOdKxUTUEpNG+3QE6YHqcU
lGVMd3MgYv300Hs+XVVgx92AlTJHdgcgPswSXZfL+JP6tYIu4sxvXKgFbp1M
5HI+UTr9rR5w6egeNAd9hlrvz5gH1Pl+zj5W5/0Jq89WYWh4RPKAt8TgNjY6
jN473Th/+jiSw/wRlVQpRp2fqtj7SWbvVILopWP15jSsXL4Ojva+rASJgrO1
I7V1RQG/UOJ7aCLW+M8qE1ppdp/Rjakhyc4FhjzDcwWO523h01lvKcr7CxV2
SA3U5be3CQj9Urb3dGpQ8YX+zfsSX7L3EWGuLSnKBq1VnmTvP/ve7F0q8idH
+pCblqqYyGImMtCLgowEBi+9kb69DP3D49Ong4cfsM9PQxcz9N+KkGnk8QCD
QY/Q2lSLlKQERISFwsfbCwEh4chjsKn9Vi+dVHmV1ZubuUBr7TqEOlnAbP0C
lIRawXfTF1wmg1Mp+ogz/Rvd+OVWfzJ6EaLN/kGcNx/x7czTILh0q8yQGlWS
yi7JebG0AkgO/qySaMzYhJzADVwQIQV/vphz4IgP4j3VcZPvg2DBX4mUxi7F
ISPMCCeqg6gceE/s9rI4roaDO3yQFGmNB3x/nsLkSY3SSOTp/lJP+rrfvZ7J
XzyyB7ezlnCin72s/O0s3Nu2BHtijJUwSdpWy2HsYH8fhgYeYH9lMeLjYhEW
EgQvLy+ER8ejvGov7vYPSbmXe8G1a9de8oKVJilYtVwdzo7+8PaKgoOFFey0
vpKrCV6MZzsuYnn4b3iwfYWSd76RKfDOfFkh550lmPS4ejOuFRsijgUZSegz
R0Xo44OMwI04V+1FhfgvFU2joYvxSIs0x6Ga2JfKCrEQL8j0QE2uHc3zvvca
w1mv5xLScJaSxPi9GMsP7S7C7v1NONm4F7X7G3Dx8jUMDo8KMPRf5TktbtUO
zKpNjO2hu0EDvjamsN64hFTvbjqfYleAOg7H6xLsPBu3iKx6lyezdpcvqAAY
YP8eT1yDFIevSOUjYZorhZvoGDVfNc6vTwvrZ51pLSeXwfFDnXKBrEbDuHsz
t6As3hjPryUp4/i+7XYoTLbmKn4eu6fnT3pLSQBXW+yDtFgHDPTQ4oHfKJAM
H8XigwLjXQKS+SajfoGO4kbdlbEYPdkrmFHzt7PQk7mYQXBD4o5UjJqHpaco
SE/B8dZWHKzdjUPNx9B+vQujY+Pi83yXKKWMjAyilE638U6KMbPkDCw3SqId
h67OgcySI+Fnqdr5pNtIFp+iyoOn0RUzFUoDHlu40qCPKw1kwC+UxTUxG4Sy
WDWunyhk2SHcQJTopPEySjZiHutz4q1QUx6O5yNkxP9HgWPq98Sy2tgcE9eE
GZj3XpNK+nYjltU5U1PyA3k+OcFevgmxbP2pTOk8GRuHg2cGNhlYw3DjRria
bYKTwUrkidLNA5Eb0RS1FkG6f2K/5HLazpZp8wkfE+DjAOXazKdLvL7GruAV
KqijkqGOcqGHIcVfvnbkUpkFEt1XY+SEvzL+9h/2oRNvt5uDVOIvt9ZbjYGI
C9hEGjTe7FexVoY8aoq8kJnohKHeWh4rfqOgHx50ViIuxBxdfJU+Qx0fyF/K
cPzzB8Tk7Nq160Um5zWtVSqpphTnJp6MjNCnvKeIt9xSJ/kQlhhv5+lnYOmm
BJplcXMNJgGymykLFCbLZdKzOtoCgfr/jaOhX3LTVALs3X5fo8BrEQfYyoq0
v8oUic5LcbHcmja2zXkF59nOT6ewUPsLhRRm6noKStLssSPfH1Ncqq9qpVzp
yudgJRXNz1/B4LwohXk9K/1QDKv89CUnws6fOoLcrFSEBAajquGUYKi/VeFX
uKHq6VrARFcXtka68DBZi6JAYzgS76iPPX6LkbD5L7QWpJOlpRizv+NM0kpq
lN8r3YgU+3loSRc4RwkoJLsswdkCYVegbKlHXFAcugEHMox5HFVC430spO5I
MOEUvxIkTFyJp0sBEkhQNdJSFlK9yUjFPdK/eSGZbU9zQ0O5D33pB1JxeX8H
+i+l4cyJ/ZiYmKSz4CKlMuOfiqtvYPzJEHpuXcfeqh2Ij41EaEwqbg+OK41V
hsjne2RjXawfS8bK16Zylt7OYC3CLNeQse6KtERdpD5NCF6I44ydbKx8O06K
zVwcTlTnIVRNKQDO1UOi20oa1GZYQDRWNVI9NuaY0fL/ZzfTfykZG4umtbn2
9DJx/TvXA/0fBUQe6N5DhNXVA0Iz+hffG0Se1mtNoOdGO6oriomWCvDzQ0xC
GmoPHEL7zW5MTj0TQ+sfVOCtI7NYLc3NdBOLjwz6W2ggx0sbPvpzaVvHNof5
yLP9B4XVtqSl1KASz6Xi5vYNtNqpp9yIrPWxKOngY639B6ZBAKcB7+2zR6zz
CtypF2jAWYrg+vCILwXXHnElh2C3anKXeFusBT/D/TNlNXevFHUlDJ8lONFd
MWayv1WIdg7vTcC2eGtZBCKgADUqAodvbEd6uCEO7q2Q6gUR4YpW9p0sVyjt
MMqqizPHm5CdnoqI8BD4B4Qgr7gcx06dRf/giPjS/+oVFmzMLDgTC3WF0UGa
0mYWbL5xBeLsN5AFc6K8zH8jYoyEs93CgcTl09iWgYUOAdsqAcHOsHWojNXh
fVxlqH0khtqbjUGKUDubCr2Tu72RHGWLx3fpFZ02YUUUOFDgSKThL79nE56N
8eG7SIyMQsGOSrScOY9Hw2NiY+i9F0w2E+rrjWFlaAB7/VUIs9FFouMGOivS
kmKIeHNB1dCXtxpN4QuJjqPpDRG3pjrOl9YHcCBQE7UOJSHrplupQiHWlGWE
vBDN6UJMjSjr+mwzlMQZ8RnWNxXdnIenIhHvr4/u08Jo37svMA8HdwYiLc6B
amWlrbIExnuqHAP0ir3X3yl0EOM9hchLsERV2mY8H7454/swWIGMO3OwHFHx
Kdh3sAnXbt3ldPWvROSlUoIxG+XE21cGmVisG06rizkc4H1Qw3VLaa0jt1EO
WrPdNRBn/GeasVBBrTECan1QKaDWWfKGPlM6HxnnuIQOxvM9xXMUHZ2j+RbI
izbiG8hkI+3KQEdTOGJDt+L2tXISb/1R8Voeqo6jds6kCFlfZaT/XN0lQdZn
E0/x4N5dtJ1vRXlJCdq6HorO/XuFkY7B2SsdGzfowtLIENY6LNM7GVJKitk6
nyiDhM1/w4GAeejPX4NS18/EJcIbMVihjVLvBdgZJMBVSXaT7roELblG1G0U
Vx6x9y7I8F5D182Ybc5SzFIMHvVFAgupnYf8VUPqtSSUp26lDS4sf/9MsrUH
ZTi6JwhJzPkH+ETRaPOM3yqcf/LRIWxLccGRygBVqkCEuBVZjtSsmbgUxfLd
jf+NmQqg9WeYePoEvXfv4u7dO7h9+zZu9/TgwcAQobG+Bw8wMjYhRt5+tF+5
jBtddzANc6dw+9YNXL5yjVQ2L6jHhx8NoOvmdTTX12FX9UFFR/OnqlXbpTuy
8esYumHtak0WnKNe6mZyB8hzWYx0i79w7kGFba4OXIDt7gs5C6fEF2dz9GkD
z9BRL8IXb74wYJQWoMXAggCGZUTbmYF+hnL5nGRbSy5PdCrGf+NCEeIYEuYi
AY6Ef/W91WtKkNF1/Qrq6/YgPSUR/r5eJAp3cXNHcFQCLvc8kp1hmm0Yg4tn
CnTWa8DaxBgWmkuR4mEKP9NlSLFbjONJerTpqCVyIbUb+Yj3gdBF5AgPGCRO
dZiHE8KhJ+LPOsuMqHNyb68tsQvcGXjhdn2XJeJcVtIls/HWwFkSJGYx+0j+
VuRHGvAWo7Juu37QH4lBhhi5vl2xj2s2NUzOHghHXNhW3Luxi5zhfSW42JfA
ymYGLm4XETvxO4VYZn+JJ7JC9TF6nj2DqzEsaF+XnEFkHF5yhjvZS9hfXMml
LZW5tNli+rvf0QorY0NYOrjA28sTzk5OSNm+n9WIQ4gJ8sHhS13o72pDgKsD
fIIC4ebihKyKQ/Tz6grT4OjsiiB/Lzh7BONSZ5+q6nvk0QOcPXUcO4q3Izoy
FG7OTnBwdIKHly+Kqg5w2ZTkHXK1yL7vyfPdzDuMyTu0DJxp3zf3Dr5F3GrD
l8jzNaQuJqUG289Q6vQPksfMVEjQshy/wMHYtdPeIUCXXVEa2B2vyw9tzlFw
Ga2lNsgOM8BUh8BlTBMSabTClXMZB/fEqGaFkUYM39tLBPX5Gm+Foub7KBEF
x5B012bQ1TNARHI2g31ncOv2XYyNT4qNyF8rCI0JOHkkY+O6DbAxNcHm9YuR
7WuKION52OayAs1xurI2pStrJeLM/8F+k5WUHW7lbUCkSCbznjuvE5tTNiLH
d9VLbcSqOB1JjTlL0UZ80hKAdH9NtNV4UmZ4Q6Xnziw7ejNO1ghFotIjuG46
hsGUW5dL6QV+X6m1vVlJzRO+XXgawrxNX9dSF4KkAH0MnApnPy8Rzy5H4/mT
Tto0rKA25Iqx7Wg1Klz+wYLph8wlMi3/m30skwVWV4P56H84ILvE84knKEoM
gp13GG70DuDp2BM8HZ+g2H+f5YzR8UkcKkxFWHoZCf/6bp6Bs7Mnjh07hUBv
L5y6/oAEfeVZkQhJ3fXNYuqK6v24dLkdDweHeIL6hcIVppH8tCto6DpCY70e
kdQ+Tm60a6mIRm4EV4gy/QT7fGmISHaF26y4EuQuNHo36wXWJMF5CS7vtKE+
vgSQRk/4IDtYRyKnf64oRPcVOCM/05MQOy9E/yjqZrlgjB9I45u8ZS3199em
eZvk0/33+zA+JSTip6OPcb/voajWeoY7XZ24fPkKS+PDM6SDRkMsFz8aprlX
cRZYUEO3X2xBalwEXF3dkZJThEvXu7nWUvQmYb7o8eNHlF4c3ZOhuXY9bDZv
htFalm8DzOFj8AWKGTZqZug+WO9PpGahhqTRh7iZq07e1Jq6lgSwD/mVBj6S
wFJMvs9yHEjWYR7kJhPYfI47xXMNLlfShVm5duVz3Jf3OCHVXwvjl2L5JVnZ
nXiCuVDrQyuuJrqFRPFTyZ1Yonh4ZRvtAjl/LJvz1tPuNNxAD6owywP1Zd4K
tPVDcqdrR+NoDUmPQETynya41PB1isoKEkb2qGPVOBTwOXZ58B7lbs/P2S+5
2+MTBG5lL8n1Gy8PdauxUmwA+fEBcPQJw9U7g9IWxNGhxxgeE2W0zx8j1MsV
+09e4X4pY6+DO1IQEFf6gv55uP8uDlSVklrGNygcNfXN6H88Ij7OX36jN63X
tsNGzU3Mm6LpGidv9JeFbCFv2hNtjgC9D3FcWFlGNTHfx3c5dTnJYrpLhX18
s1SW5hsQr8Pn8Vg1LOOuiRZfXK5yRFqQLm3fU+G7WdHRVh9Mh04Gb1fT+u8/
KvDA6eYMErKPXU6kZs93caybaby/smIOaXtYTmS//gADPaeOHpx2rB9iYqSX
pJLX+4VJgyuHq+ETmYEx9sDry7fB3sEVwUH+cHbzxokrPdJo/u7CFORXtYr5
B8Sw3b55BSW5qfByd6f226Hj5/BkfPLnolspSxgHt0RsWL0ObhaGMF47H3mB
FnDXmYvKwA2oDVyGBNO/0H6R1rgliNosjOkNVmzE7oDFKPFbSpplTgs9qNqM
BMfFuLLDnJCahNg6Kq0R77aKjrCNM4eSIBu/01YUoUfHmHE9WZmgnrbFIS3M
CJfEJTyyR7E6hOuUM2Jt0FATR5DtdwpofPZIJtKjLDAu6lveV9Q99y9mkGjg
Ek+I15NYUBZGASWvkv55oQ3adrwGfSXrRY0PfzsLg2XslUk05zM3/NuwrKba
qJspPf3JJ6jKjYelWzA67w9L+o32ljrEp2bicscNNFQVYKu1B67dFRb09LS3
IDo8GNYOzmi+3CO5lyTWHB99hJPN+xEVEgAPH39kF1Sg806fgur/+Tf62Dot
G2hrGcKH+ZijlQOJC3ZFmKMy0hL7og3oxue5WNotQj7Gy5qjEQuQaDtPIczc
gvrEjSgI2cChmpSluNqsNM6Q9EksBL+nyFJcQZYQZoH21nzVSoYvpeKzO8Fb
0MUX/93K4KXot3sUSxotievQEDCXR4Q5OBY+j334WNiXOB2/HLvLizA4+Eg6
MaQYG6DvNjbyGHfv92P4fjscbZ1xprOPhzjsL0pBeOp23Lx2CYcOHsLB+v2I
DnRHYOQ2XOt88CspYz2bYpnsEW7duIa68nxYmupDU0/QLQuu9YGKa9m7JkJ9
1Vp4muuRoGB7gAWctD7B3oiNKHZbiCzL/6ZBugNBXyPT7lNatMB7BFnOX6Eh
bh1GqBjago5SY8TYL8TAwWm29SlNvQrYb3Ia+3GvutvgSatdBk6HcwJLTFYC
0Xq8whW58Vvx7G7xuwqvqshxRXmeP/OEBgIT77+oQw7fiuvH4hTrBmfT0OzI
zTzmqSaCEzOYOev1vepekTqtt32L3s5iSGM99sRvUbADb2Bqchx9ff2CmHzq
KXLC3ZFYdFDypI7WfdiyhaGAgED4+geh8VQ7/TS+ZX/wQQ/27S6Gq4sbznf3
v+RJY6MMxPTiQutxxIWIsucQpez5FyoM2YnzXaInZWGNhhV0tU3g4808aasV
zZCTQCHKEruCdUmSdjV5MTUeJE/aE7AA+Z6LMFwnl0A0yOq1gm7RMWd6UzHI
erfeDUm+Whjk249lYYEaqf15k6y2IpwHvD8q0ASHgbm8fVPsrFgS9y3TN8yZ
jiesR6TR/2WPIcb0b+xHxJj+FfEWnyDIz4uPA8yicYA3X7pl//JAzg+ZV7XB
wdYd7b3Cj2uuyEJUeg72lCTD2MYV27fnwMfFDq4eYWg52yngwLcwOfYQJTkZ
CA0KgJMjVzm7ICA4DEVlu3D4WAseDo/L3qWkG+xcE7Bu5Rq4bdHDVs3F2O6/
hc6vN8frIdX6S5Q4fky8W4nzXJR5zqNtcneKNAk0tOXpUh+DV1b1CRooCFxL
/QtZzNDojDSv1bhYYTtdWYmdt4wt2Jm8mZv7dM5KJHFzcvAm5iXx1OP9qaKo
OlEbTrTwE75Zf6RRzFlq5F18u88eQfz8voJu45oIfot0V5o5fftn7Qnf5Fsv
aBxe17fG+jrh7eaGlo4++jZ70kMRnFop+dZA5wX4sxRzo28ET0afYGJyClND
vUiKicL5m3wafAKR3q7Yc/yyDAKFJklHawNioyPh7elGtJGbpxfiUjJRu78e
l9pvic/yFyoc3KmLt2X3WrVhK/R1TeHL3CvQShdOunQDgxokhT4bEWvEdwcs
lRskHBTmOH+J/VFreIKapRjA6akwpuW1t/c50wDOmwre+VCOBcqTzbizyAnr
VgZaqnzoWT3l68lGGlUgIFdLZ0eYiLxzmqqPfRP1xsrSi4VmuL2DwdQa0zmi
omOw2gSjB+0YBGxAnzhGIF9/Hbv30pjNcxb9dmclwMHJE/FxUbC1dMTJqz14
dOcKQ9s+DL73o6YkFXmVp0W0zXLB6AOUFhagrr4BF69cw+ORsRkS9H8++RT3
e2/jCivURiem3hX9S8le2LrEY83y1XDZrAsb7WUo9hfu+3IqL8n8I+zx/Iz8
K9OWlbohi/BopzY6ctYj3GwueitpgTPVWnwB2aFU2tkg9AkZKOysshJpPF9O
V8xUcNpDJ/yFzpWogVNmr2PlrshPtOTqIGWVdaslidaw3qFeQZMKJrx6WliR
NSrOn76v8Et+Vik7bBMdzeCDCWpKD3uZvPiuHsbRf3VhEpzdvREbFQEHFy8c
beuRH+noPUT5u8LTJ5DB+kDEpG3Ho4lx7MlLgIuHDyLDA+EdEIEuZgaSh4kS
65Z6FJbuxLGTp9F95z4mpTVEaiQ9vc0K8PaOmzxrClLHd1QYvRPnplPZSnVz
bNLbQr7mZaYFT6Ol5Gucwsh1V0ecyZ95GpMYjDsso8WYf4KzWRunGQyBzDuV
pYN0rzV4ctxHyXJz5psXzjcagigt/UyBDR+0xtPsdhfnmkabVbDhveu7iOW+
e1zYx/C7F9IZz0cvkXmiq/WUGXAvmyP+dgN7TDBSb4eWI4fwUDmBMIkzx5rQ
1n4Rge58WGdkegKY/b+a7GgERaWjfn8NPJ080HzxNr345xrK4RcSj8z0eOTv
ahGVpwwKDw3g0eAgWptrkZQQxx5fOMPaXgiJSkb/2KTgYb9TYTRsnOOwetlK
OJnowkFvBXXkPfU+pfEU3jk6FPgV7UNN3PoRTjB0+6hCGyeT1yKVS/KqhTHR
B7uFsqu9fLrs4p62P1UfZVE6ii68Gu1Ev1jpiIwgbb5QSJm+xi7GIiXYEB3i
Luh3FO3J4evbkRRpReUV5wR/p2gZ8Zu4yo1bsnv17aDFdgl+unjYEkajqLNf
SGDcGDlUe5HI+Bb3kuTx/CFdu3QeR44eR1fvw2kl6hTudt9i4KWd/XsV1292
Y4IXZ88mcPXiGRw7cQp9j5+oNItYVO57gKGB+ziwmwsrYhAeypf7uiOjYBdf
nPBT0TCUxZXSj5avM+N7ThgkjIKz8Xq+C5iVgXzx6VsodfsKmVtpEZfQ0Gd5
61rGSsRafS6fM1N60s6IDahO0OMd/TeVu0532SMzlIH9aymUfH4mYcIbqShI
tqXjMq/EhK5oKnYiPcoHr1NgfTcnAnPDimzYWluwOtYVnQNPpp1oYhjR7rYo
PyJglaxwL2TvPC6AFoY8y9IjoLvJBCU1Z0QnErWt+5pwoqmONC1c2/po+ImA
yH8pF1cjzHmsnWKxaukK2BvrwGXTaqS6aCDQ6HO6WhZl9FecilqIzowVCDcR
dqI+Zs6zO3Cas3ihsGKPa4RI9WEGA7P91uGUst2qRrPVJdH6aCq0ZWkpWZmV
WirdWU1lMZ2V1MhtdmS7oKo0mIezDxSLtw5Vx6AoxY5/tpKf4DPZnPGjgxwd
yWLa+19XUq9QtBZyRevpVtTXVuJg81G03+imzTFvi8/0yeBdFG9LR1RUNLKZ
+fcPT4jP9BffaP9L12yGseFWFvAYNNFfg3DLtdOCAbvPGRb/h2z/fKbtVKyw
lOB+JS0slcyf3xTl4sG2ChsuHnxTwS+UxG7C4VLiF+Qc0pWJ1mpfutw6/vCA
ggUX4NqJQyk0LiXBte/P/KWJhbYT+2Bv44QOGakJOsKjVflwcXFHVEQInN0C
0dY9IPUHxwZvw8/BGtsrpdQxiyYVp54RgSTvAeHf5vwRvsI5GjFxCTh6/jp/
oLPENDJNMzxlBVMo1i5fARvDjSRFjLVTR/iWeWiMFe738RbTldQVCDH6EHcK
NTBQoYNct6/pOjeXxvAi6CArgvID1shFkDTTycVcfU1edJtvpsqkgi8SvNfj
/vEQ2gQ8W0Hf8c1a6WFGuNwcTaXQOwozb62PQmqsWAoNN07nkpEmQSYbao77
F9IVA51CDuLruFJDTcR7CMmi0uH7dQ9h6Jxf+5veI8DbFGPYFu0L74gMnDp1
CgnBbohIK8H481fv9z1x7pbsFktWm8LUyIrcgt+SixW1Xtwt4sw+Qa33p7Jb
8PeHwpcgw2k+L2NmKOuYjhIj4rP5/ALns99QcAW9h9yJKxg4I3AF7yoQ1uML
8cS+cc2ASrtUYt9CmKUfDSWE9S/fm3dISx26Otox9HRSfm2F7/AMN65exLFj
J3G3/7H0wt/vuYmuuwP0pz+JHtBzvgHWFtaobjiKhpoSWNm64swNcfnv+yoe
4Orkj/UrV2GrHt+AswFhW9cg1nIBjsaqI1DnT7Rq7ljUYgakPsb9Ur6pShDh
tmZp0YVKqSVUn6Irt4S4BOdYrilygzSUSgO6X1xiizxSGiTIeaAjCeeqvZHN
4s3U7eJ3FNVJX1u2MHN2qYRg7geK6r80x4eqEAad3hdTB5fp7siwR0UKVf5z
vhtPzZXwb9HbWXhUpoG6JHP6DNHQpaXVfEXv/prd6Lz/mL7bvSvH4e4VgL5x
VaOW6S9u1J8IRr14pTG2mFiTUZtsWIZkZy1ZwBhg8A8cCflCbtTw9zt8FmBX
4DKFUQs452iqFrJYomXRXVmXH8mzQHG8KbdJCeJwSUxlrit2l4TwV/BPcqez
AQWZnjhY5MQ/+/ev2LF77Nixf8KApfXTPW2tzPpa5Nc8PcoXOw6cV1rg2NgT
jD6ZhKO9DzTXrIG5NrO4rZoI3LIcKXZL0BC2AtFG/5e9GCtR7TsP250+J4q3
K3+DOC+2iYiovqrNNCvWVmomw3h+464oZAMasjfj2bkQyQLHGRLJD9dFS7kT
D4XKyDvFkDzv7HNdC0fjP1FQvFzHkpNoj8baOIoFHyjV9axITg4Xi2R5MFgo
kvk0ZVqQHkYvxCg2kAoGCVYkS/+8QENdOVGLfUFfocjtC2aQJe5fso+Vun0G
P/Nl/CWWDFLiKp6NP0FPZzsKUyIQHJetsj1dlSjqkQ1x4QpDmJnaUg/eYO1i
ZNBtOyvsizGhvNcaPV/FEFNt5uJI4npVQ6zZTDuu6pINpgE3X0jmh9wwPZyv
8WKmlfmugiDqPByOxEgbQeOpJIioAZWFtPDNGL+aSIhDNklx021l5cubbl/P
JBeLnz3Qfx9nj9fD2cUFR9puS7hM2GZbTOvg+ASpnvoaWkYUaq2J0M3zkc3S
+G7fJUg1/xvJr/KdPsVOn/l4vFMbbVnrEW35Ofr3bCZTJOmVzQI+mTuT5CZq
dFwjxWM1OqqdOBBWAoH7Td5I8NqAQbHZMFvRGb/ZEICUEGPQGerekmlzZGZ1
uCoYOamumOSLpIYbVItKBubSYuxwUeVMjPB1xPX46ODOYWFE5y15pWccTjWW
YnfVHioos7KylJzNlZN1LLsuQrnP1+xLdvotYB/byfwx2GoVBh49VjVHZha9
HYj0c4EhS97N57tnKULixYsXRRplOs8vWGYAs832CPUJIslgtpceWWJthB6i
DP+IiwmL5G4AqUAs5qItV4eWnkiWyC9ZJ7sspZuKDPvKKZ5h39v17kgJ0MHQ
hThqWb8rxkV+tJdL1E4cSuWAVymG4truhDBz3GgI5AY84w+K4PhsfIjq7qam
pn8iOEqWuLciB5abjeCbkIen0nqsnxO/8fBhPx4PsxLN0gP66mtho7Mc4TZa
CDSehwLPNShwWYDttn8nS8y0/RT1oYswtEsHjTGrsM1tobwzuSVbF5meK1QW
Rt7cbUWjnEPHhXbyTAU1f6TAEsWxRjxMKfMyV8KKUy0/UeTlB5eyBDnTtXLV
vDzWTCtH8pNtOA2vRKEjN1icDDbE6Z0uKgfleCycGLxKr+orGI3LJ/cR4cuA
NjM+Bjj4VqE6E+xNt3s5OXPoP4ULrS3oeThEz2RHaggSShuURqgCNnk43JSF
+Uv1YWHmhHBvX1Lm5fhsIiOsCNKmxfjXUoWhAhJPpK2gPkiXeMxwpgJsdlWw
IsxtBXrFrVVvKJLz4QIrlCZu5oFQGRPP7A1CRqIzJgcPqmiROM6sLA5CVZY1
nzz41+8NYkoZevjBLVbLXqLv1HezBS5Onuh6/FR4qaaPEo2MjmOrhQsM1q+D
1cZliLDdCJ9NX6AiQB3pNl9gh8snMtHWkrCCjJHDlp3iNCFNEoatwa7IDbI0
m79vzDREccRGHgjl6micDhEGITdUB2cqXclOZitnCPhaiSBDDFwW7sP+WM7R
JTT1WpDmhIPVMao5WhouYlj+zplURXUkUg0ML+5M2cID8Nuvhxe5ST6sMqYB
ibfoLcOL1caoSbVRFkbTJjmJosQA+EfnoL29DVG+LsitPfVtJvnVYl1Ystc9
2NObTHK7nyH2xFgh33sjX2TACvhlZJLC1OtCJCqmXmcqoGJrljbSvFh1etxb
ytBjLENvYy8x7U+7lTm9oSYdo5cTkRS5Fe1n8l8aHbh5sYQOmj8+H0vV0vdv
kn3XT8Dayg4NLRdxeG8RHF0DcX908mWTnGApwxGbNNbDUmsZIu114KH3GWpD
mEla/h3V3p+Tmi3C5EO0Z60loXS283w0xKuTOQ7VmSPHezkOZxrInRVukoUh
GmjONeOAccaLeTreUzjdw2HcbAWBxXvGFVkO3Kx+olKrRyM93lHmVpQsVmVx
oLizaYcyO5+qC0FqoB4Jo/lP+X6t8RciWBx62IPt6Ynw8fXHtrIaPH4iMVTv
qVYtZzspRS8wzMT8xRthZemGADdP2r7Ez4dUM1PkXY54Zoqy7IWV4QfDFiPT
ef50N1GwwrpYDeyI2sj1ym8o9iz1HGDZOVAHwxfjKTv/VKpaWGA8WOxGO6qe
jzQqiVkeJ7MSndBS6UFS5X97hRX+b0oX3t2YwpnmGgQH+CE0Ig6tV7tFlkNh
gk8mYGpiD0PNDaTXj3bQhYv2XOwN24DELR+igcF3Ondp+DfijXr5ujy7eTi3
TZui4gOqWZbgqth6kG4OJ7mvxs1aZ2o9zFSUzSeLbVAYbcgNQ1m0jF2KpTMG
N04kcLNTBEQh4SZGWOH6+ULVgMgSy532ciSEbsGjq9k0kP0bObfvwL0L6Yj1
1cUthkA5Svzh92qHH4i2plKYXOjGHz42wVrTBNrjYsWwj6+zcKqmOMiUbG2H
+3ykW/xVwYSuYFB0IZ2mUdgaVzBu816JE3kkDFHm3+Z8K7q2ymxrOuKl4dGF
JCSwl+ne9QrVThrz1BMHU7Et0oQGrHlN8m/foWn9P9ua8vTfyMgw2ZORkQ0M
tTToalmMoz4cND7GgUhNRBnx2Y8FOBW3FPEWwq0lqQbmtyc5I9+1w5hmPvr2
25MtEdyrskW86yoMn1CFe5NnQ1AcbSDxgbMVcO9inS+yo83x7E7xT6QcyaLZ
3hJfElvIdLzgijy1FmZ7ommnr2LLomB9Ez1FyI7agqZCO9IM/uj1FBjf0YpU
igoWsbgVrTGJJyuytvKEl6MrCWJLQzZTbzbX4UsU2v9dxYqyneQJCwnKcVn5
g6otiHdehps1DjR394aivN0WqotLdYrkKUSsfSXe2FUUpNJKoqOGNczZzGWt
3r+/oh/7z9UTghX9RpYePB2fgsEmKxhv1MSWDaxkddGihZ71kVq0q+Ry4hLs
D/oa2fafEZNySVG+cia7NUcf6e7LMdToLCfFhgxDlPBDkK1BM18Yn+P3Au4d
C1aQ2Gp0ubQ40Uyaov+xomi4ey6DrnU87NpNCmEli3K1NQ8pERYY68wjFuU3
isRYX+qF7VFGmKI7LgmqpsSlBuIKiBfK1n/ClGQcJprSauM4ZkrqsLH2Im01
132Wh5kRZZdsORe73T+WTak3dyViLT5Ba6Ymj0KSKfGAdLVwE613eShKqmcr
5WqHPGmrlASq3lGEpoHziSSpvnd9Jw0bv1ga7Mm25Qb1HzJrnUlHJ/55HCa0
Jn8kHI/p6UFPdze6urpwq6sbg6woHR99jN77faKS/Tl6u27gUttlPBx6Ig/e
jo8O4Z4w0jDjI9E+pcb9KItyenoWMNbWoqGedGd1eOh8wuxTA/7awghCmdvn
dBmB0yvNsauQ7bpA3kjCB5F3hK1XsHwMtIUy0JazhYO2mYp+Y9tuJ2QG63Cj
UVYQA7yCCDTE4JVsqiB+pAhZz+6UIC/FgRWwCaoJc7iRVagHkZngILODSvu8
cSIRcX666OOXUq4lsST8Qq9+aoraVK+obP8n+5wtft7E2Cju9NzmD4S9yOxx
zJiDe/2ce36G+729GH4iHMV43H8Ply5eQvedB5KKmiuVOjuu4vKVDp5h5ny7
xa8yiiWLt7XxhrONsEZtZ4Q5dV0iTFgk8f+MgiafrO/OWYMYq89xNV932uIF
uHckRYsawS+k4JPFrH6JMcbzzgxl3Kwp9JT4aWX25SdiqN44J3Rn/l1eeZKG
ZzcyiItR2PqLpt5bYcglo3OIsxR+racNDmg93jRt6u/iTH05DPUN4ODqSXOD
jgx31BxuZw91H3wi0unEyLnG3XC0s0dAoC/cvMLQNSAw5F2t++ERkoQnk5As
XcKH3NK1dcxgoqMNE/XFSHJUh4/BZ8Rph+n/mTjtHLtPSNs6UqkrQJnA5YQN
h5ml5/muRIMo/JKwYbLHalyvUbCIAnOzO8kY+3OseJZVFiZHy91RxkmSe6XK
IHyxMf7VhclYM043pWFbnCWm7hQpU/loZz5SGMhspYo8acZPXh8QPiLmxpzZ
N387CyN1ptibYScBbTLD+9dbYWW0iSY3+bo5F2dnpOSJk5vBvsLkZs9l+Dja
IzAoCC4OTtjTdB6c6tm1LRHOru4IYE/OPzwF9x+Pv/nNRn6cjNwUqwxjaFOa
na0P7C0dxENWW1ETbYEA/elxGWlUJp6zPaWbONszU4Ezd0ZuQE2SPue+31As
P9kRb4SjO1x4cfKOop/Ydyaegnl/Z6ViPkaNLh7yrRFHd7hyocl/KLZoHiqw
x7EjjS8b+Swy8rPbTbHTfwl7catD+WhMdehy7I1ej20ZyfwIh2ThTx/dRoSH
HQKT8vioN504nJx6jqc8UD94iMknAwh3dUBty02S3WVH+yOzvIF+6sCt03B0
8sedoQnBwn8vX9F4OjaOTTqGzMJ1YbxuEeLs1iLIZB5qApaKcy+rkGH7KQ6G
L8YQs/BcV6FrPsqsu796C9LcluJC8WY6iyHIGq2V5CQ3cJrGHG0JoB1zHQd8
OURVU7ZsriRgW9RmedblRwo6iOPPjDg7aZ+rSjAf48KraGu0H1FuB1ej6qc6
z1VYkt2e8M7r2fnVU/twJGEN9oSuZI+iJpxPKNeELUe4w3o8ejwk2zkfxyxJ
DoGdVyiNY06MP8X4xCTZcd+9XhrH5KOdWaX19GO6zzXAzTMEPffuISstFe13
R+ixZ4UxOFTb8go7l2p3yc5XGkaTndvb+dLBNmEboBVDu5toZOVMzAKyc0lV
kjitKpHsnMvkUt2W4VyZJWfWJeQydsIHj4/5IiVgI+4eD6dh+ncUEX1PHoui
LwjtnxzGxZM5wrhfu6Aq+XfpGmJXBm1biXFXZymti/4Sr6rhzxaYo9B7CcoC
V8xBWcCKGfztcuxkkCApPgpX26/Jo3r8vbxenPlrL1/26gi/uBz0SYzSDzDc
2wYX9xDcHxHWrLXuL0NkWh4BHH6cONzDAdUnrwu2/2uxWhthtj8GY119WOtr
wlR9ISKt1yDCbD4qvBYhfevf0J29kq7inohbznC2NtIdv6KlVRzD3KkwRjSr
1LhChC9x5RjmOPPk/BAtbu/TxJN4kCLRewOe8P4hRfZpJHP7SAiSQ4wZYhYa
RD9S1Gtn6qORneyKqUeH/kWO74dxvD4ZeUk2nCpV4pf2I3GI99XGo9MRBOWV
do9vLtWuntrPLGkNSvyXM7vnT+MN7GDVuK/lOly5eu1VQ5MTI49QmBQMB68Q
tPUMSEOTzybHcWTvLkRGRdNdSQ+vAJzrHMTgnQ5kpyQgMXUbcjPiEZK8c4aK
2f9MphFOnz6FFk4jfGKKFZsEs+fNvBBbAzjqfM2KP2vUhusjyvBPuBi/kDpK
fLakKWwBv1VM3SRl9ddbZYYE15XornMiIn+2grS6WuWArFAD0YrTFcda0jBI
bII1+sQor9wPxNdepbHfQzpbIVj/HOJd+X3PFP+NOJ5vQSfHbnXJzMK0A0zh
2v/X3nuHV3XdaaO6gB3XZPJNJk6eZ+be+TLfJNPLN/Fk3AO2g7Hppkk0AQJV
1HvvvffeCxISAoEE6g2h3kCo94Yk1FFH0nvXWrucfQTY2HHunT8+nocjnaV1
9t5n73f91vvr2RaYKTXF01qb12hGJr2nNeRo9z1QV1VGs0xZOp3Qb3VlfgIh
bpYw94rG/Aq/GN4kqG+BibkHJhe4RNXWoky4k3vMvdskClcwbD3Ze4V3eegL
Kuba6iqUlU5B98xhqB/9A5zU9sJP81MkEZoeq/1bFi7ifem3rK/no5TjbO9s
SzjF8rFak5S5JtDFhmKsbYbncdwJPY+NRmc5f1RJrDoyAlUoIGWsJgh34vWF
evdS6r4ykIQQb21W6k7e+F/CeuvQENzeSi675JdyoVEJzCnVnGXGbF0/lUB/
Y6FXjGLf6hGtKyA6mD5ZU8YE+vT1VayUGRAaZkozG1lGI9XqJY8C68u4lRAI
TRMH9IzNC4GeTUVp0NI2Qk5RKa5E+eL8JUM0NLfCx9YIHiEJKCvOhZmeOpz9
M7ZCX7B90NoMVOL/ikD/yzOerHKmgb4t7LROwoRVzbyM61tSqyj0bzt/gQQL
VndFQaqt0gRg6rCeLjWXaKscgS+IJqpAuIaM2+xgsrsoww7pCfYyAs8ZumnO
R7z3RWx0h/ytgHWyOeREaSHR5RhZV/bYXJ2T2j+2Yn2y2IRoydav0Q2HOi6q
rAg43FBzr0TG4V9lTGZicoahd3VuFA5GWrhZ1SPCfbwVJmZOGFvkhHxjbhpc
g2LENisLE13kHuuh9MGQCHdOY53D8tISziqehPbpw9A8vhvWF7iaLFFEZqQY
/Cd6wwmfP88lzFObnJvqexjOOMckfUnQcRYXSKU8q8NCfsbYf42G1MssSX6b
mM3rhCSP06jNMKIYlzKclYeErbupoI/ad8fTJEL+KipuuSA+3JwSSKmQp208
UkJ06bKQ8prsBBOkMV4TwIH8R0xL6M6zQGZqJKtOKNFRFaRIf1Ksx+J7X+eb
uiyW6ONOlLF8tuHaChH4E7QAASORse7m8E8qEGCe7u+ImGw+fvnJMGzNLXEn
Ow/2tnZ4xClTqLgeCnuv1OfBXEbge/ErQmz2nPZgMDckMLdWV4T5ud245XMZ
qXaK8Dn3jwRqu0XfGK1smuX8pQTmnC5YGaaISJuDVKJLTXtRzkpozbOlQP3J
Vr+YuybRSVPl677R4imPuHiBQVrNXrTvvc5ibLuKHeBjdhBjhcZYqeXwTv89
a5/5LoAfItRQ35ynLeuL8LHURXL+Aw7wbxFG/xgOxnq43dDHosVjfB0QfrUU
m+tPGX2hPVOK08NgYOGGR7PLv2Ufk/W1XFpcxJkTStA6eQg6Sntgofw5Ig33
IJSI8gyT99AdvpfFwz5KOYq26COiBZEy+zTHfcj2Pc7rrbREvR78yD46XGDK
GM0K7+GdvWeLIJtjeFTBmQ93iNW3AtBT4sRY4tOh5Le3+DMC3bXQ/1AaC8g9
AhpQFOCmiSG+uNwv5cwz/vC1PsGVVxHpDTlVRwALzAqyOoTqsuxvqsj1sqtg
ebIPlibGqOqcYE85K9QZTqFiXmBOjAccAq6wlIrJ7lqYWdihvqkBVkYGqOqY
YCBIC3KE/5Wib10FRNh/ccqdWwUGdjC/dJzJJroKEq2OsypzUg9xuN4HKOVK
3YurYI765fwUcc2blUCUWSWtMVZsyaySs02cVfInEm5fecMGiZGWtAaHVNjT
hlvpoZp0OrcA3mALZ4ksHEpsqhNVmXa8VG23dRF8vzXwdGkK4d52sLBxgquT
HUwdvKlhRlgDlMfU56fByMgYri4OMLJyx8DsCgYb78HRxgaOTs5wsLWEiooq
0nObuTUg6xG5SJbJ6eOK0CRrwODUbtif+wQJRA+K1HoX2ZYfojnwS3irvsvS
zqsCDyLMaBer9D17Ww1RNDE5WpkxexoL3pOlA3/Tfaw9iaDZUhNlzx0zlt+1
9tBXSnFuReuwIllEakvFfcl1R6TG2VBWKYp7olLRBvHpkYaUzfxyCyEKdbvA
R9sIxIY6ecgJwtXI/nsEG7MdPwToqbjPSQmGkaklPN1dYWBijcq2YQH0k4MP
YGtGNC9HV9hYmCApu4xwpKfkIyHQNTCFm6sjrBzc0fv4yfNAL9NpedCfdCOg
/xpGBvYwOn8EDpf2IpuAPsrsGFdakc9speZ4b/X/QlPkcQm55ww38bb7cTf2
ImU0UnJTn3YZ8Z7naH8sKaVf7QhGKNGau5oSGbeUVq2dHMiCn9NFTNR40CAd
BRH51KoZrYUk1+PMyk9OIod8Xrn9bsgXkrfWVxbwoKEeNXWNmHqyImhRFPH9
Xa2orqnHxCxXtGFpbhqdHR3sLnZ2daGruxuPp58ocHD/hQj3hScLOHXsBNSV
KNy/gO3Zj5Bs8RVC1H+LAvuPWSPMkMv/xZxGd1z3EBGzm8U7Ujd2gJEsg45C
viLmAvneJ6iYlxL6QkIdrwdfohZyKcNZJQwnwuMienmG85YExMv9iQj2vMxF
f29h9U+YxNfASEMw82Bz4N/OlkphmiU1MxMkC/1/gtCZb8M24vEiQrLmOr6x
Tui3IV+WRbeOnrYHqKyqwdA4L5lex5OpR6iprkRb94DQho9N7W5tRnVtPX1m
CnKm+K1q7ABB+kXsFpBu6AB95cNwVt+PHF9Cciy+QIDKPzPHEzXDD8QcgI/W
R4IZXkT69K2LRNvajXZaOFSG9FUihK8HX0QJ17XnJ5JQtAcFLkTfNuHLYhXz
SN/B6rBnXXHCrUgtOo8D+ZvsI72ljvAxJfymwISFWy4RyDKgry9IddjvyHP2
SeBJCQuF6Mmjx6GqeBCGp/fA6syHSLXaxyIt7rrsxB37nYg1/JD5jFIJ37vu
vJexkeEM6hXfxfeQMpZXOGX+IkbAPU+jJl1CwDkuMlThjmCXC1gbTJIK45pc
d557l/w/Uu6d44eMKCM5YTyehpHGUPjanMQ49ZV2yQwsIgOxOYrqZE2s19ti
Y6b9m8ohfhs05Zyav9yiI3IS9A8nXbGf4MqY4Ern9EG4ax1iEvSq+U4x15Ja
vttCOct3P1ckiqKKKwxw7SICzfZiJM9IYhrh6q2Fku2sj3Nzi5ShLwyJIQao
LQ2j9+jvJVEo473X4ed4HtP1noxlcOEVb3FStz0IoY5KqIi7RMkJJ0EFcP0x
SuM+fqcX0/UJ21X8+igunTgII4ItGkiWbnsA3uf/DXVenyHdjGDN4hPMZZ5E
rOlOFPgcwlKeOtqSleHHGzNE7c6Bancs91FkunOVtgi2PYaRu44UUTskO31+
gj6zNxOMSMUeLYYW6q3DfOJbxR4tPk/1EIHo/kLqvxy9glhfNTHkgtvz32Cn
yolQR5Ib9eIT/lFjTYDb9SK/+feA2FZm+rmSCxNdJkaO0FTcD2/drwnEtBBv
+DESuB6wzOjc4PsHlso4lsna8zGICb3OQyz2Y47VlqdWLpnDfLjQHGFOpzDf
zAV0/1jiY3lUQxaTpzbRyG6z/IK/lzjMMxJtkRunQ2Xe/5KYLgoT9dhjI1jZ
xs7yqhzMvjdN5WD2V6IhgYqw86fOEBF2mMHMVOl9XLMjq+/sv+KB/x8Qr/8e
smx3YSZDCWGGO1EVeozB7F6YEmJt9vHVVYwxWaDPyORQvkyhoj/7881Zo8jV
h74K0v31Ke1q4KmCjnJvFiH2lsRMTIMUaR7Bxpycmbgk2xepYfpyUozIvLrb
zgh3PsXV8evw56XYm4xS9hTawJtuA8Xm3FURiBFJxuQONSvcvHnzGbPCUqk+
rcREMEZft2O13BD5saZshhzG5LsaVDb0su3xc0UZxtSO74Wf/lGGsQjtD5Fm
xKXMUjPXXbddLPJuRt5DXREqeqilHLAhTQdxnsoyDsjpPHeSLXHrqiv1kkoF
GC2aEeAki4j9G8lm+qjKjdySAxi8Y8jih/4k6JKq7D5OrtBRViLo+hLGigRN
jofhdOqf0RG8B1F67yPf5Q+sXLC/9kd4GHeSoeum+0GWM7/Eqyr92brwJeo6
HzLG0EXJW2m8hmCNlXNCjJEvGeh4TnRCvCn1wA2nMA9ca23sc8VYwPPE2Fgq
5rti4W93Gt351swmy+HsNa7UAsEe3WPuJaizusX0+nisfROha68vQEP8WZSE
niJwKwujfX3LQ5Xgb3Wa9iJ/Gbh9dsKZlXY3MXaCytEvWeYehVuArA8Rgxu9
yzRk5YkQTcbp2dm+J5Dpo0R7D0nhdjtSHXnxTCj9WKJyLLWHsS4Dox3pEmsT
l/aYRnRAKrSI8BLk2EZ3KOI8ziI/9Cw96vYfHmk/l0Oar7MbtM6cgNGZr1hN
tlvOR2Cn9E/oIowhROt3qPDZg5GkY6wO70CaMhYJ0hJtvkRBEJciSpPzqhMu
Id7pmCw11BlXvGlMooEcBaOdO9NMcC3KgLJ8UXgRUtV+L5D1tlifKZQKr7u5
AUgJ0ZMJL878mRVnjGvBqhS0P+XxRLfFgjgtxDod4zZrHu8vgaeOhkLkB55A
gsNBgqdkp8NkLNnxAKw0D2Li8eTz8ERLagh4+huGJyeGJ1MTZygf2o0wUyXc
InjyVKH9nj9gWKKGG9rePt3uC1l0IqfCxtnuQ4W8Ckutl5FOSugosKcC6McS
8dV4xwlxYebYmC+Wia8yDLVfJeLrAp7wuVGi+BqIQN0Nc4RYH8b8Xa78+otA
9b00Wan4YgZJHlRqp47D+tznDFSFrvtYWVoKKj+1d9EYtBe9CcdZ1OvjLBXM
5KghyuJL1MRxJf8pt7/hfQLZQcoS/uVARJkdwuyPo7/EnkVnbRc2x3Yu5zPe
VxXNhVxUl4gvIoZSwo2Zw5SIfGnsAK1tFeKljR6+2MsvJDx/oDZItDRuipZG
Lp+P0j8vkwMYyjORBHe/Ku6Uwr+tTtaGYsLZbGn5GdrUupEWpNlotENhsvWz
G+Xb8nokLbtHkPYpjzQLU0ecO/gZIsxPsohqp7PvotTpI3IltLLqdsSbfIJc
j/1yJkKmQ9Iw9UymQ+6QmAgnyqxYLVghd17A22ZfBGKD9NFYEUkNVFIKdjXe
BkWJ+hRffyNhbfP3/VhzG1rAmeCZZ3uvvkiX/H5QE+j+6soKAlxccPnUQdid
3wXzk2RndN4Dz3P/zAL2PS/+BzqiDqIp/AijDbRW0ASfYCxYORbLTRBHOGN1
sgbbHQUONkSoaYDVUVYQiLrrBahRPW+mwYulLs11xrAA1zclO97EwyguLXYk
m9HW/1sizxrKwxHrp4XN0RQp118fuYIYbzVU8DUd/kwaFkOQHet6EgURKrT1
FV/C6NVv4/0Uaiu1rKYYgRp93c6gl59o9Szvf5sJtZaWFk61pELtvYvYddyR
cLKjcLGwgOaRjxFpeRq3fTRgd/J/o9r99zzUXkfw5fdxL/gII2KU81PuP5zJ
qZVCvTkBa9Ro/DBTl2vRx5e1f1uCnuEaXwTTqhjjd1hA29/J8bMMxs/mKT8T
BRwnE2+EaSDdS4lys1eeI9v+SP3yL0Xiv0hkW6CLM/RO7YO18i5YnfkAN+12
sxip9qA9rF3UUOIRlPnsRYzpZ6yDA7VbeGjvYh0caGzUNM0htjiAHi4zhAGO
ZYVc0cYVLmmT2zG3c1H8ufaID9CU8xbeTrUjDNaFyn25uNbZQoT76eFhMZcu
/AsJ4a/PdSGE/zS1T0sI/ytc3Z4MI7Y9MJt2vYMcxgTiT3dNnvh/R4z9gp++
vrrEwkhoWXPOnvyLLeSsh4m4XcccsG/vUTiZcQlKUVbKKPFThsfZfxDawmM0
5it4qf0OD6JZBXlR12xNPMN0zZky5u7eIWFnxXEaBCbqMnbGqYwFaTbISnWW
WTN4BTPBDgUJenLSjea8lzrB14zwgiIT1j/1eWD73uxMDNim/VqIiBzo70df
Xx96e/swNb+MlYVZjDya4MyQm+vo725Hc3MLxqefiKWWaXnErraHaGnrxNLa
+rs8fqWEL8DZCTon98Ly7C7YKX/E4pxC1f4dD4O/ZP2raUbKTcc/INX2Cxbo
0XnlPHz1P8cswS3F7+gdXXgbfYUZrvMIr1Y4I9NfGUXx2vKMLwjXIy6jOIMl
Hb8pjUPtSWBNKrikY/n8gYfVMYjwYk3QmCLyzpbM4wCHM+jItZQoFJwCQ1P6
/MwPo+2GPvPJ73jBtrw15u+74Xi6pwnOzq6Y2RBw/M5zcbyTx7GDqTnDcYz1
OeR5nYXn2X9Es++nzGbSH72fmXv5Xr0Mx1SOVocr0u7sTNcUbb01Nkj0OI3G
m7QUQ/jbEhVjrTOEeTX6WlLYzZSKTdrSxZ+IzVk+8FoQm+tdwYh0OYXyaBVZ
0OtLI3mu3Awb9XavYb3Ojh6szhZ46ImGmrsyJP+MxWOfPX0a+qaWLBrY0Ngc
OXc70VOdCxuPcKw8XUNOchj0DMzh4uwAQxMr1HeNgYYHZkT7QN/MGrYWhnAJ
Scbi081/5p8AdY5MTU6wjmk7noNwfycn1oTK4swuOF74GMlEhYu+/B+o9/sC
Pmr/yRwfyRa7cIuw0uV8dVRHniRSZq9Yqb0tQwuhVgdZ7xCZMuGIOFdaNt2c
4m67ZItea/VHpOcl9FRyXo83JVaZ6jvuSIy0oOJZKqkJd0dssBEaiFSWSeod
YjHOVD8VSjpljr5AZuZP9z5Ft4xXflBcC6VwlqYnUJKfi9zcXKTGhkNX3wg3
S2uwLFYgeWeL8tPDeMLvj9oznNuZmBGcf4J42/PIdjvNQpQe+n/OlB8WeK0t
Bl6LOM8LPImrHjST1FbkCEI4aoj9CTyqcmfhqFKO0FPuwXLsV6fzJRyBc2zQ
bNw7sTpyYpvoP9WZZgi3PYKFe5ZM9G4FO9bmn6//bKDlugkirfcj1v7Q64i1
O0TuIQ3u9HB1pB0LxHjg1dkReFjowSEwjsVlr66usEpmK4tPMP54BkszfQTJ
Fqjvm2SHvRXrA/fwNEwM3Ie+gRX6JpewNjcKeyM9FLaM/gv/CONCvXCjpE3E
/Vak+zk5QkvxK5id3gnXi79HrMFOJOq9i7vunyNE+z1MXlUkPORTVkR9pUAD
ud5fI83lMJPjVM8qizrP8sGobVuwcQvJYBMsAyZgu0TAjlMLkZMyhDomb0gs
RE8JiY0M0OdadW3JUKWFTYNdL2GFTwiTCfQ0PG6JgJ/tKYxVOMsLdIL5nkJb
+JjuZ4XXCCdX+NMAf7r3AbTPnYVPSARCA7ygdVkXcZm5WFiXAV+qi1U393PA
P0KAv+8obIy5tjeJ9hdw3ZmLzesI/gOzIolG8Wvn5YziV5wOoTjyvERF4sJR
e3OMWXFL1lyDkNy3t8Rh08AMosT+3Ra3tT9R/AXHy68kkU40FZtWwG+7xuoI
8nWfOeCvEonW13lfWotHlpCwgfYcK5THXCQ3sCZZU+E18qqB+nQDJCdEo729
40Wx2fNjPfC2NYS1dxTGn6wJJdFpK7XpqWnxiRVcCYV7RArul2XD2S+KD9/b
RFqEBxKy6/+BfzT0Qtqaa1i58zu3b8HR0giuvrHoHZqSWw80CIpG9/k6OkLz
xJcwPbUTHmo7Eab9CdKMfscaC8QYfEgk8gkxfpuuh1SHfSxqhhqyVitMkOl1
HLdDzrFm7YIiOFhgwaKb1h4yRXC7xJpVnWmBtHAWnvemxHQwWB+KYG9dPi2n
WK5eQEaCLYq4Giy/kBjA0slRbkdqUNTLtL8AsrX4IcJREXfjVJn296pkARDt
U7ydzzE0fNMC4Hzer7F4MppS1nT/ASZmuM4blFk+GhnB/OLKNnHaOnvUiyt8
L5wN+rE2NDXTjy2+Jl1OXAhJZowvghLy8LivhWzsrphe5+vi/NkWVZNuIZfw
yRE77N93TNZAyvEirjoosWotNPxvgqykex6fUh1eyA2nbCmU5jKkatJFJGX6
1Pua7HuB0nspSVqkdlgvHcI4M1g0999J450y3XGd6JBkmcnUyghkR2khlWxP
ZGW+tmXLWF+eYTpRWVnZ1i1j4J4vVtoIFxiMfI3FhnOaBsaS0FBbgUkaQi8J
Jl598hhh7lYw84jE3Mo6N/wGhh/WwMvFFpc1DVDbOYr2shtwC44V47qvJQYg
9lq1bKWsIzXMCSoG1khKjIeFoQ6s7X3Q0jGqIJTcoMWxUlJS8JDcfn9nZ2gc
/wLGJ3fCR2MXgjQ/wHWz95Bl9TFSzIjAunIc/tofozX+JBbyNBBrvRd3I88y
y9xSuQniHY+gKlFdNJlQDbaKaLCpvuckJcQ56pIWpI7KWw7A4/Q3JUTnZpI1
J8+WZFoskWdTRJ4FuKhiuo3rL/+OZGXRolf+tkTna/CQN8oRRYNmwIfbHSGs
jdNihbXytN4O1fmJLyqIRdfKU+qrJ8vrdfZKnk6TPYqSbdgMIRCEala34oNg
QKS9i5MNDExs0dA1Th74HMtsK2kW+tXS6v9zcHF0RlMPkXibZDlE+UHf2Iws
BTsYmDuiZeCxEB4llPJYmx+Du4M14uLj4OrmzgoQcs/tp89qF3TJfG3LlgxN
itc+SpPiLyHZRlZNhi6ZYpdPWYnsJxIj4FS2GvyN96Dnlh6FtbBuyOaA7HBV
FCUxnVe67bQUuiImxIxy1r/bGqXpcgmPaGFyQtF+JVGTaRYR9SCO5nGVk7Yu
nhcqF9ziWXjATNivCRfREwIMx6O2qowoF9NifObCHEt5o//W5h/BkQaKV/ZI
YwbpljA3NYbSvOswMTRH3cAsuu9mwdE3UlxHaeHuiL1R84/8c5joaYCVlR16
J6aREumLG8WtCtJ6ITMzM1gg7MvHwYHVCjFS2onAyzsRofUucqw+xBXj95Fp
s5M12PBQ52o6TGXLMuQo65opNkS4zSGWe/KUt25vNBMNOuAc0aAvMxvgdsku
sEzuB43/Y+FRRMF4QxpW1ZeIYCbVpHo0Z27Mu+6OG7FG9DPvSJgaDS2I81XH
3Svy5kZOhXaHr/khdJBLW29wor0exQ1nbfIhE3nPMQV1NBajM0uHxksQ+Dem
XSZjTWkaiHBVxcLiMr+I/gKLhB3YWxIlr2eS3fysOB84BqSz3ycnxrG4OIe6
yjKy3+fidlYaTPTJmk7MxkDbAzjb2KGR0ed1XIvygEtQhmQzEyvWjbRXQvui
MgwdPTC1ihdq6GQNfUzW0AGyhiz0jVlu9FUideIsudDDYb4ETq7bHsRyDW1F
6+bgtYusm+0IXxhsh+i0sUGUkyLa8m1lGjoXNJMWaYJ7nANCuu+U5wbgSqA6
NvvChH1nk9C2JO9zyAs5S9Wi1/8US4eGnOuZOWLsyVNWtIILOW8Rls768iQC
3JxQ20tX11MEOBohrbwH84P10NezQO8UUXDmhmFnoI+Sh4/+ib+GmjuJcPAI
gq8PgV1hi3yVHU5f8bK3h+rR3TAgqyaIrJpQDRqSSHRGww9w2+kz9CcchRvv
Exq7rsLsTv1ZWkwrn8jTY60yxootWCEnppWTn/Hup3H/lhmLktkujfa6544Q
1wt4OpT0poRptZT5IybYhGZayCUW0aapHpoYrufW2DsS22lLiSdCHE9h5YG3
xHbK7W1ZYaq46nWSquWvvZx20tVcitwwZUQ7HiVrJc75OPlIvPNRmGoewcPW
Nmmq3Tb+eW2sP6Xapth0sCAtCPa+V0R+9nQOnjZ60LP3QlJcOPQua8GdsOSh
0RnMzc0Lzs+WsjSY2Qdg5dlFQ9dfSWY09KydMCksmreev2gO27BFY6bHldDI
cFNDhOkx+F34J8EjcN3+c1zl3JyiwtOWdJZZZoVEpO0SbZ/2MA61V8RErQfb
St6SsLYnrSGEtWljsp/LwfvNlp4LweSZ9ZY4sFwN2RYUQdagHQIsDgqWYIU/
yTqiYeuRvrQFnSNcHGxg7uiLwellcQvaeIrc1DAYGlmysHVzB2/0Ty0z2p1B
KIGxhS3sLE1Zbtji+qawjrCxgnh/RyiduYicsrZn19ESPO3scOnIH6CvSNaR
9i4Eq/0Hq1JFQ0NKPHajNfooUTs5h9dAOvU/fIrJAj22jvpvcWEhC1V2Yo0+
IYNDKAAjVXJKU41xI4bGQaa9ucWlSgvLi+yNKztQUxKKxCBtutG8Iw2Doxnc
ZAtryjJlC1Wq5Q+VOcDbZL8Qb6Twkuuoo7mMFTulQZivs1fqMPFDcboz2xfk
SPZwezXcnGyhRVBbLotnb7t3C1bOfph+MglPF1dC2GYImZgmfMcTV3OK0P6g
Dg6mughKKhQIm2AG3lhdRHd3D1ZFM/DPn2Meu4SPDlvjwP7jMOVLzmR6qOOK
+RcIvPSvfOjcV0g234ls173igqHFeOsiFBFmdYD666UGgr47xqzj9vJDzkDw
1hamFhsqYWrcI2m4G4FYLxWaufcrOaNxMMIclVCdqEYjWQireMmggJdZIUJU
Nb1Lrc2NqGu4j5mFVTGBkuzhvR0PUVvfjKkny2KjSMKx2x80o/F+KxbXNgQr
2OLjXlhoX8b1ooc8F/uZ/GqwtcPFrz+H7onfI1jnUxZJXOpMdpfL/4Vqv69Q
FXgAkcafMm/cw6RzCDT+AnOEg9HQlYZkNcQ4HJFWCBwusmQGsJUWqeeXVkMK
QnKghmC0fUPilZhqi0GAx2XM0X6p0mr+REqtzxUjOtAA9wvdma1XurPU3XFB
FO1l0urLTiXsLBs0loHsawURF6je//rLr4j1Nh/aI42qMh300ukKKUxzkk/y
2OSo8ezkI5TkXoOZiSkaesfFfiVky8+M9oZvWAzsHV1R3/GYFf/3dzCDrpkN
7G1tERZ/jT5P+SSPn28JWehnC+DDQzY4SBaAsY4hWwC0OIc0PJmV7TL4kNko
xQVAfpaFnkKcwxFKgqTafUOaNuK9zskRLIL9a7EWXK2f5XIB+7QYR3SAPu7n
sJ7Rv5IYhGuumTIGvlRpxQzCz2CfRin0PydK4WWwv5t/HI8G+zA2Oc+/o6+/
lATJLMGD3MeLhz+D/olPCGw/g6/Kv6PCdRcC1P8T90P3I999D5Ksd7Pg94ow
RcTa7hczrfNDTiPD+6ScA7nuqh6SvZUlEaM0It2H9aUcux/KlOk3JPp38XVn
XEt2kCsEt1iK3gcpCHFXFZvH/lyqbQwQbcPpLNrubPG+kX3iwS1zBFqQZ1gp
GJ5eKijmZUG7sTAGfw9X1FE0YhWeVibIquBZ5o+w9mQMHtZ6OKVigObuSXam
6yFEc80qI7rv4hJtx7O2LvZu5A8rAlewStFIgXsN3fhf713E/uP6BLgnYHjZ
gG9tqYlEI0JWdbigZ1opM0DrPVSFHGVhgYzq8OGBN3xPUqEqBW5BjCZuR1+m
+BMJDgHOSlcEU+Ae8QrcbySO0K6mJIQ6K2OFb9H8PyWm3UWyAdByEg8zLjMr
8pvPEd80df0FBqpvhvDWWnSrK6twtyFwPbQTFqc+QIju5/A6/2+odP+UFQjo
jj7Eqh5lOn2FlXx1Vtsr3e0I4xvUrprmdozJMuonpnDdJD9vBp1HXrQmxY6U
to9UerAkjaeDyVL3wvpwCqLIYpaPo+e0qPQEW5Rk2FBQvyPJHLqXZU8jKfnQ
+VfEmNMQQnTquaZGZD28VDjNy0vWNdxOCYGxqQVcnOxg4+SFwalFwYY00lYB
LVVd1PMppfdL0qBNeIGTsxNsye3Nre/cKlGlFFwA5jElTRw6qAh9La7cEQ0A
i9L9CKl8cyGaLkejI+5Hn5CLjkh2PIiSqAtSeymlFDRdvfEWcyqLwOwPQ1ep
GyKDTMRa1r+RxK1eibbC3TRjmVjdwcQqDWVNcD5GQyPe+iH5tgBHKj3n5+eZ
9HSzscGFA5/A8vQHCNX7A9yV/xU1np+yBP7hpCNINNuFHI/9WCvUQIodUeQD
lLB6z5SL93I8grormqKZf7XBCYkep4Qy1dsl+l1VpgXSI/Sp9JNu+GP3IxHo
qYOVx8+275kdusUMmFMPI1hZup9LPrdI854dzqCHdbcKlDNgVlzRR5TdEazU
MpezHDapAKWy6Xm2l2/BppjgxjhXC+rqmwjfXXmVxyTLNOzuxuwCV3luZWEO
fb296CX/Kb+dmlt8GUweVdTC4YNK0NXQY5ikSUghWh8g05SrqjgUd5A1emuL
PymHyRCZDV9QCSlkFmvsEOKgiJF7XNtDKc2lFeY4P1j5byT71kTvdQQ6X8A8
n+YsCsu+MMw0+sDX4jD6spnVU+FPhk6Bkrpa20B5/8ewOv0hwvR3w+X0v6DO
63MWIDaWegKxZp+iyO8wlvI503oFb1qnwWE09KAr24Dt7TTAZp4Peh0qY0Gv
2yXBNRmhmrh7w05GR2U7+/UUJ7mOa8vlKL3jh6sRLPj6HclsWvE12ec8NaiL
viciiOcaPOFHTYE3uWiaN38YEvrXz2JJUJnu1VMsXcKRE5r4+tBJ2GpfJBru
LoYlP7X3kG35HrNrd0fuZUX7u5NPi1EzUzm8XfsmfcIilmhwK63KSX2qczTJ
iADjTYkS9LQrhFUPG2xLley+glPIDTfCNanzRhRy/RG4FaFFqJcSjWV8+4dU
mbbCaJHAyM/WFOf3f8hgFGXwOUsBqfHZDc9L77Iq1LQ4dyWlH7fVEG6+B41J
KgxGNEdS0rGMqTVjJZasQQmrP9Xhv02at9vqxxo29VRycdCvSzfekStMfWmr
i3um6SUrpOmni85yH1aNRyrpFrrjEOBwGv3FdhJJx8H2Dtn2U9wVKcLf+pOg
Ss5d39THUPX1cQ0cIaiiVaQMT37KUOVx4XesCiZF1UMhRiWNi1FhcazXLyFI
lh4poEoWxnqW5WvQMNY3JVtn/z0vFqKywtdl/LXkntGGb4Guqhih8Q594RIx
FY7xGg+WgDuaz4XNPoOvP0Yt2bdFBVlcXEaAjSFUDnwE81MfIsnoY3go/zPK
3T9HoObvMJp8jPUGa4pSxNStSyxoujNDneGr7yZXBWGRr4JARVXrTWPEuJ6i
RVrlg6XruWBpCgiqT7wuAcl4C7eNLj/Ok99GF8vQ2ZiIMA81ar9lwSY/F0TW
YyLgCNtLoS5emcii3PFxtSvLCx/MM2GWpBeB6zkqCLMkddM2OpwdGd3+KEl3
YTOeI7JEXYEXWQxch0/B/vIpVqeJgstZmcXk43H8V2j0383cqY+uccmRNPe2
M1kZwRb7MFXCKglvl/b+SrrM9eQWdAVu5ytMt8XNNBfZzreDlY2oKwtDHC3N
1BMqCiqCpvSgS7jpd5Ie8Mc/vHLw5zLlYHUNvlb6UDn4MUu4jdP/GH4q/4oC
x12I0H2fsLFjLE+tPfEUM+p7636KkRxtBqT6ZFXaWO6ZamFccYEAGRMLQFuh
E2J9NbA5ckW615XecOHqdEv2OoKetFjCUK/b0inPk0oDW6USoXq0mf0N/zN0
s3v75dSCzvtlGC6zRVe+FQFOdwHNrOkusERigAGWlleeBxyRN9VzvOnQMTUc
/fo0bDRPwlx5N0sbsjn5H6hy+4QAZy/XDUTnY0xmXWC17ChnaopWQqjlftoF
hJoHt0u4fGaQCiHmRlLgbBIoRPrrcl1AFssE4GzOFSPKXw8PcqzoDieKIQKz
YUK6fEwPYKKQi3J+Hnr+SLb0SxmXX1qGt4UeUS0/gdnJDxCt9xGCVf8NOba/
Z2UAhhKPwlPjA5Z7NpRxgYXSTxXo81aQM7jmc0q0glD1MsPvLEoSdchpgxSk
VCk3Tg+5yeZ0n3re9iaErf2VxCfEiLyrmtih5ucS2JVce44ECsRwuSN8TA5g
nDqpiAR6+zkcnka+bOHwXS0VyI7UQIjjSQKkcBea0xjuchL6aocxOjomD6S/
eD6Qjqrh2JHTsFJXgsW5PSj0u0hY5z+h1nMnJgmQylx3shyYOUmYcUXICZY3
+5QF8fJOTCJ+IpxOoKuIOVWkZGnyfjBCfA0wP3KLpbb8WmKq6Gu5wppXrLQF
SEwVnCC64ncBdzh35k++G5QWW/zoEVhZRTpMLgIjCairLpe5YX6GttpS+Pn4
IsDfDz4+3nD38EZJfT9GWqsRlXKDlX0e676PQG8PuLq6ISkzD0tccTM8qMhj
hW7c3D2Qe7eJuth+K0Eo4/MEoR5mOrhEEGqq9AEidD5EuMb/xnXLj5Fk+jEG
4o/AVfU9jF+/gPYr5xFgtJsVEqDaZpr7MRSEywwfq/VOSCD6djPvBxEQukGw
k+SvjuYClrwm3SMf3Y9gcUvyquYOsQjolVCWICkn5fgg+a3ca5OcJcVbGbmh
56mU+/ELosm2cq+WSnLsFHLkq3R7JK/b2VlKbvo/uz2+CJyqBJxnYKF6AtYX
vkKxnzI8z/4DGrx3MXAWue9GhOFOGqkigjM/SBYbLPUWztyzRajTSTyu9ZTQ
eS7G6n4+X0ZvoeQ3ks3gxhVH5CfoUqkolXMD5c7wNTuAyRKum+x3AGd/hQ+m
6z0I3ANfo5inC6eNEOmeKNwrL5SCc+hBGVTOKMExOB4V5USryC9A9+AUAeQD
XMsuweLcGGwNtRCYfBPNTdVwNNFF8u1aos7WQ1tdCzdLqlBdkg0dbQOUNA89
D5yuJpehevj3MFF6H6FE547R/i2umn6Aq5afoCeBxqF8wJL/aqNPIdKSi3Pn
zCBHUZvCmUGYollpx6ozD5Zy2ZXb5AzJ3pwhuTmMGZJfl7CxokwnLodmsVTe
8VHERGsLn44kFZ9lmbZM55SKT9ooscgOfuSJTN+1Yp2WBYTSJzI9UEsdFy9C
6CZNFhnl6GUqRShBbNENP/qR5yFUXue8iINHVHH86FmYqhyD3aV9XKaG8j/i
vt9nbB++7fIFEi0+l/NpZ7gdYWEa1PwqIJQF8d42QqTrGTGI900JhctKskZx
ti9dvb+WbDW0AlKgswomatwlxosdzNJLo0EKws7R0/zZCxBaUVEhX1B8Ex3l
/gh3PavwBqI9zpOxWG9VODvaYnp6mjdXciahiptJ0Nc3RGlTD2dLfw1ri5Ms
XY6vo4yWonRYuodhsKcLd0qqhHiCKyHOiEq/x979x3Ng6WykBbWvd8JE8X0E
kR2cBqYnGb6HG7Y7mYM6QOcT1ny+OPAYkhwPsqB0Kjdp4ktHFrV/ODHFdbLc
hqWUPmn0ZKGF2yTW4tEqT95anCSQwo3RNMSHGqOlKpruTH8lMRENtaUh2E0V
XPx6Kg1ZFV0bS30JCHI8u8Uyt4OBn7riaPNZUWb+iK2Z5jQNxIZ6YUMelQrf
E5bPKq0yWBqdPwpHtQPIcT/DJVYEfI4JAktJ1yQRljHWe1GVoCqBJadUNGfo
ItZDmeJL3gQSypKHaIcGagL5tcQEUl0ciiRfFRqUJBWc/WXO8Cd6ltAD5RlY
yuupP+PvR9/DDFZ4bbgzndyP4Y6r5D6O9N1E9q0baG9v3xpSLia1UYHbWJKF
y9o6yCh9IIspX0VL832MTC8wxN9O8IeNlxDZB0xNjKKuogBmJsbIr++Xlkmj
+u8ygaijgQbUj+xi3b781N5HqtHvuFgkx89QH3KIVQKkvXRYaQ2PI4x0Ps7n
iraMFnLlUSj57M23QBiRnE9b/aTG4+rrloLx+HUJ1Oa64lnu2xxNEZbu6OSO
30x14goGCnoLJ2Krsh0RR57dZru/VF525lvD3/wgi6Ch8vJtoTUykeZLtfYI
Mf8StWU531SE6nvITqr0yZTfizjw9UWcOKYMA+UjcNY4iCzXU/A6xxUoppaV
ZPPfI9tNFt5A69BTH3wrn5UgBWl5ii4yQ9XoVv2mxIA7UuuLMH8jLE/kSiwq
ZLHzWgxXhjt8q9gsDD9H3XA//Wb1V8DnQNs1LD++Q4Mm6K1YKqW3Yr0a9XWV
mJyc4iJKXuEnt1XehrauIZoHZxTEOK3VWbiRzVjXxBJuzo4EsAYoa+4WcHwv
NxW6Gpdg5haCxQ0IgJRV434KOz01aBz5FEYn3oP3pfeQbvIea5VNO/GV++5D
rPnnWMxTwxWHvbjjr4g1wjFHbuvC2/ArljRFHzzrzJ6qg1Tf89S6J1WCMsO0
UH7dTkYxuZi45tIAJETQLLXiv9piqgr20BDjTqXicnUwifD9c2i/bcHE5U+k
lRjI/xjXkyiP5bIWOJn5GlPuKd8INPqMBZO+oCD390DkVr65//BFKB4/xwqb
u18+jGuEL9Jkgu7Q3cwbEWXwEYq4NmFMq36crY4A073oyzFg/gGZSm2LGyEX
UZZqKEMkt5FXZ9niSpwtXbS/llitaKqTVA/6a4nY7CNi008iNp8HSwnflMJy
YYxrsv06Sygh92O1ErU1FZiaEnbzV/GoswGJV3PEXJpQW33E5zTJAqLXia7g
ioCYTDQ3N9Mih2zi4uQQSu/Wst8XJtpgqm+C9olFqbikevry8gpsdFShefRT
GBJ0eqi8h2um7yNa/32Ue36BPLc9SLH5gqBTA/F2+1Aafpqhs+uGDoIsDrDW
H4KOnh1ygdmAiQa0TQ43ZKv100BbGdfKQ4ToRBrSY8xxNy9AtqNz4vJhbSyi
fJhRSEovm/LdWHLrepufVFy251qxoEAhRIETl68zEzlNfg8024caQpIx83Cr
pv59N/Vn0XlJRKfO6UPw1PkaafZK8Dn3T0TR/YJlSwZdfh+VrKLCJWYo7E9X
YS3HHhVw8cZSg08MLXGdaytT1bl4YxqdV1saLkMnd7uyr7rgTqy2TBHiZlMm
zhhmne3/+GExOTvYDF1tLVzLq0A92Ytp56WSlhEh1KgoMxaWdj4oKCzC7Zw7
aO0ex5OxVuhraeFGURXKicQ0MLLG8PzqM2VOKSCtLl+E5rHPYHT8d/C/9Ftk
mhH1XPc9VPt9yaJQrznSvsXqrIpvTfx5rFWaoi5JFXFOR8XM3vUmWq3oLKqu
GlIZKVV6Fpq9EeJynuUoUgPQa1IBOJCMMF99wik5z5GISsIzU2OsWPQBgaJU
Zj4dSUGkhwqv/AfJZCZf54N2IqyIV2NJKD/mA9KozLxHxkLNv8J8kTbWJx98
Y7nT7wTPnzzX/bbvkAqUTpyH1skD8NE7imQbRZZWMhi5B2Nx+1gl3sbI4+Qy
aIXSHazHAAvt5UJtt21149orYoS2lekPp+FHcvlYwd46RNHNZJG9fyvZeRbH
7yCIEHUuuUReig7cdeGkKGc2V3gRYnmd6LsilkrOzsZy+Li5wsnFHTnlDbRk
hdBkZrSzGdERoYiMikJoaAS5aT3sbB31pfB0dYKblz/q2vrffQ5YzTRVYKj4
CUxPvIugS/+OLIsPWYgiLYZEC9vnuO1njrwQky/QknqJgbUoXBnp3icZ0eRI
nQPbWtu58geiKkTA+qjaC0EErEQVEgXnWCqGmqIQQnD6dKZAatukkYqBbjLb
pohTIms7yn1YNSChOOBPJCKURn7RKK8nciL0VbE6pp/xV2hMvEDIkx6ePn7w
bVAlJ2Wew9fZK7nJ49SuFCA+C1oPY7SrCYG+HnBxcUbitVwsrm4QjeAJUuKi
0NT9COtri7iVHAUXZ2cEhMRhaHJBXCI0lvF2GmE43aPfVKa3uqmX8Ya9By/g
pOIFaCjuR4DBccTz1ddHovdgNOEQ65D3MJarOUKDdBsilRBmeUBBWkuJ+lmp
u1kot/6GBLs0piZKElPztxLZ3HQvivfihMgZT/0vCLkgf/5yata3IX3fc7Bp
on4BJkofwVzxP+F/8d+Rbf0RAjX/Ew/CDiLB4nMU+hxiTkA/g8/Rd0OTYfO6
1wncDj7Hm48cMUP4Jw0iH69yprr5NkkRm8YcQpZCdOTCD/PS7bm2UotyOzoN
IE/mWl4IO/omkZ0JARqoTGP15LaKTboeqNiUUc1XGcsoi72ECIuvmLnrSZHO
t8Gx82ElJu6HYqgumGqn9SFkbLg+CGnRdvQW8QLiz7E6Owp7Qy2EXbmF+01V
sDczQFQmNYOsIDeLaLiPptFSngk9U2fcb21Fapgn7Ilauii0KCHzAuxtkF/b
IQ/Jnz1XuRIgqXp8L4KMTiDK/DjNtSBEgSsfQgMhOhJPskAIShjuRZ5GjN1h
atOX2qS6bhkiyu0M1tq5PkdvSKhsSaaDUAPn15Igr6RwExYoS8iCVP5SWU6t
phNFnNX0GVS+WLl6WVRybblWYKR6jqjmH8FC6XfwVfk33LH9mJWPexhxiJU1
qAg6gvEbKvDU/hRjubpYvWeGFNdj7MlTBLCwh2JLZj1idbyEsAfqlQpilSJ4
XVu2s9P8uFTEBhmKEQ9/KemSvEk2p/hQEzTmcYU7RLFJtKih+mAE2CphgbdT
ScVmB2Oeh7Ywzx+xK5wl64Y2y7ufosJqd85zWFX4Jq29u60GtxLNEOSqSu5m
mKc6GQvzVIOexgmMjj4Sd7OV2Qnk3snHLBfchaaCRFi7xwu72czECO4/aENH
ZxcG2ptgZWmLB4PzIk5DXRxQVN/Jw1RIfRCssIKI3dqa8V59F4PuVwfO4aSS
Ci4e/QqhpkrIsNqDgIv/whzineF7WUHq3pTTPHSpxf+UYPGXmgQarmoj3lN5
K8VNDDVkMpM8or+VRN9N9t9gltQ5Xvz+tQToGUGXkB1wmvLcn/0wPJdD7Tui
Dv907SkMLirDSPFDWJ78HbzP/yvy7T5hQbLtUYcQbrgT9RHHMZR5CZ66n2Km
yIBVAo51PIJ6rpUQMyi13TLZEkxBxCDBUQrNP8hzlYMszT9oj2UWJVqKle4r
fym5IbR7GU3UXeiOlRg9d7BKmtci9ZAXq0UhKlXgN4hkpcVu5BX4N9maKo6+
iEirvVyZbCJZKVo3plu3KvMyfam1FhtzBdicL6JZ1OSVAOhJIW5fD2GuzW3U
5EfGpqamRFAJBpOl+Sm0NNXAw94M4RllAmppA1FHInVNLW1gb2cFtctmaORD
amlouDxqhQzr+YkBxAT7wdnZBSHRVzDxZOVb0XtK6SLOf/0lK7N43epThKr/
G0NvS/Ae+Gl/jKGrXKwQ5QPXPY8iJ/CMLJKRQ29poo7QZUtkAj0hWO4IR4i3
LsZ7pOyXzwoleu7VIDUKWVHwEiZA0+OoW36MTzv9gSEsKPpU8OpeOAP9Y+/D
nAhe17P/ggKHT1htsM7owyyMpSWWaJ3J51gDuLkSQ5bRTGvasYzmBicG45I4
DaQHMA+5gjTYbLmFy2Ye5MsFvybR8mvyvJAcbUWv9a8kAS6FN72QQavGjqeJ
AncsDRMPwuFrrYjJald2lp9sUfWpiZo3ivEC9y0mcKfKreBtuAcP+I6lAoyJ
0H2Rg56ieHO+kN0+8SYuFKHoNkX7pnyy2WBrBSyMdaGub4buyUUBttlRHnAK
SsYKoa+POqqgo6lPYPsYS0/msLqxigg3Jwlsheo02FhCiKs5bP1iWPX/UDcr
eISk0r5D/Dp5Fr6/+q8L2LP/LOENKjh9cDcizU/hiukuRGr+O3O3NvjtZmXH
hGgkCl/a3KyEq0gjtS+k+58TAkrekNhj+yo8mT12dTJPjshSYkvbIrZzKdB/
LSGy10PVcM1bkZ7gL34Y5H7O3+/l+Wk8aGpA0/1WLKzyFTTekcTjLsNOVxV+
Wl8gxmAXsszeRaPXJ8i2/RCDcQdQ6PUVhlKV0JeujPJwRfJFdDFbqIO7MUTz
LzFhTTbW6mzQdtMA7bfNgHYfCuhWbwroNm+sPPBCZZY11gZodaMkCuiRJKZ9
paCzJgydDXEUKz8G5goYbIrJzSpk795irzvYWFNZIAZqfOnHXmdH2M6OQH5j
714XjvooGWONAahM1SFX4v02uxACkw4/bJCLIe9YLFtbjgnqU9SY9/zH1MOv
wHULGS80Rq7/UYr3beSO6pKnMJevjs2pFnFP3+pc/QboU4uCQDU2V+ZRQTjf
1MImU8+8bMyQXdUqoD89wBHRt4SucSOwMTdnVKMxNxlO7h6wMDFFaVP3VvSv
L6G6ogxjs1xjucmuWhgZ22Bobl0O/dR9RP9VNQ3g7/9gg68V9aCnqg4n1f2I
tz6NfPudKLZ9F2ORn6Et6DPkue/B48zTmL5+BjM3zuBuhBK6b2hhpcqcoP+e
GfXnV5qjNl0XIzQntjdohxAY2BvMyKMQJhjI3A1BePQgClXFQfTW/FT6pJ8U
sXfcGCWRhVgaz0FpmgmRhN58mNKzh/4le31FHCuKUcUQDZqrNCc3h14hWT73
TJnGKZQv+44Wj8/4B7cw2QcPS2NYOTjDwdoUdj4xmFri2+r+WNwXqFQc7ukk
BOsBFoYfYG24DitDtVgfa8TqaAM2iPTcnHyI9alWbNKS2+tTbXQtzHeTK+gl
HKALG7Od7HcsDZD/g+T3/m3YXOhjK6CffI9HqKvIwvIMdUWvsMI1T8fob+zd
NmEMRFpsTpO/TbIZ7HVzhmBl6oVj2/ix2so7WFkY+dZ5zx17SijG+ji7im+6
vtryG1id7xdm8PPGxXnbt352aUCBuw1kbJnelT7+3YvGXkV1cRrWZrroO8Km
+tjfsdj3CrnFXfQjT3rpb+zdtueMbRfHegBa4ZU8qm14Sl5fJd/1IarvFrLn
/UeIg42VaXjYGCAw9joaakthqq+PitYhQRw0l1yFho4pSirrkRnnDxu3IMwR
HWdp9jFuJIbg7JnzKGnq2SoOsIHu9ofoHBpn19ZcmAEDMwdMLAreYlnsd21t
Le63dOJqdg0etvejr6uT1aMa623B8nAjno7WkTtbg9WReobd9cctWJ8guB5v
xuZsB/nfifUZ8pMAd3O2axt9Q78rxe7KMMUvs/YOUG3sfhFGuirZu23slYZn
DXEYfzpJ0cRARF42preLv+2QH6M2iNYqPBpqkcFT7q/kVwJAKfB/JB3j/lPQ
ro1S0IiX19GYj/G+Wv4d/ypcnnjJ8mPfbd6P0Fafi8eD9eRdv3jnMNdNlzy5
Dv7Wce/Zu23PGdv+wnmvoLX6Fhrqa3HjhlitTuG7Crq2kizYe4aDVj1ZX5yE
s5URssr4HWq7yBdkGsh21Dc2Y3l1nX/HvdY1NGOJK4UmG6tvwjI/Jny2tr6R
jK3Jzbt5K4ecY0lurLauQZy3TW5sVX5ebT1WthxPOiZ8NutmNgvu3zpvdXXL
9UnGZPMasLq2/sIx6Tm2frcacry1pxsvHNsmjjXgKSdbJPOeHbtBzrG6tuWz
5L7wWbyyz0rGvm0eH6rDj72CrKybjPLTf7ydReFlJd2r/DEmB9sQEegFR2c3
3Cmrw9qG7PibT5dRkZsOJwcHBEXGY+DxnMQ2vY689GTUtg8pPCPn1pHoaw9V
LT24u7tCW1Mb6flVNDqV//grcsbCpqZGdHd1KOzgD903MIzhRxNyt6S3fxDD
o+Nyt6Snd0AcE+Z19/RjZHRsC0Qb0dHZvWVeH0YeyR+vq6sHo4/G5OZJx4R5
nV3dhKnIn7e6phbd3b1y8+g5x8bkvwcbG38sP6+jSxyTzhvn6oOJ8yqratHX
PyQ31t7RjYnHU3KfZWOT03Lz2tq7xLFtkrHHXLNqcd7diioMDo0+M29yevaZ
401Nz8nNa23vFMe2S8amZ+Yl815BeUUlhodH2LMvLy9n3Ye/qzRcW17C3BMm
Jti/OD97xGSWCae9du0akpOT0d/fL1v1WVmihNz+LWPUhiv9atIxYR5dcVvH
6DxaZn/rZ4UxUTqQjYCW/XzRmNTU/7x5y8vLcvOkY9J5KysrLxyTnmPrPFps
cXV19YVj2yRjtKvW1nlbx3iDxDOfFca2P2fs2+bxFE+UVklJSWycnisiIuIZ
O943SUPescxZ23bg7o0o2HlFoaXlProHx3bwZ2hsbBQtFbzVQhRaDQ0Nwt9k
+299vTgm7rV1dYK+J86jY7wfW5xHP8t3nJXsebXimLgv1NQQIdUlN086Jsyr
rq4mAqr7meP19PTIzauqqhLHtknGaEa1dF5lZaU4tk0yRmv+bz0v7QcgHaMZ
pmRlyn2Wjg0ODsrNoyqhMLZNMjY0NPTMvOHhYbl5VLAIY9slYyMjI3LzqKNH
GNsuGRsdlQrBVwTrDnv29Djk799ZaD3uriEbohtKqhpQWXAdWuo6uPtgRDht
SUkJ0tLSKIDJaenrdkRHRwug5pbRS4z9KT9LBciLxrb9wPP+lJ+lQnnrvG8a
e9nPfrdzvIKoqCh2n6nzIT09nRpiv5/QegUddXkwNLTB7fwC3MnJQVVdhygb
6cqn8pHKRrovXrlCjdbchfDv5S5fOiZcPv381nl0LDU19Zl5wtgPMS8xMfGZ
ZSEd+/9innTs6tWrz3xWGBPmJSQkPDNPOvZt8ygUts4Txr7bvFekY+xaZ2dn
v7PkejLeBn1NdVg7ucLR0Qm3Sxuxvgm2+e1gOy1DGqN03LuXG9v23/yz/92v
7/+v7/YX309EPXk8hJTYSEQRSRgRHo6cgjoFwe9Eoy4EZZa5o2Rn5f8kd8XC
2Pb/M++/1bX8MfN+zqNqoC2DSCWaplvEUFXIpFLFM1JpfWmKVVKraBvmi0Is
0b4lV+TAmc8OIB5moYCAM0IKzrv89P72O1h4TN4tN7IEigY6/WkLaqorWAKF
cFZaJislzA0GJpZEFjrAwcUTXY8XhbO2t1I7Yh07gHiY5XoU3I5/3llHRx8R
NeMh4f+dZDp93U44fhdLYSOaKe8mfAWzUxMY6B/gemsNDGF5bUNB/KJEJ2hr
65A7Bu1yUUp4LJ3Bn7KC/niL3u1F8bdfcX+6wB9pUxYdw2opMk5MxvhhBfZq
x33mOP/3se4mBHp5wsfXh7zz9PQk1+Dl7Q0fLy8kZGSzBObF6WFEB/nCzs4O
Xv5haBt4zKo30fu5ujiDGynRsCd/s7N3xLX8Cqzy4Wa20lP9OZYe98BE4wL0
yK1PTk5iW1sioQzB/l44raiI8Gul7GN5ib5Q0TRG0b0qpIR7QkPHCl1jnJu2
q7mBEngCQKI2KLyBirvlqKhswBJRn6+FuuKCqh7ulN5D4a0UqF9QQVJOJS3S
Imgm62tLrOJUd08PEVpEy1J4jbGrHqL3LD/lbtPUoyHUEd2quaWdVgJ9g310
B1YWZnC/sR5V1bXoHR63kX43KgU3kRlOYGUXgKUNcHrH26jPS4KKugG6xp+w
KZEOJvCJyuZuz8YiQp1N4BF5g1VXzooIhJU1bfBM7jPBjJ2tDewcgzE69ghh
fh5Iza0X9Z68FH9ctvLA7MqmwiB/CWtPHsHRUA3K5y9AR0d7G7S1tRXewmVt
bZxTPovLJk6YWtnA7EgbTHU0oW9iATNjXdi6hWF8novR2thYf4Vq/7RLMnk7
O9wOV0sjaOubwM7GEuoal3GtoJb+zYr7+ifYjz/D0MO7UFNRxb12TsfC2hy8
LHXhFJRGmQY9NBI8LOAZlsm+Kx1qu5sNDU0LDM2sCGBtLE6DupEzHi/Ivhad
nBPvT1BgjvbBR1zMztvoba+Djso5RGSWsBNWX48iU8jR5tawNDMMV3MdeMfc
Yn+ry86Apbk5uXs2NjYENDY21jCzcERT+xBuJvhAy9AFw1OLTDYUXQ2HmrYZ
+mdW5L7jj8gf5+BpoQufmJvsqCOt9DtfQsmDIbH7QuHVYKhqaMPRyQkOjo6w
NjXFeeWLKHvYh4LkaDg5O5O5bm5u5CrcXJ3h5hGBiZkFFKXHIiI+A48mpzEx
3AUXM22Yu0dgaR2CsjzRXQ21S+oovS+c7m00F6TiopoeWoc5L2zJlWAYWweL
xbqHHxRDS8sYXROLmB7pR31dnQIzdpD7WlffjJnpSYR4WcApKltA1uxgHfkG
Oqjrm1Xgb4Aiv9Qrb0ZDTc8WU4truBXjCV1LH8ytbAjfvb36DlQuaCGnpIrZ
V5oaqmFrrIf4WzVor6tEzu3b5MJzc3PJ3Nzc28jNL8fi8hqyY9xwUvk8jExM
cVlTDbpmTmjqGlfgtP//gc2niwiwN4BzaAbXf5C8D3IwhI1fEoS41geFKdDW
NUNpdR2zi9wrzoW2sgqu372PJ1OP0d7WRi21HeTUbW2dmF9YIQ86Emq65qht
7cX42DDiA51hYOWK8aV1+S9OiM9oOww1NXGTSHU7o8tIzKlVENT+1ZlBWOhq
4sbdDnF1RtqZwy+hkL9t3DHqCtKgbeaKlo4etLWTS1hZVxjlZ9TnJkFV2wRD
TzYw01/HUFVQ3yccbryLPHkVFZhYUOHg5ES7C+ppqcE/NQ/Vt67B2NBwG8zM
zMiXMzMzhYGhFaruj7A2Me72xjhzQQ0Gelo4fVEdRfcHFKzlvxy19ycH2uOS
ujo0DSzRN7nIf7kfsbVXkh5BnroVWocmsTQ7DGt9LYRmVPCF+V7FyP0yXNYw
wN36VvT19ZK73I6R8dkR/s9LU70w1lCn4RgoTA2FtokbZlY2he+2tjABOwMt
pBU1i6F3efGBMHWKxtLaGhYWF3ZQ+yuRSE83NjHWUQEdItAyC6rQ3XEfbpaG
8IrOlkgkJf4gXXUFuETEnh9ZrRvgdB1KOpZnyfbvAR0DY5ga6kBL1woPh6aF
L7M61Qc3O1Po6RvAwMCAiFBdxKVXjEjuVVqoC8ycPMjS1kFMVgV/r15j96og
JRjapm5MztJ/eXEBZEcIo5voq/wtfUiQqqFnhIk1DrnZ0d7QswymUxTkvgKh
XWsrGBzow/T8sqyS4uY6+jrbyBpuwvDE7Gv8VDo8NzvDMuy3sdftWFha4VcH
+LW0A4P3i6ByWhHnNYzROb4gVLBdoQLTQgeWnqEoLsqDidYleMbfltRwfJXI
j1YYEdTZeYXi6pUYaKpeQHzOPR5N7DSn+LOsL8/jWkIkUm+W0Xv/Cn/35h8P
IiUqhFAFW/iHJWJ0epF3Pr2CkZ4WxEYEwdsngOzfNVh5uqkgPfTi//ld+rvC
//X/AjaDMrI=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$HomeDirectory", ",", 
      "\"\</Dropbox/PostDoc/2017_SalmonStrays/manuscript/FinalDraft_rev/fig_\
contSD.pdf\>\""}], "}"}], "]"}], ",", "CPlot", ",", "\"\<PDF\>\""}], 
  "]"}]], "Input"],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2017_SalmonStrays/\
manuscript/FinalDraft_rev/fig_contSD.pdf\"\>"], "Output",
 CellChangeTimes->{3.719083075377941*^9, 3.7190864888764677`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Timestep", " ", "t"}], "=", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.719144952885672*^9, 3.719144957781028*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"recruit11", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"rmax", "*", "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"\[Sigma]", "^", "2"}], "+", 
       RowBox[{"\[Tau]", "^", "2"}]}]]], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]1", "-", "\[Mu]1"}], ")"}], "^", "2"}], 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sigma]", "^", "2"}], "+", 
          RowBox[{"\[Tau]", "^", "2"}]}], ")"}]}]]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recruit12", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"rmax", "*", "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"\[Sigma]", "^", "2"}], "+", 
       RowBox[{"\[Tau]", "^", "2"}]}]]], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]1", "-", "\[Mu]2"}], ")"}], "^", "2"}], 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sigma]", "^", "2"}], "+", 
          RowBox[{"\[Tau]", "^", "2"}]}], ")"}]}]]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recruit21", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"rmax", "*", "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"\[Sigma]", "^", "2"}], "+", 
       RowBox[{"\[Tau]", "^", "2"}]}]]], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]2", "-", "\[Mu]2"}], ")"}], "^", "2"}], 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sigma]", "^", "2"}], "+", 
          RowBox[{"\[Tau]", "^", "2"}]}], ")"}]}]]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recruit22", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"rmax", "*", "\[Tau]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"\[Sigma]", "^", "2"}], "+", 
       RowBox[{"\[Tau]", "^", "2"}]}]]], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]2", "-", "\[Mu]1"}], ")"}], "^", "2"}], 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sigma]", "^", "2"}], "+", 
          RowBox[{"\[Tau]", "^", "2"}]}], ")"}]}]]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RecruitPDF1", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", "y"}], "]"}]}], 
        "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", "y"}], "]"}]}]}],
        ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "z"}], "-", "y"}]}], "]"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "z"}], "-", "y"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RecruitPDF2", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", "y"}], "]"}]}], 
        "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", "y"}], "]"}]}]}],
        ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "z"}], "-", "y"}]}], "]"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "z"}], "-", "y"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NR1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", "recruit11"}], " ", 
      "+", " ", 
      RowBox[{"m", "*", "N2", "*", "recruit12"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
        RowBox[{"m", "*", "N2"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NR2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "*", "N2", "*", "recruit21"}], " ", 
      "+", " ", 
      RowBox[{"m", "*", "N2", "*", "recruit22"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
        RowBox[{"m", "*", "N2"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p11", " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p12", " ", "=", " ", 
   FractionBox[
    RowBox[{"m", "*", "N2", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p13", "=", 
   FractionBox["NR", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p21", " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p22", " ", "=", " ", 
   FractionBox[
    RowBox[{"m", "*", "N2", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p23", "=", 
   FractionBox["NR", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NextGenTraitPDF1", " ", "=", " ", 
   RowBox[{
    RowBox[{"p11", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{"p12", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p11", "-", "p12"}], ")"}], "*", 
     "RecruitPDFsimple1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NextGenTraitPDF2", " ", "=", " ", 
   RowBox[{
    RowBox[{"p21", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{"p22", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p21", "-", "p22"}], ")"}], "*", 
     "RecruitPDFsimple2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RecruitPDF1t2", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF1", "/.", 
           RowBox[{"z", "\[Rule]", "y"}]}], ")"}]}], " ", "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF2", "/.", 
           RowBox[{"z", "\[Rule]", "y"}]}], ")"}]}]}], " ", ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF1", "/.", 
           RowBox[{"z", "\[Rule]", 
            RowBox[{
             RowBox[{"2", "*", "z"}], "-", "y"}]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
           RowBox[{"m", "*", "N2"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF2", "/.", 
           RowBox[{"z", "\[Rule]", 
            RowBox[{
             RowBox[{"2", "*", "z"}], "-", "y"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RecruitPDF2t2", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF2", "/.", 
           RowBox[{"z", "\[Rule]", "y"}]}], ")"}]}], " ", "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF1", "/.", 
           RowBox[{"z", "\[Rule]", "y"}]}], ")"}]}]}], " ", ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF2", "/.", 
           RowBox[{"z", "\[Rule]", 
            RowBox[{
             RowBox[{"2", "*", "z"}], "-", "y"}]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"m", "*", "N1"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
           RowBox[{"m", "*", "N1"}]}]], "*", 
         RowBox[{"(", 
          RowBox[{"NextGenTraitPDF1", "/.", 
           RowBox[{"z", "\[Rule]", 
            RowBox[{
             RowBox[{"2", "*", "z"}], "-", "y"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newtraitmean1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
       RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]1"}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"m", "*", "N2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
       RowBox[{"m", "*", "N2"}]}]], "*", "\[Mu]2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newtraitmean2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
       RowBox[{"m", "*", "N1"}]}]], "*", "\[Mu]2"}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"m", "*", "N1"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], "*", "N2"}], "+", 
       RowBox[{"m", "*", "N1"}]}]], "*", "\[Mu]1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NR1t2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", "recruit11"}], " ", 
      "+", " ", 
      RowBox[{"m", "*", "N2", "*", "recruit12"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
        RowBox[{"m", "*", "N2"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NR2t2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "*", "N2", "*", "recruit21"}], " ", 
      "+", " ", 
      RowBox[{"m", "*", "N2", "*", "recruit22"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "*", "N1"}], "+", 
        RowBox[{"m", "*", "N2"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p11", " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p12", " ", "=", " ", 
   FractionBox[
    RowBox[{"m", "*", "N2", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p13", "=", 
   FractionBox["NR", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p21", " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p22", " ", "=", " ", 
   FractionBox[
    RowBox[{"m", "*", "N2", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "Z"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p23", "=", 
   FractionBox["NR", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "*", "N1", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", 
     RowBox[{"m", "*", "N2", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Z"}], "]"}]}], "+", "NR"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NextGenTraitPDF1t2", " ", "=", " ", 
   RowBox[{
    RowBox[{"p11", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]1", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{"p12", "*", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]2", ",", "\[Sigma]"}], "]"}], ",", "z"}], "]"}]}], "+", 
    
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p11", "-", "p12"}], ")"}], "*", 
     "RecruitPDFsimple1"}]}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.719145030493312*^9, 3.719145461410664*^9}, {
  3.719145501586063*^9, 3.719145722036662*^9}, {3.719145754631399*^9, 
  3.71914581631558*^9}}]
},
WindowSize->{1080, 852},
WindowMargins->{{0, Automatic}, {Automatic, 185}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 76, 1, 32, "Input"],
Cell[637, 23, 92, 1, 32, "Input"],
Cell[732, 26, 365, 8, 32, "Input"],
Cell[1100, 36, 1353, 44, 100, "Input"],
Cell[2456, 82, 193, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[2674, 90, 794, 22, 32, "Input"],
Cell[3471, 114, 1907, 55, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5415, 174, 183, 3, 32, "Input"],
Cell[5601, 179, 1568, 49, 96, "Output"]
}, Open  ]],
Cell[7184, 231, 1539, 49, 136, "Input"],
Cell[CellGroupData[{
Cell[8748, 284, 171, 3, 32, "Input"],
Cell[8922, 289, 98, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9057, 295, 2524, 74, 143, "Input"],
Cell[11584, 371, 319, 5, 32, "Output"]
}, Open  ]],
Cell[11918, 379, 2650, 79, 128, "Input"],
Cell[CellGroupData[{
Cell[14593, 462, 262, 6, 32, "Input"],
Cell[14858, 470, 640, 21, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15535, 496, 510, 16, 56, "Input"],
Cell[16048, 514, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16157, 520, 328, 9, 32, "Input"],
Cell[16488, 531, 560, 16, 44, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[17085, 552, 622, 19, 26, "Input"],
Cell[17710, 573, 1998, 63, 83, "Output"]
}, Closed]],
Cell[19723, 639, 2268, 69, 92, "Input"],
Cell[CellGroupData[{
Cell[22016, 712, 1798, 57, 58, "Input"],
Cell[23817, 771, 1214, 40, 53, "Output"]
}, Open  ]],
Cell[25046, 814, 1695, 49, 72, "Input"],
Cell[26744, 865, 246, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[27015, 874, 895, 27, 54, "Input"],
Cell[27913, 903, 1729, 54, 104, "Output"],
Cell[29645, 959, 7151, 203, 409, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36833, 1167, 8263, 232, 400, "Input"],
Cell[45099, 1401, 5547, 162, 225, "Output"]
}, Open  ]],
Cell[50661, 1566, 127744, 3320, 5372, "Input"],
Cell[178408, 4888, 248, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[178681, 4897, 382, 9, 32, "Input"],
Cell[179066, 4908, 7855, 113, 207, "Message"],
Cell[186924, 5023, 7853, 113, 207, "Message"],
Cell[194780, 5138, 267, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195084, 5150, 4549, 131, 167, "Input"],
Cell[199636, 5283, 4379, 130, 122, "Output"]
}, Open  ]],
Cell[204030, 5416, 203, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[204258, 5425, 102, 1, 32, "Input"],
Cell[204363, 5428, 922, 29, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205322, 5462, 27619, 695, 1581, "Input"],
Cell[232944, 6159, 317180, 5257, 572, 209694, 3496, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550161, 11421, 422, 11, 54, "Input"],
Cell[550586, 11434, 243, 3, 32, "Output"]
}, Open  ]],
Cell[550844, 11440, 409, 10, 54, "Input"],
Cell[CellGroupData[{
Cell[551278, 11454, 2065, 57, 205, "Input"],
Cell[553346, 11513, 46359, 775, 260, "Output"]
}, Open  ]],
Cell[599720, 12291, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[599837, 12296, 6646, 173, 360, "Input"],
Cell[606486, 12471, 9769, 175, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616292, 12651, 6311, 168, 402, "Input"],
Cell[622606, 12821, 8338, 157, 506, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630981, 12983, 6264, 167, 402, "Input"],
Cell[637248, 13152, 13671, 255, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650956, 13412, 6126, 165, 402, "Input"],
Cell[657085, 13579, 69566, 1685, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726688, 15269, 374, 10, 54, "Input"],
Cell[727065, 15281, 175, 2, 32, "Output"]
}, Open  ]],
Cell[727255, 15286, 119, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[727399, 15292, 11528, 297, 1013, "Input"],
Cell[738930, 15591, 828594, 14752, 515, 635879, 11591, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1567561, 30348, 308, 9, 54, "Input"],
Cell[1567872, 30359, 197, 2, 32, "Output"]
}, Open  ]],
Cell[1568084, 30364, 171, 4, 32, "Input"],
Cell[1568258, 30370, 22544, 728, 1503, "Input"]
}
]
*)

